//MedsCap.cxx

#include "MedsCap.h"


long double MedsCap::Precio(void) const
  {
    long double t= 0.0;
    const_iterator i;
    for(i=begin();i!=end();i++)
      t+=(*i)->Precio();
    return t;
  }
ppl_precio MedsCap::PrecioR(void) const
  {
    ppl_precio t(0.0);
    const_iterator i;
    for(i=begin();i!=end();i++)
      t+=(*i)->PrecioR();
    return t;
  }
void MedsCap::Escribe(std::ostream &os,const std::string &cod,const std::string &pos) const
  {
    const_iterator i;
    size_t contador= 1;
    for(i=begin();i!=end();i++,contador++)
      {
        std::string pos_med= pos + num2str(contador,0) + '\\';
        (*i)->EscribeBC3(os,cod,pos_med);
      }
  }
void MedsCap::EscribeDescompBC3(std::ostream &os,const std::string &cod) const
  {
    if(size()<1) return;
    os << "~D" << '|' //Antes estaba con ~Y (daba problemas)
       << cod << '|';
    for(const_iterator i= begin();i!=end();i++)
      os << (*i)->CodigoUdObra() << "\\1\\" //factor 1
           << (*i)->Total() << '\\';
    os << '|' << endl_msdos;
  }
void MedsCap::ImprCompLtxMed(std::ostream &os, const MedsCap &otra) const
  {
    if(size())
      {
        os << ltx_tiny << std::endl;
        os << ltx_begin("longtable}{lrrrrr|lrrrrr") << std::endl
           << "\\multicolumn{6}{c|}{\\normalsize\\textbf{Proyecto de construcción}\\tiny} &"
           << "\\multicolumn{6}{c}{\\normalsize\\textbf{Proyecto modificado}\\tiny} \\\\"
           << std::endl << ltx_hline << std::endl
           << ltx_endhead << std::endl
           << "\\multicolumn{12}{r}{../..}\\\\" << std::endl
           << ltx_endfoot << std::endl
           << ltx_endlastfoot << std::endl;
        const_iterator i;
        for(i=begin();i!=end();i++)
          {
            const std::string cod= (*i)->CodigoUdObra();
            const_iterator j;
            for(j=otra.begin();j!=otra.end();j++)
		  if(cod == (*j)->CodigoUdObra()) break;
            if(j!=otra.end()) //La encotró
              (*i)->ImprCompLtxMed(os,*(*j));
            else
              (*i)->ImprCompLtxMed(os);
          }
        os << "\\end{longtable}" << std::endl;
        os << ltx_normalsize << std::endl;
      }
  }
void MedsCap::ImprLtxMed(std::ostream &os) const
  {
    if(size())
      {
        os << ltx_small << std::endl;
        os << "\\begin{longtable}{lrrrrr}" << std::endl
           << "\\multicolumn{6}{r}{../..}\\\\" << std::endl
           << "\\endfoot" << std::endl
           << "\\endlastfoot" << std::endl;
        const_iterator i;
        for(i=begin();i!=end();i++)
          (*i)->ImprLtxMed(os);
        os << "\\end{longtable}" << std::endl;
        os << ltx_normalsize << std::endl;
      }
  }
void MedsCap::ImprCompLtxPre(std::ostream &os, const std::string &tit, const MedsCap &otra, const std::string &tit_otra) const
  {
    if(size())
      {
        os << ltx_tiny << std::endl;
        os << ltx_begin("longtable}{lrlrr|lrlrr") << std::endl
           << "\\multicolumn{5}{c|}{\\normalsize\\textbf{Proyecto de construcción}\\tiny} &"
           << "\\multicolumn{5}{c}{\\normalsize\\textbf{Proyecto modificado}\\tiny} \\\\"
           << std::endl << ltx_hline << std::endl
           << "Partida & Cantidad & Descripción & \\multicolumn{1}{p{1.5cm}}{P. unitario} & Importe & Partida & Cantidad & Descripción & \\multicolumn{1}{p{1.5cm}}{P. unitario} & Importe \\\\" << std::endl
           << ltx_hline << std::endl
           << ltx_endhead << std::endl
           << "\\multicolumn{10}{r}{../..}\\\\" << std::endl
           << ltx_endfoot << std::endl
           << ltx_endlastfoot << std::endl;
        const_iterator i;
        for(i=begin();i!=end();i++)
          {
            const std::string cod= (*i)->CodigoUdObra();
            const_iterator j;
            for(j=otra.begin();j!=otra.end();j++)
		  if(cod == (*j)->CodigoUdObra()) break;
            if(j!=otra.end()) //La encotró
              (*i)->ImprCompLtxPre(os,*(*j));
            else
              (*i)->ImprCompLtxPre(os);
          }
        os << "\\multicolumn{4}{p{8cm}}{\\textbf{Total: "
           << tit_otra << "}} & \\textbf{" << otra.StrPrecioLtx() << "} & " << std::endl;
        os << "\\multicolumn{4}{p{8cm}}{\\textbf{Total: "
           << tit << "}} & \\textbf{" << StrPrecioLtx() << "}\\\\" << std::endl;
        os << "\\end{longtable}" << std::endl;
        os << ltx_normalsize << std::endl;
      }
  }
void MedsCap::ImprLtxPre(std::ostream &os,const std::string &tit) const
  //Imprime presupuestos parciales.
  {
    if(size())
      {
        os << ltx_small << std::endl;
        os << "\\begin{longtable}{lrlrr}" << std::endl
           << "Partida & Cantidad & Descripción & \\multicolumn{1}{p{1.5cm}}{Precio unitario} & Importe \\\\" << std::endl
           << "\\hline" << std::endl
           << "\\endhead" << std::endl
           << "\\multicolumn{5}{r}{../..}\\\\" << std::endl
           << "\\endfoot" << std::endl
           << "\\endlastfoot" << std::endl;
        for(const_iterator i=begin();i!=end();i++)
          (*i)->ImprLtxPre(os);
        os << "\\multicolumn{4}{p{8cm}}{\\textbf{Total: " << tit << "}} & \\textbf{" << StrPrecioLtx() << "}\\\\" << std::endl; 
        os << "\\end{longtable}" << std::endl;
        os << ltx_normalsize << std::endl;
      }
  }
void MedsCap::EscribeHCalcMed(std::ostream &os) const
  {
    if(size())
      {
        const_iterator i;
        for(i=begin();i!=end();i++)
          (*i)->EscribeHCalcMed(os);
      }
  }
void MedsCap::EscribeHCalcPre(std::ostream &os) const
  {
    if(size())
      {
        const_iterator i;
        for(i=begin();i!=end();i++)
          (*i)->EscribeHCalcPre(os);
      }
  }

InformeMediciones MedsCap::GetInformeMediciones(void) const
  {
    InformeMediciones retval;
    for(const_iterator i= begin();i!=end();i++)
      retval.Inserta((*i)->Informe());
    return retval;
  }
