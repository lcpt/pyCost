%!PS-Adobe-3.0
%%BoundingBox: 54 72 535 761
%%Creator: LCPT
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%Pages: 99
%%PageOrder: Ascend
%%Title: Formato FIEBCD 98 
%%EndComments
%%BeginProlog
[ /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
 /two /three /four /five /six /seven /eight /nine /colon /semicolon
 /less /equal /greater /question /at /A /B /C /D /E
 /F /G /H /I /J /K /L /M /N /O
 /P /Q /R /S /T /U /V /W /X /Y
 /Z /bracketleft /backslash /bracketright /asciicircum /underscore /quoteleft /a /b /c
 /d /e /f /g /h /i /j /k /l /m
 /n /o /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /space /exclamdown /cent /sterling /currency /yen /brokenbar /section /dieresis /copyright
 /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf
 /threequarters /questiondown /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde
 /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
 /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
 /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave
 /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] /isolatin1encoding exch def
/c { matrix currentmatrix currentpoint translate
     3 1 roll scale newpath 0 0 1 0 360 arc setmatrix } bind def
/F0
    /Times-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f0 { /F0 findfont exch scalefont setfont } bind def
/F1
    /Times-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f1 { /F1 findfont exch scalefont setfont } bind def
/F2
    /Times-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f2 { /F2 findfont exch scalefont setfont } bind def
/F3
    /Times-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f3 { /F3 findfont exch scalefont setfont } bind def
/F4
    /Courier findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f4 { /F4 findfont exch scalefont setfont } bind def
/F5
    /Courier-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f5 { /F5 findfont exch scalefont setfont } bind def
/F6
    /Courier-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f6 { /F6 findfont exch scalefont setfont } bind def
/F7
    /Courier-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f7 { /F7 findfont exch scalefont setfont } bind def
/rhc {
    {
        currentfile read {
	    dup 97 ge
		{ 87 sub true exit }
		{ dup 48 ge { 48 sub true exit } { pop } ifelse }
	    ifelse
	} {
	    false
	    exit
	} ifelse
    } loop
} bind def

/cvgray { % xtra_char npix cvgray - (string npix long)
    dup string
    0
    {
	rhc { cvr 4.784 mul } { exit } ifelse
	rhc { cvr 9.392 mul } { exit } ifelse
	rhc { cvr 1.824 mul } { exit } ifelse
	add add cvi 3 copy put pop
	1 add
	dup 3 index ge { exit } if
    } loop
    pop
    3 -1 roll 0 ne { rhc { pop } if } if
    exch pop
} bind def

/smartimage12rgb { % w h b [matrix] smartimage12rgb -
    /colorimage where {
	pop
	{ currentfile rowdata readhexstring pop }
	false 3
	colorimage
    } {
	exch pop 8 exch
	3 index 12 mul 8 mod 0 ne { 1 } { 0 } ifelse
	4 index
	6 2 roll
	{ 2 copy cvgray }
	image
	pop pop
    } ifelse
} def
/cshow { dup stringwidth pop 2 div neg 0 rmoveto show } bind def
/rshow { dup stringwidth pop neg 0 rmoveto show } bind def
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
gsave
/rowdata 477 string def
128.8 694.4 translate
222.6 66.5 scale
318 95 4 [318 0 0 -95 0 95]
 smartimage12rgb
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff000000000000000000000000000000000000000000000000000000
000000000000000000000000000ffffffffffffffffffffffff000000000000000000000000000
000000000000000ffffffffffffffffffffffffffffff000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000fff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000
000000000000000000000000000000000000000000000ffffffffffffffffffffffff000000000
000000000000000000000000000000000ffffffffffffffffffffffffffffff000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000fffffffffffffffffffffffffffffffff1f61f6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000
000000000000000000000000000000000000000000000000000000000000000fffffffffffffff
fffffffff000000000000000000000000000000000000000000fffffffffffffffffffffffffff
fff000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000fffffffffffffffffffffffffffffffff1f61f61f61f6
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
000000000000000000000000000000000000000000000000000000000000000000000000000000
000ffffffffffffffffffffffff000000000000000000000000000000000000000000fffffffff
fffffffffffffffffffff000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000fffffffffffffffffffffffffff
ffffff1f61f61f61f61f61f6ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff000000000000000000000000000000000000000000000000000000000000
000000000000000000000ffffffffffffffffffffffff000000000000000000000000000000000
000000000ffffffffffffffffffffffffffffff000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000fffffffff
ffffffffffffffffffffffff1f61f61f61f61f61f61f61f6ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000
000000000000000000000000000000000000000ffffffffffffffffffffffff000000000000000
000000000000000000000000000ffffffffffffffffffffffffffffff000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000fffffffffffffffffffffffffffffffff1f61f61f61f61f61f61f61f61f61f6ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000
000000000000000000000000000000000000000000000000000000000fffffffffffffffffffff
fff000000000000000000000000000000000000000000ffffffffffffffffffffffffffffff000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000fffffffffffffffffffffffffffffffff1f61f61f61f61f61f6
1f61f61f61f61f61f6ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000
000000000000000000000000000000000000000000000000000000000000000000000000000fff
fffffffffffffffffffff000000000000000000000000000000000000000000fffffffffffffff
fffffffffffffff000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffff
1f61f61f61f61f61f61f61f61f61f61f61f61f61f6ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff000000000000000000000000000000000000000000000000000000000000000000
000000000000000ffffffffffffffffffffffff000000000000000000000000000000000000000
000ffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000fffffffffffffff
ffffffffffffffffff1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000
000000000000000000000000000000000ffffffffffffffffffffffff000000000000000000000
000000000000000000000ffffffffffffffffffffffffffffff000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000fffffffffffffffffffffffffffffffff1f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f6fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000
000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000
000000000000000000000000000000000000000ffffffffffffffffffffffffffffff000000000
000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff1f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f6fffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000
000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffff000000000000000000000000000000000000000000fffffffffffffffffffff
fffffffff000000000000000000000000000000000000000000fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6fffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff000000000000000000000000000000000000000fffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000fff
fffffffffffffffffffffffffff000000000000000000000000000000000000000000fffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f6fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff000000000000000000000000000000000000000fffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000
000000000000000ffffffffffffffffffffffffffffff000000000000000000000000000000000
000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f6fffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000
000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000
000000000000000000000000000000000ffffffffffffffffffffffffffffff000000000000000
000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff1f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000
000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff000000000000000000000000000000000000000000fffffffffffffffffffffffffff
fff000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6fff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffff000000000000000000000000000000000000000000fffffffff
fffffffffffffffffffff000000000000000000000000000000000000000000fffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f6fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff000000000000000000000000000000000000000fffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000
000000000ffffffffffffffffffffffffffffff000000000000000000000000000000000000000
000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6fffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000fff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000
000000000000000000000000000ffffffffffffffffffffffffffffff000000000000000000000
000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff1f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000
000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fff000000000000000000000000000000000000000000ffffffffffffffffffffffffffffff000
000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f6ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000
000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffff000000000000000000000000000000000000000000fffffffffffffff
fffffffffffffff000000000000000000000000000000000000000000fffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f6ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff000000000000000000000000000000000000000fffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000
000ffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000fffffffffffffffffffff
ffffffffffffffffff1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000
000000000000000000000000000000fffffffffffffffffffffffffff000000000000000000000
000000000000000000000ffffffffffffffffffffffffffffff000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000fff
ffffffffffffffffffffffffffffffffffff1f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f6ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000
000000000000000000000000000000000000000000000000fffffffffffffffffffffffffff000
000000000000000000000000000000000000000ffffffffffffffffffffffffffffff000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000fffffffffffffffffffffffffffffffffffffff1f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f6ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000
000000000000000000000000000000000000000000000000000000000000000000ffffffffffff
fffffffffffffff000000000000000000000000000000000000000000fffffffffffffffffffff
fffffffff000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffff1f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff000000000000000000000000000000000000000000000000000000000000000000000000
000000fffffffffffffffffffffffffff000000000000000000000000000000000000000000fff
fffffffffffffffffffffffffff000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000fffffffffffffffffffffffffff
ffffffffffff1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff000000000000000000000000000000000000000000000000000000
000000000000000000000000fffffffffffffffffffffffffff000000000000000000000000000
000000000000000ffffffffffffffffffffffffffffff000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000fffffffff
ffffffffffffffffffffffffffffff1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f6ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000
000000000000000000000000000000000000000000fffffffffffffffffffffffffff000000000
000000000000000000000000000000000ffffffffffffffffffffffffffffff000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000fffffffffffffffffffffffffffffffffffffff1f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6fffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000
000000000000000000000000000000000000000000000000000000000000ffffffffffffffffff
fffffffff000000000000000000000000000000000000000000fffffffffffffffffffffffffff
fff000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000fffffffffffffffffffffffffffffffffffffff1f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6fffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
000000000000000000000000000000000000000000000000000000000000000000000000000000
fffffffffffffffffffffffffff000000000000000000000000000000000000000000fffffffff
fffffffffffffffffffff000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffff
ffffff1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6fffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff000000000000000000000000000000000000000000000000000000000000
000000000000000000fffffffffffffffffffffffffff000000000000000000000000000000000
000000000ffffffffffffffffffffffffffffff000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000fffffffffffffff
ffffffffffffffffffffffff1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f6fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000fff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000
000000000000000000000000000ffffffffffffffffffffffffffffff000000000000000000000
000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff1f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f6fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000
000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fff000000000000000000000000000000000000000000ffffffffffffffffffffffffffffff000
000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f6fffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000
000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffff000000000000000000000000000000000000000000fffffffffffffff
fffffffffffffff000000000000000000000000000000000000000000fffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f6fffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff000000000000000000000000000000000000000fffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000
000ffffffffffffffffffffffffffffff000000000000000000000000000000000000000000fff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff000000000000000000000000000000000000000fffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000
000000000000000000000ffffffffffffffffffffffffffffff000000000000000000000000000
000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff1f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6fffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000
000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000
000000000000000000000000000000000000000ffffffffffffffffffffffffffffff000000000
000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff1f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6fff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000
000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffff000000000000000000000000000000000000000000fffffffffffffffffffff
fffffffff000000000000000000000000000000000000000000fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f6fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff000000000000000000000000000000000000000fffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000fff
fffffffffffffffffffffffffff000000000000000000000000000000000000000000fffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f6fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff000000000000000000000000000000000000000fffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000
000000000000000ffffffffffffffffffffffffffffff000000000000000000000000000000000
000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f6fffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffff72f72fffffffffffffffffffffffffff000000000000000000000000000
000000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000
000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000
000000000fffffffffffffffffffffffffffffffff000000000000000000000000000000000000
000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000
000000000000000000000000000000000ffffffffffffffffffffffffffffff000000000000000
000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff1f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6fffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff72f72f72f72fffffffffffffffffffffffffff000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000
000000000000000000000000000000000000000000000000000000000000000000ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000
000000000000000000000000000000000000000fffffffffffffffffffff000000000000000000
000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff000000000000000000000000000000000000000000fffffffffffffffffffffffffff
fff000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1f61f61f61f6
1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6fffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffff72f72f72f72f72f72ffffffffffffffffff
fffffffff000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffff
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000fffffffff
000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffff000000000000000000000000000000000000000000fffffffff
fffffffffffffffffffff000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff
ffffff1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6fffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffff72f72f72f72f72f72f72f72
fffffffffffffffffffffffffff000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff
ffffffffffffffffff000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000fffffffff000000000000000000000000000000000000000fffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000
000000000ffffffffffffffffffffffffffffff000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000ffffff
ffffffffffffffffffffffff1f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f61f6
1f6ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff72f72f72f72
f72f72f72f72f72f72fffffffffffffffffffffffffff000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000fff
ffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000fffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fff000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000fffffffff000000000000000000000000000000000000000fff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000
000000000000000000000000000ffffffffffffffffffffffffffffff000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000ffffffffffffffffffffffffffffff1f61f61f61f61f61f61f61f61f61f61f61f6
1f61f61f61f61f6fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffff72f72f72f72f72f72f72f72f72f72f72fffffffffffffffffffffffffff000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000ffffffffffffffffffffffffffffffffffff000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000fffffffff000000000000000000000000
000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fff000000000000000000000000000000000000000000ffffffffffffffffffffffffffffff000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000ffffffffffffffffffffffffffffff1f61f61f61f61f61f6
1f61f61f61f61f61f61f61f61f6fffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffff72f72f72f72f72f72f72f72f72f72f72f72f72ffffffffffffffffffffffff
fff000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000fffffffffffffffffffffffffffffffff000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000fffffffff000000
000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffff000000000000000000000000000000000000000000fffffffffffffff
fffffffffffffff000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffff
1f61f61f61f61f61f61f61f61f61f61f61f61f6fffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffff72f72f72f72f72f72f72f72f72f72f72f72f72f72f72ffffff
fffffffffffffffffffff000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000ffffffffffffffffff
ffffffffffff000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000fffffffff000000000000000000000000000000000000000fffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000
000ffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000ffffffffffff
ffffffffffffffffff1f61f61f61f61f61f61f61f61f61f61f6fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffff72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72fffffffffffffffffffffffffff000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000fffffffffffffffffffffffffff000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000fffffffff000000000000000000000000000000000000000fffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000
000000000000000000000ffffffffffffffffffffffffffffff000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000ffffffffffffffffffffffffffffff1f61f61f61f61f61f61f61f61f6fffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffff72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72fffffffffffffffffffffffffff000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000ffffffffffffffffffffffff000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffff000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000ffffffffffff000000000000000000000000000000
000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000
000000000000000000000000000000000000000ffffffffffffffffffffffffffffff000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000ffffffffffffffffffffffffffffff1f61f61f61f61f61f61f6fff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72fffffffffffffffffffffffffff000
000000000000000000000000000000000000000ffffffffffffffffffffffff000000000000000
000000000000000000000000000000000000000000ffffffffffffffffffffffff000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffff
ffffffffffff000000000000000000000000000000000000000000000000000000000000000000
000ffffffffffffffffffffffff000000000000000000000000000ffffffffffff000000000000
000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffff000000000000000000000000000000000000000000fffffffffffffffffffff
fffffffff000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000ffffffffffffffffffffffffffffff1f61f6
1f61f61f6fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72ffffffffffff
fffffffffffffff000000000000000000000000000000000000000000fffffffffffffffffffff
fffffffff000000000000000000000000000000000000000000000000000ffffffffffffffffff
ffffff000000000000000000000000000000000000000000fffffffffffffffffffffffffff000
000000000000000000000000000000000000000000000000000000000000000000ffffffffffff
ffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000
000000000ffffffffffffffffffffffffffffffffffffffffffffffff000000000000000ffffff
ffffff000000000000000000000000000000000000000fffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000fff
fffffffffffffffffffffffffff000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000ffffffffffffffffff
ffffffffffff1f61f61f6fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffff72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72fffffffffffffffffffffffffff000000000000000000000000000000000000000000fff
fffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000
ffffffffffffffffffffffff000000000000000000000000000000000000000000ffffffffffff
fffffffffffffffffffff000000000000000000000000000000000000000000000000000000000
000000fffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000
000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff
000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff1f6fffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffff72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72fffffffffffffffffffffffffff000000000000000000000000000
000000000000000fffffffffffffffffffffffffffffffffffffff000000000000000000000000
000000000000000000ffffffffffffffffffffffff000000000000000000000000000000000000
000000ffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000
000000000000000000000000000ffffffffffffffffffffffffffffffffffff000000000000000
000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffff72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72fffffffffffffffffffffffffff000000000
000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffff000000
000000000000000000000000000000000000ffffffffffffffffffffffff000000000000000000
000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffff000000000
000000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffff
000000000000000000000000000000000000000000000000000fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffff72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72ffffffffffffffffff
fffffffff000000000000000000000000000000000000000000fffffffffffffffffffffffffff
ffffffffffff000000000000000000000000000000000000000000ffffffffffffffffffffffff
000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffff
ffffffffffff000000000000000000000000000000000000000000000000000000ffffffffffff
ffffffffffffffffff000000000000000000000000000000000000000000000000ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
fffffffffffffffffffffffffff000000000000000000000000000000000000000000fffffffff
ffffffffffffffffffffffffffffff000000000000000000000000000000000000000000ffffff
ffffffffffffffffff000000000000000000000000000000000000000000ffffffffffffffffff
fffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000
000000ffffffffffffffffffffffffffffff000000000000000000000000000000000000000000
000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72fffffffffffffffffffffffffff000000000000000000000000000000000
000000000fffffffffffffffffffffffffffffffffffffff000000000000000000000000000000
000000000000ffffffffffffffffffffffff000000000000000000000000000000000000000000
ffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000
000000000000000000000000fffffffffffffffffffffffffff000000000000000000000000000
000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffff72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72fffffffffffffffffffffffffff000000000000000
000000000000000000000000000ffffffffffffffffffffffffffffffffffff000000000000000
000000000000000000000000000000ffffffffffffffffffffffff000000000000000000000000
000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000
000000000000000000000000000000000000000000000ffffffffffffffffffffffff000000000
000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffff72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72ffffffffffffffffffffffff
fff000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffff
fff000000000000000000000000000000000000000000000ffffffffffffffffffffffff000000
000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffff
fffffffffffffff000000000000000000000000000000000000000000000000fffffffffffffff
fffffffff000000000000000000000000000000000000000000fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffff72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72ffffff
fffffffffffffffffffff000000000000000000000000000000000000000000fffffffffffffff
ffffffffffff000000000000000000000000000000000000000000000000000fffffffffffffff
ffffffffffff000000000000000000000000000000000000000000ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000
000fffffffffffffffffffff000000000000000000000000000000000000000000000fffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffff72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72fffffffffffffffffffffffffff000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
ffffffffffffffffffffffffffffff000000000000000000000000000000000000000000ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000
000000000000000000000fffffffffffffffffffff000000000000000000000000000000000000
000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72fffffffffffffffffffffffffff000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000ffffffffffffffffffffffffffffff000000000000000000000000000000
000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000
000000000000000000000000000000000000000fffffffffffffffffffff000000000000000000
000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72fffffffffffffffffffffffffff000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000fffffffffffffffffffffffffffffffff000000000000
000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff000000000000000000000000000000000000000000000fffffffffffffffffffff
000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffff72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72ffffffffffff
fffffffffffffff000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffff
ffffff000000000000000000000000000000000000000000ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000fff
ffffffffffffffffff000000000000000000000000000000000000000000ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffff72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72fffffffffffffffffffffffffff000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000fffffffffffffffffffff
ffffffffffffffffffffffff000000000000000000000000000000000000000000ffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000
000000000000000fffffffffffffffffffff000000000000000000000000000000000000000000
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffff72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72fffffffffffffffffffffffffff000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000fffffffff
ffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000
000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000
000000000000000000000000000000000ffffffffffffffffff000000000000000000000000000
000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffff72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72fffffffffffffffffffffffffff000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000ffffffffffffffffffffffffffffffffffffffffff000000000000000000
000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff000000000000000000000000000000000000000000ffffffffffffffffff000000000
000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72ffffffffffffffffff
fffffffff000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffff
000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffff000000000000000000000000000000000000000000fffffffff
fffffffff000000000000000000000000000000000000000000000ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffff72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
fffffffffffffffffffffffffff000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000fffffffffffffff
ffffffffffffffffff000000000000000000000000000000000000000000ffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000
000000000fffffffffffffffffffff000000000000000000000000000000000000000000ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffff72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72fffffffffffffffffffffffffff000000000000000000000000000000000
000000000ffffffffffffffffff000000000000000000000000000000000000000000000000000
000000000fffffffffffffffffffffffffff000000000000000000000000000000000000000000
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000
000000000000000000000000000fffffffffffffffffffff000000000000000000000000000000
000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72fffffffffffffffffffffffffff000000000000000
000000000000000000000000000fffffffffffffffffffffffffffffffff000000000000000000
000000000000000000000000000000ffffffffffffffffffffffff000000000000000000000000
000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fff000000000000000000000000000000000000000000fffffffffffffffffffff000000000000
000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffff72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72ffffffffffffffffffffffff
fff000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffff
ffffff000000000000000000000000000000000000000000000fffffffffffffffffffff000000
000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff000000000000000000000000000000000000000000000fffffffffffffff
ffffff000000000000000000000000000000000000000000000fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffff72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72ffffff
fffffffffffffffffffff000000000000000000000000000000000000000000fffffffffffffff
fffffffffffffffffffffffffff000000000000000000000000000000000000000000fffffffff
ffffffffffff000000000000000000000000000000000000000000ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000
000fffffffffffffffffffff000000000000000000000000000000000000000000000fffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72fffffffffffffffffffffffffff000000000000000000000000000000000000000
000ffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000
000000000fffffffffffffffffffff000000000000000000000000000000000000000000ffffff
fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000
000000000000000000000fffffffffffffffffffff000000000000000000000000000000000000
000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffff72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72fffffffffffffffffffffffffff000000000000000000000
000000000000000000000ffffffffffffffffffffffffffffffffffffffffff000000000000000
000000000000000000000000000fffffffffffffffffffff000000000000000000000000000000
000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000
000000000000000000000000000000000000ffffffffffffffffffffffff000000000000000000
000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffff72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72fffffffffffffffffffffffffff000
000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffff
ffffff000000000000000000000000000000000000000fffffffffffffffffffff000000000000
000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffff000000000000000000000000000000000000000000000000ffffffffffffffffffffffff
fff000000000000000000000000000000000000000000000000fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffff72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72ffffffffffff
fffffffffffffff000000000000000000000000000000000000000000fffffffffffffffffffff
ffffffffffffffffffffffff000000000000000000000000000000000000000000ffffffffffff
ffffff000000000000000000000000000000000000000000ffffffffffffffffffffffffffffff
ffffffffffffffffffffffff000000000000000000000000000000000000000000000000ffffff
fffffffffffffffffffff000000000000000000000000000000000000000000000000000ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72fffffffffffffffffffffffffff000000000000000000000000000000000000000000fff
fffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000
000000ffffffffffffffffff000000000000000000000000000000000000000000ffffffffffff
fffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000
000000000fffffffffffffffffffffffffffffffff000000000000000000000000000000000000
000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffff72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72fffffffffffffffffffffffffff000000000000000000000000000
000000000000000ffffffffffffffffffffffffffffffffffffffffff000000000000000000000
000000000000000000000000ffffffffffffffffff000000000000000000000000000000000000
000000fffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000
000000000000000000000000000fffffffffffffffffffffffffffffffff000000000000000000
000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffff72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72fffffffffffffffffffffffffff000000000
000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffff000
000000000000000000000000000000000000000fffffffffffffffffffff000000000000000000
000000000000000000000000ffffffffffffffffffffffffffffffffffffffffff000000000000
000000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffff
fff000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72ffffffffffffffffff
fffffffff000000000000000000000000000000000000000000fffffffffffffffffffffffffff
ffffffffffff000000000000000000000000000000000000000000000fffffffffffffffffffff
000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffff
000000000000000000000000000000000000000000000000000000000000ffffffffffffffffff
fffffffffffffffffffff000000000000000000000000000000000000000000000000000000000
000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffff72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72f72
fffffffffffffffffffffffffff000000000000000000000000000000000000000000fffffffff
fffffffffffffffffffff000000000000000000000000000000000000000000000000000000fff
ffffffffffffffffff000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000fff
ffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000
000000000000000000000000ffffffffffffffffffffffffffffffffffffffffff000000000000
000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffff72f72f72f72f72f72f72f72f72f72f72f72f72
f72f72f72f72f72f72fffffffffffffffffffffffffff000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000fffffffffffffffffffff000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff72f72f72f72f72
f72f72f72f72f72f72f72f72f72f72f72f72fffffffffffffffffffffffffff000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000fffffffffffffffffffff000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffff
fff000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffff72f72f72f72f72f72f72f72f72f72f72f72f72f72f72ffffffffffffffffffffffff
fff000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000ffffffffffffffffffffffff000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffff72f72f72f72f72f72f72f72f72f72f72f72f72ffffff
fffffffffffffffffffff000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000ffffffffffff
ffffffffffff000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000fffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff72f72f72f72f72f72f72
f72f72f72f72fffffffffffffffffffffffffff000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000fffffffffffffffffffffffffff000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffff72f72f72f72f72f72f72f72f72fffffffffffffffffffffffffff000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000ffffffffffffffffffffffffffffff000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffff72f72f72f72f72f72f72fffffffffffffffffffffffffff000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000ffffffffffffffffffffffffffffffffffff000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000fffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffff72f72f72f72f72ffffffffffff
fffffffffffffff000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffff
ffffff000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000fff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff72
f72f72fffffffffffffffffffffffffff000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff
ffffffffffffffffffffffff000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffff72fffffffffffffffffffffffffff000000000000000000000000000
000000000000000000000000000000000000000000000000000fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000
000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000
000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
grestore
239 672.7 moveto
12 f0
( ) show
0 646.1 moveto
12 f0
( ) show
gsave
/rowdata 509 string def
121.8 579.6 translate
237.3 51.1 scale
339 73 4 [339 0 0 -73 0 73]
 smartimage12rgb
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000fff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff0fffffffffffffffffffff000000000000000000000000000000fffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fff000000ffffffffffffffffffffffffffffff000000000000000000000000000ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fff000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff0fffffffffffffffffffff000000000000000000000000000000ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000
000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff000000ffffffffffffffffffffffffffffff000000000000000000000000000000000000
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff0fffffffffffffffffffff000000000000000000000000000000fffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffff000000fffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff000000ffffffffffffffffffffffffffffff000000000000000000000000000000000
000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffff0fffffffffffffffffffff000000000fffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff000000ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fff000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff000000ffffffffffffffffffffffffffffff000000000000000000000000000000
000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff0fffffffffffffffffffff000000000ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffff000000fffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffff000000ffffffffffffffffffffffffffffff000000000000ffffffffffff000
000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffff000000000000fffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffff0fffffffffffffffffffff000000000fffffffffffffffffffffffffff
ffffffffffff000000000000000000fffffffffffffffffffff000000000fff000000000000fff
fff000000000fff000000000000000ffffffffffff000000000000ffffffffffffffffffffffff
fff000000000000000fffffffffffffff000000000000000000000000ffffffffffffffffff000
000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000
000ffffff000000fffffffffffffffffffff000000000000000000ffffffffffffffffffffffff
ffffffffffffffffff000000ffffffffffffffffffffffffffffff000000000000ffffffffffff
fff000000000000000ffffffffffff000000000000000000000000000fffffffffffffffffffff
fff000000000000000000000000ffffffffffffffffff000000000000000000000ffffffffffff
ffffffffffff000000000000000000000000fffffffffffffffffffffffffffffffffffffff000
000000000000ffffff000000000000fffffffffffffffffffff000000000000000000fffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff0fffffffffffffffffffff000000000ffffffffffffffffffffffff
ffffffffffff000000000000000000000000ffffffffffffffffff000000000000000000000000
ffffff000000000fff000000000000000000ffffff000000000000000000ffffffffffffffffff
000000000000000000000000000fffffffff000000000000000000000000fffffffffffffff000
000000000000000000000fffffffffffffffffffffffffffffffffffffffffffff000000000000
000000000fff000000ffffffffffffffffff000000000000000000000000ffffffffffffffffff
fffffffffffffffffffff000000ffffffffffffffffffffffffffffff000000000000fffffffff
ffffff000000000000fffffffffffffff000000000000000000000000000000fffffffffffffff
000000000000000000000000000000ffffffffffff000000000000000000000000000000ffffff
fffffffff000000000000000000000000000000ffffffffffffffffffffffffffffffffffff000
000000000000000000fff000000000000fffffffffffffff000000000000000000000000000fff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffff0fffffffffffffffffffff000000000fffffffffffffffffffff
ffffffffffff000000000ffffffffffff000000000fffffffffffffff000000000000000ffffff
fffffffff000000000000000ffffff000000000000000000fffffffff000000000ffffffffffff
fff000000ffffffffffff000000000ffffffffffffffffff000000fffffffffffffffffffff000
000000ffffffffffff000000000fffffffffffffffffffffffffffffffffffffff000000000fff
fffffffff000000000000fffffffffffffff000000000ffffffffffff000000fffffffffffffff
ffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff000000000000000000
000000000000000000000fffffffffffffff000000000000000000000000000000000fffffffff
fff000000000000000000000000000ffffffffffff000000000000000000000000000000000000
ffffffffffff000000000000000000000000000fffffffffffffffffffffffffffffffffffffff
000000000000000000000000000000000000ffffffffffff000000000000000000000000000000
000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff0fffffffffffffffffffff000000000000000000000000000
000fffffffff000000000ffffffffffffffffff000000000ffffffffffff000000000000ffffff
ffffffffffff000000000000ffffffffffff000000000000fffffffffffffff000000fffffffff
fffffffffffffffffffffffffff000000000fffffffffffffff000000ffffffffffffffffff000
000000ffffffffffffffffff000000000fffffffffffffffffffffffffffffffff000000000fff
fffffffffffffff000000000fffffffffffffff000000ffffffffffffffffff000000fffffffff
fffffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff000000000000000
000000000000000000000ffffffffffffffffffffffffffffffffffff000000000000000000fff
fff000000000000ffffffffffffffffffffffffffffff000000000000ffffffffffff000000000
000fffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff
000000000000000ffffff000000000000000000fffffffff000000000000000ffffffffffff000
000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffff0fffffffffffffffffffff000000000000000000000000
000000fffffffff000000000fffffffffffffffffffff000000ffffffffffff000000000ffffff
fffffffffffffff000000000ffffffffffffffffff000000000fffffffffffffff000000ffffff
fffffffffffffffffffffffffffffffff000000fffffffffffffff000000ffffffffffffffffff
000000000fffffffffffffffffffff000000000ffffffffffffffffffffffffffffff000000000
ffffffffffffffffff000000000ffffffffffff000000fffffffffffffffffffff000000ffffff
ffffffffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff000000000000
000000000000000000000ffffffffffffffffffffffffffffffffffffffffff000000000000000
ffffff000000000000000fffffffffffffffffffffffffff000000000000fffffffffffffff000
000000000ffffff000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff
fff000000000000000fffffffff000000000000000fffffffff000000000000fffffffffffffff
000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff0fffffffffffffffffffff000000000ffffffffffff
ffffffffffffffffff000000ffffffffffffffffffffffff000000000fffffffff000000000fff
ffffffffffffffffff000000000ffffffffffffffffff000000ffffffffffffffffff000000fff
fffffffffffffffffffff000000000000000000000fffffffffffffff000000fffffffffffffff
fff000000ffffffffffffffffffffffff000000000ffffffffffffffffffffffffffffff000000
ffffffffffffffffffffffff000000ffffffffffff000000000000000000000000000000000000
fffffffffffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff000000000
000000000000000000000000000000ffffffffffffffffff000000000000000000000000000000
000ffffff000000000000000000000000fffffffffffffff000000000000000000000000000000
000000000000ffffff000000000000000000000000ffffffffffffffffffffffffffffffffffff
fff000000000000000ffffffffffff000000000000000fffffffff000000000000000000000000
000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffff000000000fffffffff
fffffffffffffffffffff000000ffffffffffffffffffffffff000000000fffffffff000000000
fffffffffffffffffffff000000000ffffffffffffffffff000000ffffffffffffffffff000000
ffffffffffffffffff000000000000000000000000000fffffffffffffff000000ffffffffffff
ffffff000000ffffffffffffffffffffffff000000000ffffffffffffffffffffffffffffff000
000ffffffffffffffffffffffff000000ffffffffffff000000000000000000000000000000000
000fffffffffffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff000000
000000fffffffffffffff000000000000000ffffffffffff000000000000000000000000000000
000000fffffffff000000000000000000000000000fffffffff000000000000000000000000000
000000000000000fffffffff000000000000000000000000000fffffffffffffffffffffffffff
ffffff000000000000000fffffffffffffff000000000000fffffffff000000000000000000000
000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffff000000000ffffff
fffffffffffffffffffff000000000ffffffffffffffffffffffff000000000fffffffff000000
000fffffffffffffffffffff000000000ffffffffffffffffff000000ffffffffffffffffff000
000ffffffffffff000000000000fffffffffffffff000000fffffffffffffff000000fffffffff
ffffff000000000ffffffffffffffffffffffff000000000ffffffffffffffffffffffffffffff
000000ffffffffffffffffffffffff000000ffffffffffff000000ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff000
000000000fffffffffffffff000000000000000fffffffff000000000000000fffffffff000000
000000000fffffffffffffff000000000000000000000000ffffff000000000000000000000000
000000000000000000fffffffffffffff000000000000000000000000fffffffffffffffffffff
fffffffff000000000000000fffffffffffffff000000000000fffffffff000000000000000000
000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffff000000000fff
fffffffffffffffffffffffffff000000ffffffffffffffffffffffff000000000fffffffff000
000000fffffffffffffffffffff000000000ffffffffffffffffff000000ffffffffffffffffff
000000ffffffffffff000000000ffffffffffffffffff000000fffffffffffffff000000ffffff
ffffffffffff000000ffffffffffffffffffffffff000000000fffffffffffffffffffffffffff
fff000000ffffffffffffffffffffffff000000ffffffffffff000000fffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff
000000000000fffffffffffffff000000000000000ffffff000000000000000ffffffffffff000
000000000000ffffffffffffffffffffffff000000000000000ffffff000000000000000ffffff
fffffffffffffffffffffffffffffffffffffffffffff000000000000000ffffffffffffffffff
ffffffffffff000000000000000ffffffffffff000000000000000fffffffff000000000000fff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffff000000000
ffffffffffffffffffffffffffffff000000000fffffffffffffffffffff000000ffffffffffff
000000000fffffffffffffffffffff000000000ffffffffffffffffff000000fffffffffffffff
fff000000ffffffffffff000000ffffffffffffffffff000000000fffffffffffffff000000fff
fffffffffffffff000000000fffffffffffffffffffff000000fffffffffffffffffffffffffff
ffffff000000000ffffffffffffffffff000000000ffffffffffff000000000fffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffff000000fffffffffffffffffffffffffff
fff000000000000ffffffffffff000000000000000000ffffff000000000000ffffffffffff000
000000000000000fffffffffffffffffffffffffff000000000000fffffffff000000000000000
fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000fffffffffffffff
ffffffffffffffffff000000000000000ffffff000000000000000000fffffffff000000000000
000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffff000000
000ffffffffffffffffffffffffffffff000000000000fffffffffffffff000000000fffffffff
fff000000000fffffffffffffffffffff000000000ffffffffffffffffff000000ffffffffffff
ffffff000000ffffffffffff000000000fffffffffffffff000000000fffffffffffffff000000
ffffffffffffffffff000000000000fffffffffffffff000000000ffffffffffffffffffffffff
fffffffff000000000000ffffffffffff000000000000fffffffffffffff000000000fffffffff
fffffffff000ffffffffffffffffffffffffffffffffffff000000ffffffffffffffffffffffff
ffffff000000000000000000000000000000000000000000ffffff000000000000000000000000
000000000000000000ffffff000000000000000000000000000000000fffffffff000000000000
000000000000000000000000fffffffff000000000000000000000000000000000ffffffffffff
fffffffffffffffffffff000000000000000000000000000000000000000ffffffffffff000000
000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffff000
000000fffffffffffffffffffffffffffffffff000000000000000000000000000000fffffffff
ffffff000000000fffffffffffffffffffff000000000ffffffffffffffffff000000fffffffff
fffffffff000000ffffffffffff000000000000000000000000000000000fffffffffffffff000
000000000000ffffffffffff000000000000000000000000000000ffffffffffffffffffffffff
fffffffffffffff000000000000000000000000000000000fffffffffffffff000000000000000
000000000000000ffffffffffffffffffffffffffffffffffff000000fffffffffffffffffffff
fffffffff000000000000000000000000000000000000000ffffffffffff000000000000000000
000000000000000000000ffffff000000000000000000000000000000000fffffffff000000000
000000000000000000000000000fffffffff000000000000000000000000000000000fffffffff
fffffffffffffffffffffffffff000000000000000000000000000000000000ffffffffffff000
000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffff
000000000ffffffffffffffffffffffffffffffffffff000000000000000000000000fffffffff
fffffffff000000000fffffffffffffffffffff000000000ffffffffffffffffff000000ffffff
ffffffffffff000000fffffffffffffff000000000000000000000fff000000fffffffffffffff
000000000000000fffffffffffffff000000000000000000000000ffffffffffffffffffffffff
fffffffffffffffffffff000000000000000000000fff000000ffffffffffffffffff000000000
000000000000000000ffffffffffffffffffffffffffffffffffff000000ffffffffffffffffff
ffffffffffff000000000000000000000000000000000000ffffffffffffffffff000000000000
000000ffffff000000000000ffffff000000000000000000000000000fffffffffffffffffffff
000000000000000000000000000000fffffffff000000000000000000000000000ffffffffffff
fffffffffffffffffffffffffffffffff000000000000000000fff000000000000ffffffffffff
ffffff000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000fffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000fffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000fff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000
000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffff000000ffffffffffffffffffffffffffffffffffffffffff000000000ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff0ffffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffffff000000000fff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fff000000ffffffffffffffffffffffffffffff000000000000000000000000000000000ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff0ffffff000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffffff000000000
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff000000ffffffffffffffffffffffffffffff000000000000000000000000000000000000
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000
000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffff000000000000fffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff0ffffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff000000ffffffffffffffffffffffffffffff000000000000000000000000000000000
000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffff0ffffff000000fffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffff000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffff000000fffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff000000ffffffffffffffffffffffffffffff000000000000fffffffffffffff000
000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fff000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffff000000000000fffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff0ffffff000000fffffffffffffff000000fffffffff000000000fffffffff
fffffffff000000000000000000000000000fffffffffffffffffffff000000000ffffffffffff
fffffffff000000000ffffff000000000fffffffffffffffffffff000000000000ffffffffffff
ffffff000000000000000ffffffffffffffffff000000ffffff000000000000ffffffffffff000
000000ffffffffffffffffffffffff000000fffffffff000000000ffffffffffffffffffffffff
000000000ffffffffffffffffffffffff000000000ffffffffffffffffffffffffffffffffffff
fffffffffffffff000000ffffffffffffffffffffffffffffff000000000000fffffffffffffff
fff000000000000000000ffffffffffffffffff000000000000000000000fffffffffffffff000
000000000000000000000000000000ffffffffffffffffff000000000000000000ffffffffffff
ffffffffffffffffff000000000000000000000fffffffffffffffffffffffffffffffffffffff
fff000000000000fffffffff000000000000fffffffffffffffffffff000000000000fffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffff0ffffff000000fffffffffffffff000000fff000000000000000000000
ffffffffffff000000000000000000000000000ffffffffffff000000000000000000000000fff
ffffffffffff000000000000000000000000ffffffffffff000000000000000000000fffffffff
fff000000000000000000000000fffffffffffffff000000fff000000000000000000ffffff000
000000000000000ffffffffffffffffff000000fff000000000000000000000fffffffffffffff
fff000000000ffffffffffffffffff000000000000000000000000ffffffffffffffffffffffff
ffffffffffffffffff000000ffffffffffffffffffffffffffffff000000000000ffffffffffff
fffffffff000000000000000000ffffffffffff000000000000000000000000000000fffffffff
000000000000000000000000000000000fffffffffffffff000000000000000000000000000fff
fffffffffffffff000000000000000000000000000000fffffffffffffffffffffffffffffffff
fff000000000000000000000fff000000000000ffffffffffffffffff000000000000000000000
000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff0ffffff000000fffffffffffffff000000000000000fffffffff000
000000ffffffffffffffffff000000ffffffffffffffffffffffff000000000fffffffff000000
000ffffffffffff000000000000000000fffffffffffffff000000000000fffffffff000ffffff
ffffff000000fffffffff000000000000ffffffffffff000000000000000ffffff000000000000
000000ffffff000000000fffffffffffffff000000000000000ffffff000000000000fffffffff
ffffff000000000fffffffffffffff000000000000ffffff000000000000ffffffffffffffffff
fffffffffffffffffffff000000ffffffffffffffffffffffffffffff000000000000fffffffff
fffffffffffffff000000000000000ffffffffffff000000000000000000000000000000ffffff
fff000000000000000000000000000000000ffffffffffff000000000000000000000000000000
000fffffffffffffff000000000000000000000000000000ffffffffffffffffffffffffffffff
ffffff000000000000000000000000000000000000fffffffffffffff000000000000000000000
000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffff0ffffff000000fffffffffffffff000000000000ffffffffffff
000000000ffffffffffffffffff000000fffffffffffffffffffff000000000fffffffffffffff
000000ffffffffffff000000000000ffffffffffffffffff000000000000ffffffffffffffffff
ffffffffffffffffffffffffffffff000000ffffffffffff000000000fffffffffffffff000000
000000ffffffffffff000000000ffffffffffff000000000000fffffffffffffff000000000fff
fffffffff000000000ffffffffffff000000000fffffffffffffff000000000000ffffffffffff
ffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff000000000000ffffff
ffffffffffffffffff000000000000000ffffffffffff000fffffffffffffff000000000000000
fffffffffffffff000000000000000ffffffffffffffffff000000000000000fffffffff000000
000000000fffffffff000000000000000ffffffffffff000ffffffffffffffffffffffffffffff
ffffff000000000000000fff000000000000000000000ffffffffffff000000000000000ffffff
000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff0ffffff000000fffffffffffffff000000000ffffffffffff
ffffff000000ffffffffffffffffff000000ffffffffffffffffff000000000fffffffffffffff
fff000000000fffffffff000000000fffffffffffffffffffff000000000ffffffffffffffffff
fffffffffffffffffffffffffffffffff000000ffffffffffff000000ffffffffffffffffff000
000000fffffffffffffff000000000ffffffffffff000000000ffffffffffffffffff000000000
ffffffffffff000000000ffffffffffff000000ffffffffffffffffffffffff000000fffffffff
fffffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff000000000000fff
fffffffffffffffffffff000000000000000fffffffffffffffffffffffffffffffff000000000
000fffffffffffffff000000000000000fffffffffffffff000000000000000fffffffffffffff
000000000000000ffffff000000000000000ffffffffffffffffffffffffffffffffffffffffff
ffffff000000000000000ffffffffffff000000000000000fffffffff000000000000fffffffff
ffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffff0ffffff000000fffffffffffffff000000ffffffffffff
fffffffff000000ffffffffffffffffff000000ffffffffffffffffff000000000ffffffffffff
ffffff000000000fffffffff000000000ffffffffffffffffff000000000ffffffffffffffffff
ffffffffffffffffffffffff000000000000000000ffffffffffff000000ffffffffffffffffff
000000000fffffffffffffff000000000ffffffffffff000000000fffffffffffffffffffff000
000ffffffffffff000000000fffffffff000000000ffffffffffffffffffffffff000000000fff
ffffffffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff000000000000
ffffffffffffffffffffffff000000000000000ffffffffffffffffff000000000000000000000
000000000ffffffffffff000000000000000fffffffffffffff000000000000000ffffffffffff
fff000000000000000ffffff000000000000000000000000ffffffffffffffffffffffffffffff
fffffffff000000000000fffffffffffffff000000000000000fffffffff000000000000ffffff
fffffffff000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff0ffffff000000fffffffffffffff000000fffffffff
ffffffffffff000000ffffffffffffffffff000000ffffffffffffffffff000000000000000000
000000000000000000fffffffff000000000ffffffffffffffffff000000000fffffffffffffff
ffffffffffffffffff000000000000000000000000000ffffffffffff000000fffffffffffffff
fff000000ffffffffffffffffff000000000ffffffffffff000000ffffffffffffffffffffffff
000000000fffffffff000000000fffffffff000000000ffffffffffffffffffffffff000000000
fffffffffffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff000000000
000ffffffffffffffffffffffff000000000000000fffffffff000000000000000000000000000
000000000000ffffffffffff000000000000000fffffffffffffff000000000000ffffffffffff
ffffff000000000000000ffffff000000000000000000000000000ffffffffffffffffffffffff
ffffffffffff000000000000fffffffffffffff000000000000000fffffffff000000000000000
000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffff0ffffff000000fffffffffffffff000000ffffff
fffffffffffffff000000ffffffffffffffffff000000ffffffffffffffffff000000000ffffff
ffffffffffffffffffffffffffffff000000000ffffffffffffffffff000000000ffffffffffff
fffffffffffffffffffff000000000ffffffffffff000000ffffffffffff000000ffffffffffff
ffffff000000ffffffffffffffffff000000000ffffffffffff000000fffffffffffffffffffff
fff000000000fffffffff000000000fffffffff000000000ffffffffffffffffffffffff000000
000fffffffffffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff000000
000000ffffffffffffffffffffffff000000000000000fffffffff000000000000000000fff000
000000000000000ffffffffffff000000000000000ffffffffffff000000000000000fffffffff
fffffffff000000000000000ffffffffffff000000000000000000000000ffffffffffffffffff
fffffffffffffff000000000000ffffffffffffffffff000000000000ffffff000000000000000
000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff0ffffff000000fffffffffffffff000000fff
ffffffffffffffffff000000ffffffffffffffffff000000ffffffffffffffffff000000000fff
fffffffffffffffffffffffffffffffff000000000ffffffffffffffffff000000000fffffffff
ffffffffffffffffff000000000ffffffffffffffffff000000ffffffffffff000000fffffffff
fffffffff000000ffffffffffffffffff000000000ffffffffffff000000ffffffffffffffffff
ffffff000000ffffffffffff000000000fffffffff000000000ffffffffffffffffffffffff000
000000fffffffffffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff000
000000000ffffffffffffffffff000000000000000000000ffffff000000000000000fffffffff
fff000000000000000ffffffffffff000000000000000fffffffffffffff000000000000000fff
ffffffffffff000000000000000ffffffffffffffffffffffff000000000000000ffffffffffff
ffffffffffffffffff000000000000fffffffffffffff000000000000000fffffffff000000000
000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffff0ffffff000000fffffffffffffff000000
fffffffffffffffffffff000000ffffffffffffffffff000000ffffffffffffffffff000000000
ffffffffffffffffffffffffffffffffffff000000000fffffffffffffffffffff000000000fff
fffffffffffffffffffff000000000ffffffffffffffffff000000ffffffffffff000000ffffff
ffffffffffff000000ffffffffffffffffff000000000ffffffffffff000000000ffffffffffff
ffffff000000000ffffffffffff000000000ffffffffffff000000ffffffffffffffffffffffff
000000000fffffffffffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff
000000000000ffffffffffffffffff000000000000000000fffffffff000000000000fffffffff
ffffff000000000000000ffffffffffff000000000000000fffffffffffffff000000000000000
fffffffffffffff000000000000000ffffffffffffffffffffffff000000000000000fffffffff
fffffffffffffffffffff000000000000000ffffffffffff000000000000000fffffffff000000
000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff0ffffff000000fffffffffffffff000
000fffffffffffffffffffff000000ffffffffffffffffff000000ffffffffffffffffff000000
000ffffffffffffffffffffffffffffffffffff000000000fffffffffffffffffffff000000000
ffffffffffffffffffffffff000000000fffffffffffffff000000000ffffffffffff000000fff
fffffffffffffff000000ffffffffffffffffff000000000ffffffffffff000000000fffffffff
fffffffff000000000ffffffffffff000000000ffffffffffff000000000ffffffffffffffffff
000000000ffffffffffffffffffffffffffffffffffff000000fffffffffffffffffffffffffff
fff000000000000000000000000000000000000000000000ffffffffffff000000000000000fff
fff000000000000000000000ffffffffffff000000000000000fffffffffffffff000000000000
000000000000000000000000000000000ffffff000000000fffffffff000000000000000ffffff
fffffffffffffffffffffffffff000000000000000000000000000000000000000fffffffff000
000000000000000ffffffffffff000000fffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffff0ffffff000000fffffffffffffff
000000fffffffffffffffffffff000000ffffffffffffffffff000000000ffffffffffffffffff
000000000000ffffffffffff000000ffffffffffff000000000fffffffffffffffffffff000000
000000ffffffffffff000fffffffff000000000ffffffffffff000000000ffffffffffff000000
ffffffffffffffffff000000ffffffffffffffffff000000000ffffffffffff000000000000fff
fffffffff000000000000ffffffffffff000000000ffffffffffff000000000000ffffffffffff
000000000000ffffffffffffffffffffffffffffffffffff000000ffffffffffffffffffffffff
ffffff000000000000000000000000000000000000000000fffffffffffffff000000000000000
000000000000000000000000000ffffffffffff000000000000000000000000fffffffff000000
000000000000000000000000000000000fffffffff000000000000000000000000000000000fff
ffffffffffffffffffffffffffffff000000000000000000000000000000000000000fffffffff
fff000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffff000000ffffffffffff
fff000000fffffffffffffffffffff000000ffffffffffffffffff000000000000000000ffffff
ffffff000000000000000000000000000ffffffffffff000000000ffffffffffffffffffffffff
000000000000000000000000fffffffff000000000000000000000000000000ffffffffffff000
000ffffffffffffffffff000000ffffffffffffffffff000000000ffffffffffff000000fff000
000000000000000000ffffffffffffffffff000000000fffffffffffffff000000000000000000
000000000000fffffffffffffffffffffffffffffffffffffff000000fffffffffffffffffffff
fffffffff000000000000000000000000000000000000ffffffffffffffffffffffff000000000
000000000000000000000000000000fffffffffffffff000000000000000000000ffffffffffff
000000000000000000000000000000000ffffffffffff000000000000000000000000000000fff
ffffffffffffffffffffffffffffffffffff000000000000000000000fff000000000000ffffff
fffffffff000000000000000000000000000000fffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000ffffff
fffffffffffffff000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff000000000000000000fffffffffffffff000000000000ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff000000000000fffffffffffffffffffffffffffffffffffffffffffffffffff000000000
000000000fffffffffffffffffffffffffffffffffffffffffffff000000ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
000000000000ffffffffffffffffffffffffffffffffffffffffff000000000000000fffffffff
fffffffff000000000000000000fffffffffffffffffffffffffff000000000000000fffffffff
ffffffffffffffffffffffffffffffffffffffffff000000000000ffffffffffffffffffffffff
ffffffffffffffffff000000000000000000ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000fffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000fffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000fff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0fff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff000000ffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000
000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff000000000000000fffffffffffffffffffffffffff
fff000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000
000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffff000000fffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
000000fffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffff000000000000000ffffffffffffffffffffffff
ffffff000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000
000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fff000000fffffffffffffffffffffffffffffffffffffff000000000000000000000000000000
000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fff000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff000000000000000fffffffffffffffffffff
fffffffff000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000ffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000fffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffff000000fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff000000fffffffffffffffffffffffffffffffffffffff000000000000000000000000000
000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000fffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff000000ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff000000ffffffffffffffffffffffffffffffffffff000000000000000000fffffffff
fff000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000ffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000fffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffff000000fffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff000000ffffffffffffffffffffffffffffffffffff000000000000ffffffffffff
ffffffffffffffffffffffffffffffffffff000000000000ffffffffffffffffffffffffffffff
ffffffffffffffffff000000000ffffffffffffffffffffffffffffff000000000000fffffffff
ffffffffffff000000000000000ffffffffffffffffffffffffffffffffffff000000000ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000
fffffffffffffffffffffffffff000000000000fffffffffffffffffffffffffffffffffffffff
fffffffffffffff000000000ffffffffffffffffffffffffffffffffffffffffffffffff000000
000fffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000fff
fffffffffffffffffffffffffffffffff000000000000000000ffffff000000000000000000000
000000ffffffffffff000000000000000000000fffffffffffffff000000000fff000000000000
000000fffffffffffffffffffffffffff000000000000000000fff000000fffffffffffffff000
000000000000000000000ffffffffffffffffff000000fff000000000000ffffffffffffffffff
fffffffffffffff000000fffffffffffffffffffffffffffffffff000000000000ffffffffffff
ffffffffffffffffffffffffffffff000000000000000000000000000ffffffffffffffffff000
000000000ffffff000000000000000000000ffffffffffffffffff000000000000000000000000
ffffff000000000000000000000000000000000ffffff000000000000ffffff000000000000fff
fff000000000000fffffffffffffff000000000000ffffffffffffffffff000000000000000000
000000fffffffffffffff000000000000000000000000fffffffff000000000000000fffffffff
fffffffff000000000000000000000000000ffffffffffffffffff000000000000fff000000000
000000000000fffffffff0fffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000
fffffffffffffffffffffffffffffffff000000000ffffff000000ffffff000000000000000000
000000000ffffffffffff000000ffffff000000000fffffffffffffff000000000000000000fff
fff000000000ffffffffffffffffff000000000000ffffff000000000000000fffffffffffffff
000000000ffffff000000000ffffffffffffffffff000000fff000000000000fffffffffffffff
ffffffffffffffffff000000fffffffffffffffffffffffffffffffff000000000000fffffffff
ffffffffffffffffffffffffffffff000000000000000000000000000000000000ffffffffffff
000000000000fff000000000000000000000000ffffffffffff000000000000000000000000000
000ffffff000000000000000000000000000000000ffffff000000000000fff000000000000000
ffffff000000000000fffffffffffffff000000000000fffffffffffffff000000000000000000
000000000ffffffffffff000000000000000000000000000fffffffff000000000000000ffffff
fffffffff000000000000000000000000000000000fffffffffffffff000000000000000000000
000000000000000000ffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000
000000000000000000000000ffffffffffff000000ffffffffffffffffffffffffffffff000000
ffffffffffffffffffffffffffffffffffffffffff000000ffffffffffff000000000000ffffff
fffffffff000000000ffffffffffff000000000fffffffffffffff000000000000ffffffffffff
ffffffffffffffffffffffff000000fffffffffffffff000000000000fffffffffffffffffffff
fffffffffffffffffffff000000ffffffffffffffffffffffffffffff000000000000fffffffff
ffffffffffffffffffffffffffffff000000000000000000ffffff000000000000000000ffffff
fff000000000000000000000000000000000000000000fffffffff000000000000000fffffffff
000000ffffff000000000000000000000000000000000ffffff000000000000000000000000000
000ffffff000000000000fffffffffffffff000000000000ffffffffffff000000000000000000
000000000000fffffffff000000000000000000000000000000fffffffff000000000000000fff
fffffffff000000000000000000fff000000000000000000ffffffffffff000000000000000000
000000000000000000000000fff0fffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000
000000000000000000000000000fffffffff000000000ffffffffffffffffffffffffffffff000
000fffffffffffffffffffffffffffffffffffffffffffff000ffffffffffff000000000000fff
ffffffffffff000000000ffffffffffff000000000ffffffffffffffffff000000000fffffffff
fffffffffffffffffffffffffff000000fffffffffffffff000000000fffffffffffffffffffff
ffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff000000000000ffffff
fffffffffffffffffffffffffffffffff000000000000000ffffffffffff000000000000000fff
ffffff000000000000000000fffffffff000000000000000000ffffff000000000000fffffffff
ffffffffffffffffffffffff000000000000000fffffffffffffff000000000000000000000fff
ffffffffffff000000000000fffffffffffffff000000000000fffffffff000000000000000fff
fffffffffffffffffffff000000000000000fffffffffffffffffffffffffff000000000000000
fffffffff000000000000000fffffffffffffff000000000000000fffffffff000000000000000
000ffffff000000000000000000fff0ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
000000000000000000000000000000ffffffffffff000000000fffffffffffffffffffffffffff
000000fffffffffffffffffffffffffffffffffffffffffffff000ffffffffffff000000000fff
ffffffffffffffffff000000ffffffffffff000000fffffffffffffffffffff000000000ffffff
ffffffffffffffffffffffffffffff000000000ffffffffffff000000000ffffffffffffffffff
fffffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff000000000000fff
ffffffffffffffffffffffffffffffffffff000000000000ffffffffffffffffff000000000000
000ffffff000000000000000000ffffffffffff000000000000000ffffff000000000000000000
000ffffffffffffffffffffffff000000000000000fffffffffffffff000000000000000000fff
fffffffffffffff000000000000fffffffffffffff000000000000fffffffff000000000000000
ffffffffffffffffffffffff000000000000000fffffffffffffffffffffffffff000000000000
000fffffffff000000000000000fffffffffffffff000000000000000fffffffff000000000000
000ffffffffffff000000000000000fff0fffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fff000000000fffffffffffffffffffffffffffffffff000000000000000ffffffffffffffffff
fff000000fffffffffffffffffffffffffff000000000000000000000ffffffffffff000000000
fffffffffffffffffffff000000ffffffffffff000000ffffffffffffffffffffffff000000fff
ffffffffffffffffff000000000000000000000000ffffffffffff000000000fffffffffffffff
ffffffffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff000000000000
ffffffffffffffffffffffffffffffffffff000000000000000ffffffffffffffffff000000000
000000ffffff000000000000000fffffffffffffff000000000000000ffffff000000000000000
000000000000ffffffffffffffffff000000000000000fffffffffffffff000000000000000fff
ffffffffffffffffff000000000000fffffffffffffff000000000000fffffffff000000000000
000ffffffffffffffffffffffff000000000000000fffffffffffffffffffffffffff000000000
000000fffffffff000000000000ffffffffffffffffff000000000000000fffffffff000000000
000fffffffffffffff000000000000000fff0ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff000000000ffffffffffffffffffffffffffffffffffff000000000000000ffffffffffff
ffffff000000fffffffffffffffffffff000000000000000000ffffff000ffffffffffff000000
000fffffffffffffffffffff000000fffffffff000000000ffffffffffffffffffffffff000000
fffffffffffffff000000000000000ffffff000000000ffffffffffff000000fffffffffffffff
fffffffffffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff000000000
000ffffffffffffffffffffffffffffffffffff000000000000000ffffffffffffffffff000000
000000000ffffff000000000000000fffffffffffffff000000000000000fffffffff000000000
000000000000000000fffffffffffffff000000000000000fffffffffffffff000000000000000
fffffffffffffffffffff000000000000fffffffffffffff000000000000fffffffff000000000
000fffffffffffffffffffffffffff000000000000000fffffffffffffffffffffffffff000000
000000000ffffff000000000000000ffffffffffffffffff000000000000000fffffffff000000
000000fffffffffffffff000000000000000fff0fffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff000000000ffffffffffffffffffffffffffffffffffffffffff000000000000ffffff
fffffffff000000fffffffffffffffffffff000000000fffffffffffffff000ffffffffffff000
000000fffffffffffffffffffff000000ffffffffffff000000ffffffffffffffffffffffff000
000ffffffffffff000000000fffffffffffffff000000000ffffffffffff000000ffffffffffff
ffffffffffffffffffffffffffffffffffff000000fffffffffffffffffffffffffffffffff000
000000000fffffffffffffffffffffffffffffffff000000000000000ffffffffffffffffff000
000000000000ffffff000000000000000fffffffffffffff000000000000000fffffffffffffff
fff000000000000000000000ffffffffffff000000000000000fffffffffffffff000000000000
000fffffffffffffffffffff000000000000ffffffffffff000000000000000fffffffff000000
000000000ffffffffffffffffffffffff000000000000000fffffffffffffffffffffffffff000
000000000000fffffffff000000000000000fffffffffffffff000000000000000fffffffff000
000000000fffffffffffffff000000000000000fff0ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff000000000ffffffffffffffffffffffffffffffffffffffffffffffff000000000
ffffffffffff000000ffffffffffffffffff000000000ffffffffffffffffff000ffffffffffff
000000000fffffffffffffffffffff000000ffffffffffff000000fffffffffffffffffffff000
000000ffffffffffff000000ffffffffffffffffff000000000ffffffffffff000000fffffffff
fffffffffffffffffffffffffffffffffffffff000000fffffffffffffffffffffffffffffffff
000000000000000ffffffffffffffffffffffffffffff000000000000000ffffffffffffffffff
000000000000000ffffff000000000000000fffffffffffffff000000000000000ffffffffffff
ffffffffffff000000000000000ffffffffffff000000000000000fffffffffffffff000000000
000000fffffffffffffffffffff000000000000ffffffffffff000000000000000fffffffff000
000000000000ffffffffffffffffffffffff000000000000000fffffffffffffffffffffffffff
000000000000000fffffffff000000000000000fffffffffffffff000000000000000fffffffff
000000000000fffffffffffffff000000000000000fff0fffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffff000000000ffffffffffffffffffffffffffffffffffffffffffffffff000000
000ffffffffffff000000ffffffffffffffffff000000000ffffffffffffffffff000fffffffff
fff000000000fffffffffffffffffffff000000ffffffffffff000000000ffffffffffffffffff
000000000fffffffff000000000ffffffffffffffffff000000000ffffffffffff000000ffffff
ffffffffffffffffffffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff
ffffff000000000000000000000ffffff000000000fffffffff000000000000000000ffffff000
000000000000000fffffffff000000000000000fffffffffffffff000000000000000ffffff000
fffffffffffffff000000000000000ffffffffffff000000000000000fffffffffffffff000000
000000000fffffffffffffffffffff000000000000000000000000000000000000000fffffffff
000000000000000000000fffffffff000ffffff000000000000000000000fffffffff000ffffff
fff000000000000000fffffffff000000000000000000fffffffff000000000000000000ffffff
fff000000000000fffffffffffffff000000000000000fff0ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff000000000000000000000000000000000ffffffffffffffffffffffff000
000000ffffffffffff000000000fffffffffffffff000000000ffffffffffff000000000ffffff
ffffff000000000fffffffffffffffffffff000000ffffffffffff000000000fffffffffffffff
000000000000ffffffffffff000000fffffffffffffff000000000000ffffffffffff000000fff
fffffffffffffffffffffffffffffffffffffffffffff000000fffffffffffffffffffffffffff
fffffffff000000000000000000000000000000000000fffffffff000000000000000000000000
000000000000000000fffffffff000000000000000fffffffffffffff000000000000000ffffff
000000000000000000000000000000000ffffffffffff000000000000000000000000ffffff000
000000000000fffffffffffffffffffff000000000000000000000000000000000000000ffffff
ffffff000000000000000000000000000000fffffffff000000000000000000000000000000fff
ffffff000000000000000ffffffffffff000000000000000000000000000000000000000ffffff
ffffff000000000000fffffffffffffff000000000000000fff0fffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffff000000000000000000000000000000000fffffffff000000000000000
000000fffffffffffffff000000000000000000fffffffff000000000000000000000000000fff
fffffffff000000000fffffffffffffffffffff000000fffffffffffffff000000000000000000
000000fff000000ffffffffffff000000000000000000000000000000000ffffffffffff000000
ffffffffffffffffffffffffffffffffffffffffffffffff000000ffffffffffffffffffffffff
fffffffffffffff000000000000000000000000000000000000fffffffff000000000000000000
000000000000000000ffffffffffff000000000000000fffffffffffffff000000000000000fff
fff000000000000000000000000000000000fffffffffffffff000000000000000000000ffffff
000000000000000fffffffffffffffffffff000000000000000000000000000000000000000fff
ffffffffffff000000000000000000000000000ffffffffffff000000000000000000000000000
fffffffff000000000000000fffffffffffffff000000000000000000000000000000000ffffff
fffffffff000000000000fffffffffffffff000000000000000fff0ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff000000000000000000000000000000000fffffffff000000000000
000000fffffffffffffffffffff000000000000000ffffffffffff000000000000000000fff000
ffffffffffff000000000fffffffffffffffffffff000000fffffffffffffffffffff000000000
000000ffffff000000fffffffffffffff000000000000000000fff000000000ffffffffffff000
000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffff000000000000000000000000fffffffffffffff000000000000
000000000000000ffffffffffffffffff000000000000000fffffffffffffff000000000000000
fffffffff000000000000000000000fffffffffffffffffffffffffff000000000000000000fff
fff000000000000000ffffffffffffffffffffffff000000000000000000ffffff000000000000
ffffffffffffffffff000000000000000000000000fffffffffffffff000000000000000000000
000fffffffff000000000000000ffffffffffffffffff000000000000000000000000000ffffff
ffffffffffff000000000000fffffffffffffff000000000000000fff0fffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0
grestore
239 557.4 moveto
12 f0
( ) show
0 530.8 moveto
12 f0
( ) show
0 504.2 moveto
12 f0
( ) show
171.2 471.5 moveto
18 f1
(PROPUESTA DE) show
32 430.1 moveto
18 f1
(DEFINICION DEL FORMATO DE INTERCAMBIO) show
6.5 409.4 moveto
18 f1
(ESTANDAR DE BASES DE DATOS DE CONSTRUCCION) show
187.5 388.7 moveto
18 f1
(FIEBDC-3/98) show
0 353.4 moveto
12 f0
( ) show
0 326.3 moveto
12 f1
(INDICE:) show
0 298.7 moveto
12 f1
( ) show
0 273.4 moveto
10 f0
(P\341gina) show
0 251.4 moveto
10 f0
(0. ESPECIFICACION del Formato. 1) show
0 229.4 moveto
10 f0
(1. ~V. Registro tipo Propiedad y VERSION. 3) show
0 207.4 moveto
10 f0
(2. ~C. Registro tipo Concepto. 3) show
0 185.4 moveto
10 f0
(3. ~D. Registro tipo Descomposici\363n. 4) show
0 163.4 moveto
10 f0
(4. ~Y. Registro tipo A\361adir Descomposici\363n. 5) show
0 141.4 moveto
10 f0
(5. ~T. Registro tipo Texto. 5) show
0 119.4 moveto
10 f0
(6. ~P. Registro tipo Descripci\363n Param\351trica. 6) show
0 97.4 moveto
10 f0
(7. ~L, ~Q, ~J. Registro tipo Pliegos. 6) show
0 75.4 moveto
10 f0
(8. ~W. Registro tipo \301mbito Geogr\341fico. 8) show
pagelevel restore
showpage
%%Page: 2 2
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 742.4 moveto
10 f0
(9. ~G. Registro tipo INFORMACION Gr\341fica. 8) show
0 720.4 moveto
10 f0
(10. ~E. Registro tipo Entidad. 9) show
0 698.4 moveto
10 f0
(11. ~O. Registro tipo Relaci\363n Comercial. 9) show
0 676.4 moveto
10 f0
(12. ~X. Registro tipo INFORMACION T\351cnica. 10) show
0 654.4 moveto
10 f0
(13. ~K. Registro tipo Coeficientes. 11) show
0 632.4 moveto
10 f0
(14. ~M. Registro tipo Mediciones. 11) show
0 610.4 moveto
10 f0
(15. ~N. Registro tipo A\361adir Mediciones 13) show
0 588.4 moveto
10 f0
(16. ~A. Registro tipo Claves. 13) show
0 566.4 moveto
10 f0
(17. ~B. Registro tipo Cambio de CODIGO. 13) show
0 544.4 moveto
10 f0
(18. Formato FIEBDC-3. Resumen. 14) show
0 522.4 moveto
10 f0
(19. Anexo 1. Cambios respecto a FIEBDC-3/95 15) show
0 500.4 moveto
10 f0
(20. Anexo 2. Descripci\363n Param\351trica: Formato ESTANDAR. 16) show
0 478.4 moveto
10 f0
(21. Anexo 3. Descripci\363n Param\351trica: API ESTANDAR para 23) show
0 456.4 moveto
10 f0
(descripciones param\351tricas compiladas en DLL.) show
0 434.4 moveto
10 f0
( ) show
0 410.6 moveto
12 f0
( ) show
0 377.9 moveto
18 f1
(PROPUESTA DE DEFINICION DEL FORMATO DE) show
0 357.2 moveto
18 f1
(INTERCAMBIO ESTANDAR DE BASES DE DATOS DE) show
0 336.5 moveto
18 f1
(CONSTRUCCION FIEBDC-3/98) show
0 303 moveto
10 f0
( ) show
0 281 moveto
10 f0
( ) show
0 259 moveto
10 f0
( ) show
0 234.7 moveto
12 f1
(PRESENTACION) show
0 209.4 moveto
10 f0
( ) show
0 187.4 moveto
10 f0
(La siguiente DEFINICION del Formato de Intercambio ESTANDAR de Bases de Datos de CONSTRUCCION, fue) show
0 176.4 moveto
10 f0
(aprobada en abril de 1.977, para entrar en vigor a partir del 1 de enero de 1.998 como VERSION 3.) show
0 154.4 moveto
10 f0
( ) show
0 132.4 moveto
10 f0
(Este documento se pone a disposici\363n de usuarios y empresas, con la \372nica condici\363n de que cualquier implementaci\363n) show
0 121.4 moveto
10 f0
(inform\341tica del presente formato debe recoger tanto la entrada como la salida de datos.) show
0 99.4 moveto
10 f0
( ) show
0 77.4 moveto
10 f0
(Este formato pretende abarcar toda la INFORMACION contenida en las actuales bases de datos de CONSTRUCCION.) show
pagelevel restore
showpage
%%Page: 3 3
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752 moveto
10 f0
(No todos los desarrolladores de bases de datos necesitar\341n utilizar todas las posibilidades del formato; as\355 como) show
0 741 moveto
10 f0
(tampoco todos los programas de mediciones y presupuestos har\341n uso de toda la INFORMACION suministrada.) show
0 719 moveto
10 f0
( ) show
0 697 moveto
10 f0
(Se prev\351 adem\341s, dentro del propio formato, la posibilidad de ampliaci\363n; manteniendo en lo posible la compatibilidad) show
0 686 moveto
10 f0
(entre versiones en el caso de tratar nuevos contenidos que se prevean en un futuro.) show
0 664 moveto
10 f0
( ) show
0 642 moveto
10 f0
( ) show
0 620 moveto
10 f0
( ) show
0 595.7 moveto
12 f1
(FORMATO FIEBDC-3. ESPECIFICACION.) show
0 570.4 moveto
10 f0
( ) show
0 548.4 moveto
10 f0
(Toda la INFORMACION necesaria para reconstruir completamente una base de datos u obra en soportes f\355sico y l\363gico) show
0 537.4 moveto
10 f0
(distintos a aquellos en los cuales se produjo la INFORMACION es el objetivo del formato FIEBDC, Formato de) show
0 526.4 moveto
10 f0
(Intercambio ESTANDAR de Bases de Datos de CONSTRUCCION.) show
0 504.4 moveto
10 f0
( ) show
0 482.4 moveto
10 f0
(La INFORMACION de una base de datos, obra o certificaci\363n se dispondr\341 en cualquier n\372mero de archivos en) show
0 471.4 moveto
10 f0
(formato FIEBDC, con la extensi\363n ".BC3", teniendo en cuenta que estos archivos ordenados alfab\351ticamente contengan) show
0 460.4 moveto
10 f0
(la INFORMACION en el orden deseado.) show
0 438.4 moveto
10 f0
( ) show
0 416.4 moveto
10 f0
(La \372nica limitaci\363n de tama\361o de cada archivo ser\341 la m\341xima que permita el soporte f\355sico utilizado para su transporte.) show
0 405.4 moveto
10 f0
(Si se utiliza alg\372n tipo de compresor de archivos, se deber\341 incluir en el mismo soporte el descompresor o utilizar un) show
0 394.4 moveto
10 f0
(formato autodescomprimible.) show
0 372.4 moveto
10 f0
( ) show
0 350.4 moveto
10 f0
(El juego de caracteres a emplear en los campos CODIGO ser\341 el definido por MS-DOS 6.0, incluyendo < . >) show
0 339.4 moveto
10 f0
(\(ASCII-46\), < $ > \(ASCII-36\), < # > \(ASCII-35\), < %> \(ASCII-37\), < & > \(ASCII-38\), < _ > \(ASCII-95\).) show
0 317.4 moveto
10 f0
( ) show
0 295.4 moveto
10 f0
(El fin de l\355nea ser\341 el ESTANDAR de los archivos MS-DOS \(ASCII-13 y ASCII-10\). El fin de archivo se marcar\341) show
0 284.4 moveto
10 f0
(seg\372n el mismo ESTANDAR \(ASCII-26\). El \372nico car\341cter de control adicional que se permitir\341 ser\341 el tabulador) show
0 273.4 moveto
10 f0
(\(ASCII-9\).) show
0 251.4 moveto
10 f0
( ) show
0 229.4 moveto
10 f0
(Cada archivo estar\341 compuesto de registros, zonas de texto entre el car\341cter de principio de registro < ~ > \(ASCII-126\) y) show
0 218.4 moveto
10 f0
(el siguiente principio de registro o fin de archivo. Los archivos deber\341n contener registros completos, es decir, la) show
0 207.4 moveto
10 f0
(divisi\363n de archivos se deber\341 realizar al comienzo de un registro \(car\341cter < ~ >\).) show
0 185.4 moveto
10 f0
( ) show
0 163.4 moveto
10 f0
(Cada registro estar\341 compuesto de campos separados por caracteres < | > \(ASCII-124\). Todo campo con) show
0 152.4 moveto
10 f0
(INFORMACION tendr\341 que finalizar con el separador de campos y el registro deber\341 contener todos los separadores de) show
0 141.4 moveto
10 f0
(campos anteriores, aunque no contengan INFORMACION. No es necesario disponer de finalizadores de los campos) show
0 130.4 moveto
10 f0
(posteriores al \372ltimo con INFORMACION.) show
0 108.4 moveto
10 f0
( ) show
0 86.4 moveto
10 f0
(Cada campo estar\341 compuesto de subcampos separados por caracteres < \\ > \(ASCII-92\). El separador final, entre el) show
0 75.4 moveto
10 f0
(\372ltimo dato de un campo y el fin de campo es opcional.) show
pagelevel restore
showpage
%%Page: 4 4
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 742.4 moveto
10 f0
( ) show
0 720.4 moveto
10 f0
(El primer campo de cada registro es la cabecera de registro, una letra may\372scula que identifica el tipo de registro.) show
0 698.4 moveto
10 f0
( ) show
0 676.4 moveto
10 f0
(Se ignorar\341 cualquier INFORMACION entre el \372ltimo separador de campos de un registro \(car\341cter < | >\) o el) show
0 665.4 moveto
10 f0
(comienzo del archivo y el comienzo del siguiente registro \(car\341cter < ~>\).) show
0 643.4 moveto
10 f0
( ) show
0 621.4 moveto
10 f0
(Se ignorar\341n los caracteres blancos \(32\), tabuladores \(9\) y de fin de l\355nea \(13 y 10\), delante de los separadores < ~ >, < |) show
0 610.4 moveto
10 f0
(> y < \\ >.) show
0 588.4 moveto
10 f0
( ) show
0 566.4 moveto
10 f0
(No se podr\341n actualizar parcialmente campos de segundo orden \(subcampos\). Deber\341 actualizarse la INFORMACION) show
0 555.4 moveto
10 f0
(completa de un campo en cualquiera de los registros) show
0 533.4 moveto
10 f0
( ) show
0 511.4 moveto
10 f0
(La disposici\363n de registros dentro de un archivo es completamente libre, pero se garantizar\341 la lectura secuencial de los) show
0 500.4 moveto
10 f0
(mismos para evitar ambig\374edades en las sustituciones de INFORMACION.) show
0 478.4 moveto
10 f0
( ) show
0 456.4 moveto
10 f0
(Los campos vac\355os se considerar\341n SIN INFORMACION, no con INFORMACION nula, esto permite producir) show
0 445.4 moveto
10 f0
(archivos de actualizaci\363n que contengan \372nicamente la INFORMACION en alguno de sus campos y, por supuesto, el) show
0 434.4 moveto
10 f0
(CODIGO de referencia.) show
0 412.4 moveto
10 f0
( ) show
0 390.4 moveto
10 f0
(Para anular un campo num\351rico deber\341 aparecer expl\355citamente el valor 0 \(cero\).) show
0 368.4 moveto
10 f0
(Para anular un campo alfanum\351rico deber\341 aparecer expl\355citamente el ROTULO NUL.) show
0 346.4 moveto
10 f0
( ) show
0 324.4 moveto
10 f0
( ) show
0 302 moveto
10 f1
(CONVENIOS DE NOTACION) show
0 279.6 moveto
10 f0
( ) show
56 257.6 moveto
10 f0
([a] Indica nada o "a") show
56 235.6 moveto
10 f0
({a} Indica cero o m\341s ocurrencias de "a") show
56 213.6 moveto
10 f0
(\(<DD>c\) Tama\361o m\341ximo en n\372mero de caracteres del campo) show
56 191.6 moveto
10 f0
( ) show
0 169.6 moveto
10 f0
(Todos los valores num\351ricos ir\341n sin separadores de miles y con el car\341cter punto '.' entre la parte entera y la decimal.) show
0 145.3 moveto
12 f1
(REGISTRO TIPO PROPIEDAD Y VERSION) show
0 120 moveto
10 f0
( ) show
0 98 moveto
10 f0
(Este registro se utiliza para documentar la procedencia y el formato de los archivos y, cuando exista, se dispondr\341 al) show
0 87 moveto
10 f0
(comienzo del primer archivo.) show
pagelevel restore
showpage
%%Page: 5 5
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
28 752 moveto
10 f0
(~V | PROPIEDAD_ARCHIVO | VERSION_FORMATO \\DDMMAA | PROGRAMA_EMISION |) show
28 741 moveto
10 f0
([CABECERA] \\ { ROTULO_IDENTIFICACION \\ } | JUEGO_CARACTERES |) show
28 719 moveto
10 f0
( ) show
0 697 moveto
10 f0
(PROPIEDAD_ARCHIVO: Redactor de la base de datos u obra, fecha, ...) show
0 675 moveto
10 f0
( ) show
0 653 moveto
10 f0
(VERSION_FORMATO: VERSION del formato del archivo, la actual es FIEBDC-3) show
0 631 moveto
10 f0
( ) show
0 609 moveto
10 f0
(DDMMAA: DD representa el d\355a con dos d\355gitos, MM el mes y AA el a\361o, si la fecha tiene menos de 5 d\355gitos) show
0 598 moveto
10 f0
(representa mes y a\361o \372nicamente, si tiene menos de tres, solo el a\361o. Si se identifica la fecha con un n\372mero impar de) show
0 587 moveto
10 f0
(d\355gitos, se completar\341 con el car\341cter cero por la izquierda.) show
0 565 moveto
10 f0
( ) show
0 543 moveto
10 f0
(PROGRAMA_EMISION: Programa y/o empresa que genera los ficheros en formato BC3.) show
0 521 moveto
10 f0
( ) show
0 499 moveto
10 f0
(CABECERA: T\355tulo general de los ROTULOS_IDENTIFICACION.) show
0 477 moveto
10 f0
( ) show
0 455 moveto
10 f0
(ROTULO_IDENTIFICACION: Asigna secuencialmente t\355tulos a los valores definidos en el campo PRECIO del) show
0 444 moveto
10 f0
(registro ~C, que tal como se indica en su ESPECIFICACION, puede representar distintas \351pocas, \341mbitos geogr\341ficos,) show
0 433 moveto
10 f0
(etc., estableci\351ndose una relaci\363n biun\355voca entre ambos.) show
0 411 moveto
10 f0
( ) show
0 389 moveto
10 f0
(JUEGO_CARACTERES: Asigna si el juego de caracteres a emplear es el definido para D.O.S., cuyos identificadores) show
0 378 moveto
10 f0
(ser\341n 850 \363 437, o es el definido para Windows, cuyo identificador ser\341 ANSI. En caso de que dicho campo est\351 vac\355o) show
0 367 moveto
10 f0
(se interpretar\341, por omisi\363n, que el juego de caracteres a utilizar ser\341 el 850 por compatibilidad con versiones) show
0 356 moveto
10 f0
(anteriores.) show
0 334 moveto
10 f0
( ) show
0 312 moveto
10 f0
( ) show
0 290 moveto
10 f0
( ) show
0 265.7 moveto
12 f1
(REGISTRO TIPO CONCEPTO) show
0 240.4 moveto
10 f0
( ) show
0 218.4 moveto
10 f0
(Este registro contiene la INFORMACION b\341sica de un concepto de cualquier tipo, material, auxiliar, partida, cap\355tulo,) show
0 207.4 moveto
10 f0
(entidad, documento, etc., tanto en su VERSION param\351trica como DEFINICION tradicional.) show
0 185.4 moveto
10 f0
( ) show
28 163.4 moveto
10 f0
(~C | {CODIGO \\ } | UNIDAD | RESUMEN | {PRECIO \\} | { FECHA \\ } | TIPO |) show
28 141.4 moveto
10 f0
( ) show
0 119.4 moveto
10 f0
(CODIGO: CODIGO del concepto descrito. Un concepto puede tener varios CODIGOs que actuar\341n como sin\363nimos,) show
0 108.4 moveto
10 f0
(este mecanismo permite integrar distintos sistemas de clasificaci\363n.) show
0 86.4 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 6 6
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752 moveto
10 f0
(Para distinguir el concepto tipo ) show
127.4 752 moveto
10 f0
(ra\355z) show
142.3 752 moveto
10 f0
( de un archivo, as\355 como los conceptos tipo ) show
317.2 752 moveto
10 f0
(cap\355tulo) show
349.4 752 moveto
10 f0
(, se ampliar\341 su CODIGO con) show
0 741 moveto
10 f0
(los caracteres '##' y '#' respectivamente; quedando dicha NOTACION reflejada obligatoriamante en el registro tipo ~C) show
0 730 moveto
10 f0
(,siendo opcional en los restantes registros del mismo concepto.) show
0 708 moveto
10 f0
(Las referencias a un CODIGO con y sin # y ##, se entienden \372nicas a un mismo concepto.) show
0 686 moveto
10 f0
( ) show
0 664 moveto
10 f0
(Unicamente puede haber un concepto ra\355z en una base de datos u obra.) show
0 642 moveto
10 f0
( ) show
0 620 moveto
10 f0
(UNIDAD: Unidad de medida. Existe una relaci\363n de unidades de medida recomendadas, elaborada por la Asociaci\363n) show
0 609 moveto
10 f0
(de Redactores de Bases de Datos de CONSTRUCCION.) show
0 587 moveto
10 f0
( ) show
0 565 moveto
10 f0
(RESUMEN: Resumen del texto descriptivo. Cada soporte indicar\341 el n\372mero de caracteres que admite en su campo) show
0 554 moveto
10 f0
(resumen.) show
0 532 moveto
10 f0
( ) show
0 510 moveto
10 f0
(PRECIO: Precio del concepto. Un concepto puede tener varios precios alternativos que representen distintas \351pocas,) show
0 499 moveto
10 f0
(\341mbitos geogr\341ficos, etc., definidos biun\355vocamente respecto al campo [CABECERA] \\ {) show
0 488 moveto
10 f0
(ROTULO_IDENTIFICACION \\ } del registro ~V. Cuando haya m\341s de un precio se asignar\341n secuencialmente a cada) show
0 477 moveto
10 f0
(ROTULO definido; si hay m\341s ROTULOS que precios, se asignar\341 a aquellos el \372ltimo precio definido.) show
0 455 moveto
10 f0
( ) show
0 433 moveto
10 f0
(FECHA: Fecha de la \372ltima actualizaci\363n del precio. Cuando haya m\341s de una fecha se asignar\341n secuencialmente a) show
0 422 moveto
10 f0
(cada precio definido, si hay m\341s precios que fechas, los precios sin su correspondiente fecha tomar\341n la \372ltima fecha) show
0 411 moveto
10 f0
(definida.) show
0 389 moveto
10 f0
( ) show
0 367 moveto
10 f0
(Las fechas se definir\341n en el formato DDMMAA; DD representa el d\355a con dos d\355gitos, MM el mes y AA el a\361o, si la) show
0 356 moveto
10 f0
(fecha tiene menos de 5 d\355gitos representa mes y a\361o \372nicamente, si tiene menos de tres, solo el a\361o. Si se identifica la) show
0 345 moveto
10 f0
(fecha con un n\372mero impar de d\355gitos, se completar\341 con el car\341cter cero por la izquierda.) show
0 323 moveto
10 f0
( ) show
0 301 moveto
10 f0
(TIPO: Tipo de concepto, Inicialmente se reservan los siguientes tipos:) show
0 279 moveto
10 f0
(0 \(Sin clasificar\) 1 \(Mano de obra\), 2 \(Maquinaria y medios aux.\), 3 \(Materiales\).) show
0 257 moveto
10 f0
( ) show
0 235 moveto
10 f0
( ) show
0 210.7 moveto
12 f1
( ) show
0 183.1 moveto
12 f1
(REGISTRO TIPO DESCOMPOSICION) show
0 157.8 moveto
10 f0
( ) show
0 135.8 moveto
10 f0
(Este registro contiene la descomposici\363n de un concepto en otros a trav\351s de una o dos cantidades. El mismo registro lo) show
0 124.8 moveto
10 f0
(emplearemos para definir la descomposici\363n de un concepto tipo unidad de obra en conceptos tipo materiales, mano de) show
0 113.8 moveto
10 f0
(obra, maquinaria y auxiliares y para la descomposici\363n de un concepto tipo cap\355tulo en conceptos tipo unidad de obra o) show
0 102.8 moveto
10 f0
(subcap\355tulo.) show
0 80.8 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 7 7
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
28 747.8 moveto
10 f0
(~D | CODIGO_PADRE | { CODIGO_HIJO \\ FACTOR \\ RENDIMIENTO \\ } |) show
28 725.8 moveto
10 f0
( ) show
0 703.8 moveto
10 f0
(CODIGO_PADRE: CODIGO del concepto descompuesto.) show
0 681.8 moveto
10 f0
( ) show
0 659.8 moveto
10 f0
(CODIGO_HIJO: CODIGO de cada concepto que interviene en la descomposici\363n.) show
0 637.8 moveto
10 f0
( ) show
0 615.8 moveto
10 f0
(FACTOR: Factor de rendimiento, por defecto 1.0) show
0 593.8 moveto
10 f0
( ) show
0 571.8 moveto
10 f0
(RENDIMIENTO: N\372mero de unidades, rendimiento o medici\363n.) show
0 549.8 moveto
10 f0
( ) show
0 527.8 moveto
10 f0
(Cuando CODIGO_HIJO es un porcentaje, \351ste tiene tres partes:) show
0 505.8 moveto
10 f0
( ) show
56 483.8 moveto
10 f0
(1.- Prefijo que forma una m\341scara indicando sobre qu\351 elementos se aplica el porcentaje. Si el prefijo es) show
56 472.8 moveto
10 f0
(nulo, el porcentaje se aplica a todas las l\355neas anteriores.) show
56 450.8 moveto
10 f0
( ) show
56 428.8 moveto
10 f0
(2.- Un juego de caracteres que puede ser:) show
56 406.8 moveto
10 f0
('&' para porcentajes acumulables.) show
56 384.8 moveto
10 f0
('%' para porcentajes no acumulables expresados en tantos por uno.) show
56 362.8 moveto
10 f0
( ) show
56 340.8 moveto
10 f0
(3.- El resto del CODIGO permite diferenciar un porcentaje de otro.) show
56 318.8 moveto
10 f0
( ) show
56 296.8 moveto
10 f0
(Ejemplo: LD%N0001) show
56 274.8 moveto
10 f0
(LD - Sobre todas las l\355neas anteriores cuyo CODIGO comience por LD) show
56 252.8 moveto
10 f0
(% - No acumulable en tanto por uno.) show
56 230.8 moveto
10 f0
(N0001 - CODIGO diferenciador.) show
56 208.8 moveto
10 f0
(El rendimiento ser\341 el porcentaje que se aplica sobre las l\355neas anteriores a la actual y que queden) show
56 197.8 moveto
10 f0
(afectadas por la m\341scara.) show
56 175.8 moveto
10 f0
( ) show
56 153.8 moveto
10 f0
(Ejemplo de una l\355nea de descomposici\363n: L%N004 \\\\0.03\\) show
56 131.8 moveto
10 f0
(Esta l\355nea representa un porcentaje del 0.03 por uno \(3%\) de todas las l\355neas anteriores a la actual, incluso) show
56 120.8 moveto
10 f0
(porcentajes, cuyo CODIGO comience por L y cuyo texto estar\341 en la DEFINICION del CODIGO) show
56 109.8 moveto
10 f0
('L%N004'.) show
56 87.8 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 8 8
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
56 752 moveto
10 f0
( ) show
56 730 moveto
10 f0
( ) show
0 705.7 moveto
12 f1
(REGISTRO TIPO A\321ADIR DESCOMPOSICION) show
0 680.4 moveto
10 f0
( ) show
0 658.4 moveto
10 f0
(Con este registro se pueden a\361adir l\355neas de descomposici\363n, el registro tipo ~D cambia la descomposici\363n completa.) show
0 647.4 moveto
10 f0
(Para a\361adir conceptos nuevos a una base de datos, adem\341s de definir los registros C,T,L,D,... deber\355amos posicionar los) show
0 636.4 moveto
10 f0
(nuevos conceptos en el cap\355tulo o cap\355tulos donde queramos situarlos, para ello, es necesario un registro que nos) show
0 625.4 moveto
10 f0
(permita a\361adir una o varias l\355neas de descomposici\363n por cada cap\355tulo donde queramos posicionar un nuevo concepto.) show
0 603.4 moveto
10 f0
( ) show
28 581.4 moveto
10 f0
(~Y | CODIGO_PADRE | { CODIGO_HIJO \\ FACTOR \\ RENDIMIENTO \\ } |) show
28 559.4 moveto
10 f0
( ) show
0 537.4 moveto
10 f0
(Todos los campos tienen el mismo significado que en el registro tipo D.) show
0 515.4 moveto
10 f0
( ) show
0 493.4 moveto
10 f0
( ) show
0 471.4 moveto
10 f0
( ) show
0 447.1 moveto
12 f1
(REGISTRO TIPO TEXTO) show
0 421.8 moveto
10 f0
( ) show
0 399.8 moveto
10 f0
(Este registro contiene el texto descriptivo de un concepto) show
0 377.8 moveto
10 f0
( ) show
28 355.8 moveto
10 f0
(~T | CODIGO_CONCEPTO | TEXTO_DESCRIPTIVO |) show
28 333.8 moveto
10 f0
( ) show
0 311.8 moveto
10 f0
(CODIGO_CONCEPTO: CODIGO del concepto descrito) show
0 289.8 moveto
10 f0
( ) show
0 267.8 moveto
10 f0
(TEXTO_DESCRIPTIVO: Texto descriptivo del concepto sin limitaci\363n de tama\361o. El texto podr\341 contener caracteres) show
0 256.8 moveto
10 f0
(fin de l\355nea \(ASCII-13 + ASCII-10\) que se mantendr\341n al reformatearlo.) show
0 232.5 moveto
12 f1
(REGISTRO TIPO DESCRIPCION PARAMETRICA) show
0 207.2 moveto
10 f0
( ) show
0 185.2 moveto
10 f0
(Este registro contiene la descripci\363n param\351trica, bien en formato tradicional bien en formato API para DLL, que) show
0 174.2 moveto
10 f0
(incluye la DEFINICION de par\341metros, descomposiciones, comentario de ayuda a la selecci\363n de par\341metros,) show
0 163.2 moveto
10 f0
(res\372menes, textos, pliegos, claves e INFORMACION comercial, en funci\363n de tablas, expresiones y variables, para una) show
0 152.2 moveto
10 f0
(familia de conceptos.) show
0 130.2 moveto
10 f0
( ) show
28 108.2 moveto
10 f0
(Este registro puede adoptar dos formas:) show
28 86.2 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 9 9
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
28 752 moveto
10 f0
(~P | CODIGO_FAMILIA | DESCRIPCION_PARAMETRICA |) show
28 730 moveto
10 f0
( ) show
0 708 moveto
10 f0
(Cuando CODIGO_FAMILIA est\341 lleno, o bien DESCRIPCION_PARAMETRICA est\341 llena, o bien) show
0 697 moveto
10 f0
(DESCRIPCION_PARAMETRICA est\341 vac\355a. En \351ste \372ltimo caso se accede a la descripci\363n param\351trica de la familia) show
0 686 moveto
10 f0
(a trav\351s del archivo NOMBRE.DLL.) show
0 664 moveto
10 f0
( ) show
28 642 moveto
10 f0
(~P | | DESCRIPCION_PARAMETRICA | NOMBRE.DLL |) show
28 620 moveto
10 f0
( ) show
0 598 moveto
10 f0
(Cuando CODIGO_FAMILIA est\341 vac\355o, se refiere al param\351trico global.) show
0 576 moveto
10 f0
( ) show
0 554 moveto
10 f0
(Si DESCRIPCION_PARAMETRICA est\341 llena, el param\351trico global se establece a partir de \351sta. Si) show
0 543 moveto
10 f0
(DESCRIPCION_PARAMETRICA est\341 vac\355a y NOMBRE.DLL est\341 lleno, se establece a partir de \351ste. Si) show
0 532 moveto
10 f0
(DESCRIPCION_PARAMETRICA y NOMBRE.DLL est\341n llenos a la vez, tan solo es v\341lida) show
0 521 moveto
10 f0
(DESCRIPCION_PARAMETRICA.) show
0 499 moveto
10 f0
( ) show
0 477 moveto
10 f0
(CODIGO_FAMILIA: CODIGO del concepto tipo familia descrito. Si se utiliza un modelo de codificaci\363n dependiente) show
0 466 moveto
10 f0
(de los par\341metros \(ver Anexos 2 y 3\), este c\363digo debe poseer un car\341cter ?$? en su s\351ptima posici\363n, y los conceptos) show
0 455 moveto
10 f0
(en los que se deriva tendr\341n como c\363digo los seis primeros caracteres del mismo m\341s un car\341cter adicional por cada) show
0 444 moveto
10 f0
(par\341metro que posea.) show
0 422 moveto
10 f0
( ) show
0 400 moveto
10 f0
(DESCRIPCION_PARAMETRICA: Ver Anexo 2.) show
0 378 moveto
10 f0
( ) show
0 356 moveto
10 f0
(NOMBRE.DLL: Ver Anexo 3.) show
0 334 moveto
10 f0
( ) show
0 312 moveto
10 f0
( ) show
0 290 moveto
10 f0
( ) show
0 265.7 moveto
12 f1
(REGISTRO TIPO PLIEGOS) show
0 238.1 moveto
12 f1
( ) show
0 212.8 moveto
10 f0
(Este registro contiene las diferentes secciones y textos del pliego de condiciones de un concepto. El pliego de) show
0 201.8 moveto
10 f0
(condiciones se estructura de forma jer\341rquica con el Sistema de Clasificaci\363n por Codificaci\363n y de forma facetada en) show
0 190.8 moveto
10 f0
(varias secciones de distinto contenido.) show
0 168.8 moveto
10 f0
( ) show
0 146.8 moveto
10 f0
( ) show
0 124.8 moveto
10 f0
(SECCIONES DE LOS PLIEGOS.) show
0 102.8 moveto
10 f0
( ) show
0 80.8 moveto
10 f0
(Cuando el primer campo del registro ~L est\341 vac\355o, el registro define los CODIGOs de las SECCIONES de cada pliego y) show
pagelevel restore
showpage
%%Page: 10 10
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752 moveto
10 f0
(sus ROTULOs correspondientes. Este registro es \372nico para una base de datos u obra.) show
0 730 moveto
10 f0
( ) show
28 708 moveto
10 f0
(~L | | { CODIGO_SECCION_PLIEGO \\ ROTULO_SECCION_PLIEGO \\ } |) show
28 686 moveto
10 f0
( ) show
0 664 moveto
10 f0
(CODIGO_SECCION_ PLIEGO: CODIGO que define cada SECCION o faceta del pliego.) show
0 642 moveto
10 f0
( ) show
0 620 moveto
10 f0
(ROTULO_SECCION_PLIEGO: DEFINICION del ROTULO asociado a cada CODIGO correspondiente de cada) show
0 609 moveto
10 f0
(SECCION o faceta del pliego.) show
0 587 moveto
10 f0
(Ejemplo de las secciones de los pliegos definidas para la Base de Datos de CONSTRUCCION de la Comunidad de) show
0 576 moveto
10 f0
(Madrid y la Base de Datos de CONSTRUCCION de la Comunidad Valenciana, indicando CODIGO y ROTULO de la) show
0 565 moveto
10 f0
(SECCION:) show
0 543 moveto
10 f0
( ) show
28 521 moveto
10 f0
(~L| | DES\\ DESCRIPCION Y COMPLEMENTOS AL TEXTO) show
0 499 moveto
10 f0
(\\PRE\\ REQUISITOS PREVIOS A LA EJECUCI\323N) show
0 477 moveto
10 f0
(\\COM\\ COMPONENTES) show
0 455 moveto
10 f0
(\\EJE\\ EJECUCION Y ORGANIZACION) show
0 433 moveto
10 f0
(\\NOR\\ NORMATIVA) show
0 411 moveto
10 f0
(\\CON\\ CONTROL Y ACEPTACION) show
0 389 moveto
10 f0
(\\SEG\\ SEGURIDAD E HIGIENE) show
0 367 moveto
10 f0
(\\VAL\\ CRITERIOS DE VALORACION Y MEDICION) show
0 345 moveto
10 f0
(\\MAN\\ MANTENIMIENTO) show
0 323 moveto
10 f0
(\\VAR\\ VARIOS \\ |) show
0 301 moveto
10 f0
( ) show
0 279 moveto
10 f0
( ) show
0 257 moveto
10 f0
(MODELO 1 DE TEXTOS DE LOS PLIEGOS.) show
0 235 moveto
10 f0
( ) show
0 213 moveto
10 f0
(Cuando el primer campo del registro ~L no est\341 vac\355o, identifica a un concepto determinado. Puede haber un registro de) show
0 202 moveto
10 f0
(este tipo por cada concepto de una base de datos u obra.) show
0 180 moveto
10 f0
( ) show
28 158 moveto
10 f0
(~L | CODIGO_CONCEPTO | {CODIGO_SECCION_PLIEGO \\TEXTO_SECCION_PLIEGO \\ } |) show
28 136 moveto
10 f0
( ) show
0 114 moveto
10 f0
(CODIGO_CONCEPTO: CODIGO del concepto descrito, contenido en la base de datos.) show
0 92 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 11 11
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752 moveto
10 f0
(CODIGO_SECCION_PLIEGO: DEFINICION del CODIGO asociado a cada pliego.) show
0 730 moveto
10 f0
( ) show
0 708 moveto
10 f0
(TEXTO_SECCION_PLIEGO: Texto asignado a cada faceta o SECCION del pliego de condiciones del concepto.) show
0 686 moveto
10 f0
( ) show
0 664 moveto
10 f0
(El pliego de condiciones de cada concepto estar\341 dividido con caracteres '\\' en varias secciones o facetas, pensadas para) show
0 653 moveto
10 f0
(imprimirse juntas o por separado.) show
0 631 moveto
10 f0
( ) show
0 609 moveto
10 f0
(Los fines de l\355nea de cada SECCION del pliego se tratar\341n como en el REGISTRO TIPO TEXTO.) show
0 587 moveto
10 f0
( ) show
0 565 moveto
10 f0
( ) show
0 543 moveto
10 f0
(MODELO 2 DE TEXTOS DE LOS PLIEGOS.) show
0 521 moveto
10 f0
( ) show
0 499 moveto
10 f0
(Otra opci\363n permite asignar el Pliego mediante p\341rrafos de texto asociados a conceptos, utilizando el siguiente esquema) show
0 488 moveto
10 f0
(de registros, como forma alternativa a la anterior:) show
0 466 moveto
10 f0
( ) show
28 444 moveto
10 f0
(~Q | { CODIGO_CONCEPTO \\ } | { CODIGO_SECCION_PLIEGO \\ CODIGO_PARRAFO) show
28 422 moveto
10 f0
(\\ { ABREV_AMBITO; } \\ } |) show
28 400 moveto
10 f0
( ) show
28 378 moveto
10 f0
(~J | CODIGO_PARRAFO | TEXTO_PARRAFO | TEXTO_PARRAFO_RTF |) show
28 356 moveto
10 f0
( ) show
0 334 moveto
10 f0
(cOdigo_concepto: CODIGO del concepto descrito, contenido en la base de datos. Ser\341 \372nico para cada registro ~Q.) show
0 312 moveto
10 f0
(Este registro es de sustituci\363n de la INFORMACION, no es de acumulaci\363n.) show
0 290 moveto
10 f0
( ) show
0 268 moveto
10 f0
(COdigo_seccion_pliego: DEFINICION del CODIGO asociado a cada pliego. Corresponde al definido en el registro de) show
0 257 moveto
10 f0
(cabecera de pliego ~L.) show
0 235 moveto
10 f0
( ) show
0 213 moveto
10 f0
(CODIGO_PARRAFO: CODIGO del texto asociado a cada secci\363n del pliego.) show
0 191 moveto
10 f0
( ) show
0 169 moveto
10 f0
(ABREV_AMBITO: Identificador del \341mbito geogr\341fico de la secci\363n del pliego. Se define en un registro propio.) show
0 147 moveto
10 f0
( ) show
0 125 moveto
10 f0
(TEXTO_PARRAFO: Texto que define el contenido de los pliegos que se asocian a un concepto y se identifica con) show
0 114 moveto
10 f0
(CODIGO_PARRAFO.) show
0 92 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 12 12
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752 moveto
10 f0
(TEXTO_PARRAFO_RTF: Texto que define el contenido de los pliegos que se asocian a un concepto y se identifica) show
0 741 moveto
10 f0
(con CODIGO_PARRAFO, con formato RTF, de forma opcional, siendo siempre obligatorio el campo) show
0 730 moveto
10 f0
(TEXTO_PARRAFO.) show
0 708 moveto
10 f0
( ) show
0 686 moveto
10 f0
( ) show
0 664 moveto
10 f0
( ) show
0 639.7 moveto
12 f1
(REGISTRO TIPO AMBITO GEOGRAFICO) show
0 614.4 moveto
10 f0
( ) show
0 592.4 moveto
10 f0
(Establece el \341mbito geogr\341fico correspondiente a los Pliegos de Condiciones asociados a la Base de Datos. No) show
0 581.4 moveto
10 f0
(necesariamente deber\341 corresponder al campo CABECERA definido en el registro ~V.) show
0 559.4 moveto
10 f0
( ) show
28 537.4 moveto
10 f0
(~W | { ABREV_AMBITO \\ AMBITO \\ } |) show
28 515.4 moveto
10 f0
( ) show
0 493.4 moveto
10 f0
(ABREV_AMBITO: Nombre abreviado que identifica el territorio geogr\341fico al que se refiere. \(Comunidad Aut\363noma,) show
0 482.4 moveto
10 f0
(Provincia, Regi\363n, Comarca, Localidad, etc.\). El identificador < * > \(ASCII - 42\) indica AMBITO_GENERAL, y) show
0 471.4 moveto
10 f0
(representa todo el territorio nacional.) show
0 449.4 moveto
10 f0
( ) show
0 427.4 moveto
10 f0
(AMBITO: Nombre completo del territorio geogr\341fico. ) show
0 405.4 moveto
10 f0
( ) show
0 383.4 moveto
10 f0
(Existe una relaci\363n de abreviaturas recomendadas, elaborada por la Asociaci\363n de Redactores de Bases de Datos de) show
0 372.4 moveto
10 f0
(CONSTRUCCION.) show
0 350.4 moveto
10 f0
( ) show
0 328.4 moveto
10 f0
( ) show
0 304.1 moveto
12 f1
( ) show
0 276.5 moveto
12 f1
(REGISTRO TIPO INFORMACION GRAFICA.) show
0 251.2 moveto
10 f0
( ) show
28 229.2 moveto
10 f0
(~G | CODIGO_CONCEPTO | { ARCHIVO_GRAFICO. EXT \\ } |) show
28 207.2 moveto
10 f0
( ) show
0 185.2 moveto
10 f0
(CODIGO_CONCEPTO: CODIGO del concepto descrito en la base de datos y contenido en ella.) show
0 163.2 moveto
10 f0
( ) show
0 141.2 moveto
10 f0
(ARCHIVO_GRAFICO. EXT: Nombre del archivo que contiene la INFORMACION gr\341fica. Se usar\341n como) show
0 130.2 moveto
10 f0
(referencia programas estandarizados de uso general, para chequear y verificar el contenido del fichero. Estos programas) show
0 119.2 moveto
10 f0
(ser\341n:) show
0 97.2 moveto
10 f0
( ) show
28 75.2 moveto
10 f0
(Ficheros tipo r\341ster: Extensi\363n .BMP, .PCX : Windows 3.1) show
pagelevel restore
showpage
%%Page: 13 13
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
28 742.2 moveto
10 f0
(Ficheros vectoriales: Extensi\363n .WMF : Windows 3.1) show
28 720.2 moveto
10 f0
(Extensi\363n .DXF : Autocad 12 Windows) show
28 698.2 moveto
10 f0
( ) show
28 676.2 moveto
10 f0
( ) show
28 654.2 moveto
10 f0
( ) show
0 629.9 moveto
12 f1
(REGISTRO TIPO ENTIDAD.) show
0 604.6 moveto
10 f0
( ) show
0 582.6 moveto
10 f0
(Define las entidades suministradoras de documentaci\363n t\351cnica, tarifas de precios y especificaciones de los conceptos) show
0 571.6 moveto
10 f0
(contenidos en la Base de Datos.) show
0 549.6 moveto
10 f0
( ) show
28 527.6 moveto
10 f0
(~E | CODIGO_ENTIDAD | RESUMEN | NOMBRE | { TIPO \\ SUBNOMBRE ) show
28 505.6 moveto
10 f0
(\\ DIRECCI\323N \\ CP \\ LOCALIDAD \\ PROVINCIA \\ PAIS \\ { TELEFONO; } ) show
28 483.6 moveto
10 f0
(\\ { FAX; } \\ { PERSONA_CONTACTO; } \\ } |) show
28 461.6 moveto
10 f0
( ) show
0 439.6 moveto
10 f0
(CODIGO_ENTIDAD: CODIGO del SCc que define a la entidad \(empresa, organismo, etc.\).) show
0 417.6 moveto
10 f0
( ) show
0 395.6 moveto
10 f0
(RESUMEN: Nombre abreviado de la entidad ) show
0 373.6 moveto
10 f0
( ) show
0 351.6 moveto
10 f0
(NOMBRE: Nombre completo de la entidad.) show
0 329.6 moveto
10 f0
( ) show
0 307.6 moveto
10 f0
(TIPO: Se definen los siguientes:) show
56 285.6 moveto
10 f0
(C central. ) show
56 263.6 moveto
10 f0
(D delegaci\363n.) show
56 241.6 moveto
10 f0
(R representante.) show
56 219.6 moveto
10 f0
( ) show
0 197.6 moveto
10 f0
(SUBNOMBRE: Nombre de la delegaci\363n o representante en caso de que sea distinto de la central. Normalmente estar\341) show
0 186.6 moveto
10 f0
(vac\355o.) show
0 164.6 moveto
10 f0
( ) show
0 142.6 moveto
10 f0
(DIRECCI\323N \\ CP \\ LOCALIDAD \\ PROVINCIA \\ PAIS: Direcci\363n postal de la entidad con todos sus datos,) show
0 131.6 moveto
10 f0
(existiendo una direcci\363n por cada subcampo tipo, de forma ordenada y secuencial.) show
0 109.6 moveto
10 f0
( ) show
0 87.6 moveto
10 f0
(TELEFONO: N\372meros de tel\351fono de la entidad, de forma ordenada y secuencial respecto al subcampo tipo, separados) show
0 76.6 moveto
10 f0
(con el car\341cter < ; > \(ASCII-59\). Se indicar\341 con nueve caracteres num\351ricos, incluido el prefijo de la provincia.) show
pagelevel restore
showpage
%%Page: 14 14
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 743.6 moveto
10 f0
( ) show
0 721.6 moveto
10 f0
(FAX: N\372meros de fax de la entidad, con las mismas especificaciones que el campo anterior.) show
0 699.6 moveto
10 f0
( ) show
0 677.6 moveto
10 f0
(PERSONA_CONTACTO: Nombre de las personas de contacto con la entidad y cargo que desempe\361a, podr\341 haber) show
0 666.6 moveto
10 f0
(varias asociadas a cada subcampo tipo, de forma que est\351n separadas por el car\341cter ASCII-59. ) show
0 644.6 moveto
10 f0
( ) show
0 622.6 moveto
10 f0
( ) show
0 600.6 moveto
10 f0
( ) show
0 576.3 moveto
12 f1
(REGISTRO TIPO RELACI\323N COMERCIAL) show
242.3 576.3 moveto
12 f1
( ) show
0 551 moveto
10 f0
( ) show
0 529 moveto
10 f0
(Este registro establece los v\355nculos entre los conceptos de una Base de Datos General \( BDG \) con los productos) show
0 518 moveto
10 f0
(comerciales de una Base de Datos Espec\355fica \( BDE \), y/o viceversa.) show
0 496 moveto
10 f0
(As\355 una Base de Datos \( BD \) podr\341 contener CONCEPTOS gen\351ricos de una BDG, CONCEPTOS referentes a) show
0 485 moveto
10 f0
(productos comerciales de una BDE, o ambas a la vez.) show
0 463 moveto
10 f0
( ) show
28 441 moveto
10 f0
(~O | CODIGO_RAIZ_BD # CODIGO_CONCEPTO | | ) show
28 419 moveto
10 f0
({ CODIGO_ARCHIVO \\ CODIGO_ENTIDAD # CODIGO_CONCEPTO \\ } |) show
28 397 moveto
10 f0
( ) show
0 375 moveto
10 f0
(CODIGO_RAIZ_BD # CODIGO_CONCEPTO: Identificador de un concepto de una BD, donde:) show
0 353 moveto
10 f0
( ) show
28 331 moveto
10 f0
(. CODIGO_RAIZ_BD: Se refiere a la identificaci\363n del CODIGO de la entidad que elabora la BD. Este) show
28 320 moveto
10 f0
(CODIGO debe ser facilitado por la entidad que elabora la BD, para evitar ambig\374edades.) show
28 298 moveto
10 f0
( ) show
28 276 moveto
10 f0
(. CODIGO_CONCEPTO: Se refiere a un concepto que pertenece a CODIGO_RAIZ_BD, y empleado por \351sta) show
28 265 moveto
10 f0
(en su sistema de clasificaci\363n por codificaci\363n.) show
28 243 moveto
10 f0
( ) show
0 221 moveto
10 f0
(CODIGO_ARCHIVO: Se refiere al nombre del archivo que, de existir, indica el lugar donde se encuentra la) show
0 210 moveto
10 f0
(INFORMACION referente a CODIGO_ENTIDAD # CODIGO_CONCEPTO. Sin embargo si dicho) show
0 199 moveto
10 f0
(CODIGO_ARCHIVO no existe, entonces indica que CODIGO_ENTIDAD # CODIGO_CONCEPTO se encuentra en) show
0 188 moveto
10 f0
(la misma BD.) show
0 166 moveto
10 f0
( ) show
0 144 moveto
10 f0
(CODIGO_ENTIDAD # CODIGO_CONCEPTO: Identificador de un concepto de una BD, donde:) show
0 122 moveto
10 f0
( ) show
28 100 moveto
10 f0
(. CODIGO_ENTIDAD: Se refiere a la identificaci\363n del CODIGO de la entidad a la que se le asocia) show
28 89 moveto
10 f0
(INFORMACION. Este CODIGO debe ser facilitado por la entidad que elabora la BD, de acuerdo con su sistema) show
28 78 moveto
10 f0
(de clasificaci\363n, para evitar ambig\374edades.) show
pagelevel restore
showpage
%%Page: 15 15
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
28 745 moveto
10 f0
( ) show
28 723 moveto
10 f0
(. CODIGO_CONCEPTO: Se refiere a un concepto que pertenece a CODIGO_ENTIDAD, y empleado por la) show
28 712 moveto
10 f0
(entidad que elabora la BD en su sistema de clasificaci\363n por codificaci\363n.) show
28 690 moveto
10 f0
( ) show
0 668 moveto
10 f0
(Cuando CODIGO_CONCEPTO se refiera a un producto comercial, dicho CODIGO deber\341 ser facilitado por el) show
0 657 moveto
10 f0
(fabricante, y no podr\341 coincidir nunca con la designaci\363n de CODIGO_RAIZ_BD, CODIGO_ENTIDAD o) show
0 646 moveto
10 f0
(CODIGO_CONCEPTO, cuando \351ste se refiere a un concepto gen\351rico. Al tener dicho producto comercial un) show
0 635 moveto
10 f0
(tratamiento de CONCEPTO, \351ste puede utilizar todos los registros existentes en el formato para especificar su) show
0 624 moveto
10 f0
(INFORMACION asociada \(precio, INFORMACION gr\341fica, etc.\).) show
0 602 moveto
10 f0
( ) show
0 580 moveto
10 f0
( ) show
0 558 moveto
10 f0
( ) show
0 533.7 moveto
12 f1
(REGISTRO TIPO INFORMACION TECNICA ) show
0 508.4 moveto
10 f0
( ) show
0 486.4 moveto
10 f0
(Este registro contiene la ESPECIFICACION de otros datos referentes al concepto, como por ejemplo, peso espec\355fico o) show
0 475.4 moveto
10 f0
(nominal, caracter\355sticas f\355sicas, cuant\355as geom\351tricas, propiedades f\355sico-mec\341nicas, etc.) show
0 453.4 moveto
10 f0
( ) show
0 431.4 moveto
10 f0
(Estos datos podr\355an emplearse en otras utilidades, como el c\341lculo de los coeficientes de transmisi\363n t\351rmica,) show
0 420.4 moveto
10 f0
(aislamiento ac\372stico, etc.) show
0 398.4 moveto
10 f0
( ) show
0 376.4 moveto
10 f0
(El registro tipo INFORMACION T\351cnica puede adoptar dos formas:) show
0 354.4 moveto
10 f0
( ) show
0 332.4 moveto
10 f0
(Si el primer campo est\341 vac\355o, \351ste sirve como diccionario de t\351rminos de INFORMACION T\351cnica a los cuales se les) show
0 321.4 moveto
10 f0
(podr\341 asociar una descripci\363n y una unidad de medida.) show
0 299.4 moveto
10 f0
( ) show
28 277.4 moveto
10 f0
(~X | | { CODIGO_IT \\ DESCRIPCION_IT \\ UM \\ } | ) show
28 255.4 moveto
10 f0
( ) show
28 233.4 moveto
10 f0
( ) show
0 211.4 moveto
10 f0
(Si el primer campo identifica a un concepto, la INFORMACION que se especificar\341 a continuaci\363n ser\341n la/las parejas) show
0 200.4 moveto
10 f0
(de t\351rminos de INFORMACION t\351cnica con sus respectivos valores.) show
0 178.4 moveto
10 f0
( ) show
28 156.4 moveto
10 f0
(~X | CODIGO_CONCEPTO | { CODIGO_IT \\ VALOR_IT \\ } | ) show
28 134.4 moveto
10 f0
( ) show
0 112.4 moveto
10 f0
(CODIGO_IT: CODIGO de la INFORMACION T\351cnica descrita.) show
0 90.4 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 16 16
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752 moveto
10 f0
(DESCRIPCION_IT: Texto descriptivo de la INFORMACION T\351cnica, sin limitaci\363n de tama\361o.) show
0 730 moveto
10 f0
( ) show
0 708 moveto
10 f0
(UM: En el caso que los valores de la INFORMACION T\351cnica sean valores num\351ricos, se indicar\341 su Unidad de) show
0 697 moveto
10 f0
(Medida, de acuerdo con el Sistema Internacional de Unidades de Medida.) show
0 675 moveto
10 f0
( ) show
0 653 moveto
10 f0
(CODIGO_CONCEPTO: CODIGO del concepto descrito, contenido en la base de datos. Ser\341 \372nico para cada registro) show
0 642 moveto
10 f0
(~X.) show
0 620 moveto
10 f0
( ) show
0 598 moveto
10 f0
(VALOR_IT: Valor alfab\351tico o num\351rico de la INFORMACION T\351cnica.) show
0 576 moveto
10 f0
( ) show
0 554 moveto
10 f0
( ) show
0 532 moveto
10 f0
( ) show
0 507.7 moveto
12 f1
(REGISTRO TIPO COEFICIENTES.) show
0 482.4 moveto
10 f0
( ) show
0 460.4 moveto
10 f0
(Indica el n\372mero de decimales en cada campo num\351rico.) show
0 438.4 moveto
10 f0
( ) show
28 416.4 moveto
10 f0
(~K | DN \\ DD \\ DS \\ DR \\ DI \\ DP \\ DC \\ DM | CI |) show
28 394.4 moveto
10 f0
( ) show
0 372.4 moveto
10 f0
(DN : Decimales del campo n\372mero de partes iguales de la hoja de mediciones.) show
0 350.4 moveto
10 f0
(DD : Decimales de Dimensiones de las tres magnitudes de la hoja de mediciones.) show
0 328.4 moveto
10 f0
(DS : Decimales de la l\355nea de subtotal o total de mediciones) show
0 306.4 moveto
10 f0
(DR : Decimales de rendimiento y factor en una descomposici\363n.) show
0 284.4 moveto
10 f0
(DI : Decimales del importe resultante de multiplicar rendimiento x precio ) show
0 262.4 moveto
10 f0
(del concepto.) show
0 240.4 moveto
10 f0
(DP : Decimales del importe resultante del sumatorio de los costes directos del concepto.) show
0 218.4 moveto
10 f0
(DC : Decimales del importe total del concepto. \(CD+CI\).) show
0 196.4 moveto
10 f0
(DM : Decimales del importe resultante de multiplicar la medici\363n total del concepto por ) show
0 174.4 moveto
10 f0
(su precio.) show
0 152.4 moveto
10 f0
(CI : Porcentaje de costes indirectos.) show
0 130.4 moveto
10 f0
( ) show
0 108.4 moveto
10 f0
( ) show
0 84.1 moveto
12 f1
( ) show
pagelevel restore
showpage
%%Page: 17 17
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 745.5 moveto
12 f1
(REGISTRO TIPO MEDICIONES) show
0 720.2 moveto
10 f0
( ) show
0 698.2 moveto
10 f0
(En este registro figuran las mediciones \(cantidades\), en que interviene un concepto de un presupuesto en la) show
0 687.2 moveto
10 f0
(descomposici\363n de otro de mayor rango.) show
0 665.2 moveto
10 f0
( ) show
0 643.2 moveto
10 f0
(En el intercambio de archivos de presupuestos, deber\341 figurar siempre este registro, exista o no desglose de mediciones.) show
0 621.2 moveto
10 f0
( ) show
0 599.2 moveto
10 f0
(Cuando se trate de intercambiar una relaci\363n de registros ~M que recogen un listado de mediciones no estructurado, no) show
0 588.2 moveto
10 f0
(es necesario la disposici\363n de un CODIGO ra\355z ni los registros ~D complementarios. El operador indicar\341 en estos casos) show
0 577.2 moveto
10 f0
(cual es el destino de la medici\363n.) show
0 555.2 moveto
10 f0
( ) show
28 533.2 moveto
10 f0
(~M | [ CODIGO_PADRE \\ ] CODIGO_HIJO | { POSICION \\ } | MEDICION_TOTAL) show
28 511.2 moveto
10 f0
(| { TIPO \\ COMENTARIO \\ UNIDADES \\ LONGITUD \\ LATITUD \\ ALTURA \\ } |) show
28 489.2 moveto
10 f0
( ) show
0 467.2 moveto
10 f0
(CODIGO_PADRE: CODIGO del concepto padre o concepto descompuesto del presupuesto.) show
0 445.2 moveto
10 f0
( ) show
0 423.2 moveto
10 f0
(CODIGO_HIJO: CODIGO del concepto hijo o concepto de la l\355nea de descomposici\363n.) show
0 401.2 moveto
10 f0
( ) show
0 379.2 moveto
10 f0
(Este campo es opcional en el caso de intercambiar mediciones no estructuradas, es decir, que no pertenecen a la) show
0 368.2 moveto
10 f0
(estructura general y completa de un presupuesto.) show
0 346.2 moveto
10 f0
( ) show
0 324.2 moveto
10 f0
(POSICION: Posici\363n del CONCEPTO_HIJO en la descomposici\363n del CONCEPTO_PADRE, este dato permite) show
0 313.2 moveto
10 f0
(identificar la medici\363n cuando la descomposici\363n del concepto padre incluye varios conceptos hijo con el mismo) show
0 302.2 moveto
10 f0
(CODIGO, la numeraci\363n de las posiciones comenzar\341 con el 1.) show
0 280.2 moveto
10 f0
( ) show
0 258.2 moveto
10 f0
(El campo POSICION deber\341 especificarse siempre en intercambio de presupuestos cuando \351ste sea completo y) show
0 247.2 moveto
10 f0
(estructurado, e indicar\341 el camino completo de la medici\363n descrita en la estructura del archivo. Por ejemplo 3 \\ 5 \\ 2,) show
0 236.2 moveto
10 f0
(indicar\341 la medici\363n correspondiente al cap\355tulo 3 del archivo; subcap\355tulo 5 del cap\355tulo 3; y partida 2 del subcap\355tulo) show
0 225.2 moveto
10 f0
(5. En mediciones no estructuradas este campo es opcional.) show
0 203.2 moveto
10 f0
( ) show
0 181.2 moveto
10 f0
(MEDICION_TOTAL: Debe coincidir con el rendimiento del registro tipo '~D' correspondiente.) show
0 159.2 moveto
10 f0
(Incorpora el sumatorio del producto de unidades, longitud, latitud y altura o el resultado de expresiones de cada l\355nea, al) show
0 148.2 moveto
10 f0
(leer este registro se recalcular\341 este valor.) show
0 126.2 moveto
10 f0
( ) show
0 104.2 moveto
10 f0
(TIPO: Indica el tipo de l\355nea de medici\363n de que se trate. Usualmente este subcampo estar\341 vac\355o. Los tipos) show
0 93.2 moveto
10 f0
(establecidos en esta VERSION son:) show
pagelevel restore
showpage
%%Page: 18 18
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752 moveto
10 f0
( ) show
56 730 moveto
10 f0
('1': Subtotal parcial: En esta l\355nea aparecer\341 el subtotal de las l\355neas anteriores desde el \372ltimo subtotal) show
56 719 moveto
10 f0
(hasta la l\355nea inmediatamente anterior a \351sta.) show
56 697 moveto
10 f0
( ) show
56 675 moveto
10 f0
('2': Subtotal acumulado: En esta l\355nea aparecer\341 el subtotal de todas las l\355neas anteriores desde la primera) show
56 664 moveto
10 f0
(hasta la l\355nea inmediatamente anterior a \351sta.) show
56 642 moveto
10 f0
( ) show
56 620 moveto
10 f0
('3': Expresi\363n: Indicar\341 que en el subcampo COMENTARIO aparecer\341 una expresi\363n algebraica a) show
56 609 moveto
10 f0
(evaluar. Se podr\341n utilizar los operadores '\(', '\)', '+', '-', '*', '/' y '^'; las variables 'a', 'b', 'c' y 'd' \(que) show
56 598 moveto
10 f0
(tendr\341n por valor las cantidades introducidas en los subcampos UNIDADES, LONGITUD, LATITUD y) show
56 587 moveto
10 f0
(ALTURA respectivamente\); y la constante 'p' para el valor Pi=3.1415926. Si la expresi\363n utiliza alguna) show
56 576 moveto
10 f0
(variable, \351sta ser\341 v\341lida hasta la siguiente l\355nea de medici\363n en la que se defina otra expresi\363n.) show
56 554 moveto
10 f0
( ) show
0 532 moveto
10 f0
(COMENTARIO: Texto en la l\355nea de medici\363n. Podr\341 ser un comentario o una expresi\363n algebraica.) show
0 510 moveto
10 f0
( ) show
0 488 moveto
10 f0
(UNIDADES, LONGITUD, LATITUD, ALTURA: Cuatro n\372mero reales con las mediciones. Si alguna magnitud no) show
0 477 moveto
10 f0
(existe se dejar\341 este campo vac\355o.) show
0 455 moveto
10 f0
( ) show
0 433 moveto
10 f0
( ) show
0 411 moveto
10 f0
( ) show
0 386.7 moveto
12 f1
(REGISTRO TIPO A\321ADIR MEDICIONES) show
0 361.4 moveto
10 f0
( ) show
0 339.4 moveto
10 f0
(Igual que el registro tipo ~M pero a\361ade las l\355neas de medici\363n de este registro a las ya existentes en vez de substituir) show
0 328.4 moveto
10 f0
(toda la medici\363n como hace en aquel.) show
0 306.4 moveto
10 f0
( ) show
28 284.4 moveto
10 f0
(~N | [ CODIGO_PADRE \\ ] CODIGO_HIJO | { POSICION \\ } |MEDICION) show
28 262.4 moveto
10 f0
(| {TIPO \\ COMENTARIO \\ UNIDADES \\ LONGITUD \\ LATITUD \\ ALTURA \\ } |) show
28 238.1 moveto
12 f1
( ) show
28 210.5 moveto
12 f1
( ) show
28 182.9 moveto
12 f1
( ) show
0 155.3 moveto
12 f1
(REGISTRO TIPO CLAVES) show
0 130 moveto
10 f0
( ) show
0 108 moveto
10 f0
(Este registro establece la relaci\363n entre CODIGOs y descriptores del tesauro, para permitir la b\372squeda de conceptos) show
0 97 moveto
10 f0
(mediante t\351rminos clave.) show
0 75 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 19 19
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
28 742 moveto
10 f0
(~A | CODIGO_CONCEPTO | { CLAVE_TESAURO \\ } |) show
28 720 moveto
10 f0
( ) show
0 698 moveto
10 f0
(CODIGO_CONCEPTO: CODIGO del concepto descrito en la base de datos y contenido en ella.) show
0 676 moveto
10 f0
( ) show
0 654 moveto
10 f0
(CLAVE_TESAURO: T\351rminos clave relacionados con el concepto. Los t\351rminos compuestos \(hormig\363n armado,) show
0 643 moveto
10 f0
(cart\363n-yeso, mortero mixto\) se identificar\341n unidos mediante < _ > \(ASCII - 95\), \( hormig\363n_armado, cart\363n_yeso,) show
0 632 moveto
10 f0
(mortero_mixto...\). No est\341 permitido el empleo del espacio en blanco.) show
0 610 moveto
10 f0
( ) show
0 588 moveto
10 f0
( ) show
0 566 moveto
10 f0
( ) show
0 541.7 moveto
12 f1
(REGISTRO TIPO CAMBIO DE CODIGO) show
0 516.4 moveto
10 f0
( ) show
0 494.4 moveto
10 f0
(Con este registro se posibilita el cambio o anulaci\363n de los CODIGOs de los conceptos, \372nica unidad de) show
0 483.4 moveto
10 f0
(INFORMACION que no se pod\355a modificar con los registros definidos anteriormente.) show
0 461.4 moveto
10 f0
( ) show
28 439.4 moveto
10 f0
(~B | CODIGO_CONCEPTO | CODIGO_NUEVO |) show
28 417.4 moveto
10 f0
( ) show
0 395.4 moveto
10 f0
(CODIGO_CONCEPTO: CODIGO del concepto a cambiar o anular. Debe existir y pertenece a un concepto contenido) show
0 384.4 moveto
10 f0
(en la BD) show
0 362.4 moveto
10 f0
( ) show
0 340.4 moveto
10 f0
(CODIGO_NUEVO: Nuevo CODIGO para CODIGO_CONCEPTO, no debe existir previamente. Si este campo est\341) show
0 329.4 moveto
10 f0
(vac\355o, se entiende que hay que eliminar CODIGO_CONCEPTO.) show
0 307.4 moveto
10 f0
( ) show
0 285.4 moveto
10 f0
( ) show
0 263.4 moveto
10 f0
( ) show
0 239.1 moveto
12 f1
(FORMATO FIEBDC-3. RESUMEN.) show
0 213.8 moveto
10 f0
( ) show
0 191.8 moveto
10 f0
( ) show
28 169.8 moveto
10 f0
(~V | PROPIEDAD_ARCHIVO | VERSION_FORMATO \\ DDMMAA | PROGRAMA_EMISION |) show
28 147.8 moveto
10 f0
([CABECERA] \\ { ROTULO_IDENTIFICACION \\ } | JUEGO_CARACTERES |) show
28 125.8 moveto
10 f0
( ) show
28 103.8 moveto
10 f0
(~C | {CODIGO \\ } | UNIDAD | RESUMEN | { PRECIO \\ } | { FECHA \\ } | TIPO |) show
28 81.8 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 20 20
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
28 748.8 moveto
10 f0
(~D | CODIGO_PADRE | { CODIGO_HIJO \\ FACTOR \\ RENDIMIENTO \\ } |) show
28 726.8 moveto
10 f0
( ) show
28 704.8 moveto
10 f0
(~Y | CODIGO_PADRE | { CODIGO_HIJO \\ FACTOR \\ RENDIMIENTO \\ } |) show
28 682.8 moveto
10 f0
( ) show
28 660.8 moveto
10 f0
(~T | CODIGO_CONCEPTO | TEXTO_DESCRIPTIVO |) show
28 638.8 moveto
10 f0
( ) show
28 616.8 moveto
10 f0
(~P | CODIGO_FAMILIA | DESCRIPCION_PARAMETRICA |) show
28 594.8 moveto
10 f0
(~P | | DESCRIPCION_PARAMETRICA | NOMBRE.DLL |) show
28 572.8 moveto
10 f0
( ) show
28 550.8 moveto
10 f0
(~L | | { CODIGO_SECCION_PLIEGO \\ ROTULO_SECCION_PLIEGO \\ } |) show
28 528.8 moveto
10 f0
( ) show
28 506.8 moveto
10 f0
(~L | CODIGO_CONCEPTO | {CODIGO_SECCION_PLIEGO \\TEXTO_SECCION_PLIEGO \\ } |) show
28 484.8 moveto
10 f0
( ) show
28 462.8 moveto
10 f0
(~Q | { CODIGO_CONCEPTO \\ } | { CODIGO_SECCION_PLIEGO \\ CODIGO_PARRAFO) show
28 440.8 moveto
10 f0
(\\ { ABREV_AMBITO; } \\ } |) show
28 418.8 moveto
10 f0
( ) show
28 396.8 moveto
10 f0
(~J | CODIGO_PARRAFO | TEXTO_PARRAFO | TEXTO_PARRAFO_RTF |) show
28 374.8 moveto
10 f0
( ) show
28 352.8 moveto
10 f0
(~W | { ABREV_AMBITO \\ AMBITO \\ } |) show
28 330.8 moveto
10 f0
( ) show
28 308.8 moveto
10 f0
(~G | CODIGO_CONCEPTO | { ARCHIVO_GRAFICO. EXT \\ } |) show
28 286.8 moveto
10 f0
( ) show
28 264.8 moveto
10 f0
(~E | CODIGO_ENTIDAD | RESUMEN | NOMBRE | { TIPO \\ SUBNOMBRE) show
28 242.8 moveto
10 f0
(\\ DIRECCI\323N \\ CP \\ LOCALIDAD \\ PROVINCIA \\ PAIS \\ { TELEFONO; } ) show
28 220.8 moveto
10 f0
(\\ { FAX; } \\ { PERSONA_CONTACTO; } \\ } |) show
28 198.8 moveto
10 f0
( ) show
28 176.8 moveto
10 f0
(~O | CODIGO_RAIZ_BD # CODIGO_CONCEPTO | | { CODIGO_ARCHIVO \\ ) show
28 154.8 moveto
10 f0
(CODIGO_ENTIDAD # CODIGO_CONCEPTO \\ } |) show
28 132.8 moveto
10 f0
( ) show
28 110.8 moveto
10 f0
(~X | | { CODIGO_IT \\ DESCRIPCION_IT \\ UM \\ } | ) show
28 88.8 moveto
10 f0
(~X | CODIGO_CONCEPTO | { CODIGO_IT \\ VALOR_IT \\ } | ) show
pagelevel restore
showpage
%%Page: 21 21
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
28 752 moveto
10 f0
( ) show
28 730 moveto
10 f0
(~K | DN \\ DD \\ DS \\ DR \\ DI \\ DP \\ DC \\ DM | CIE |) show
28 708 moveto
10 f0
( ) show
28 686 moveto
10 f0
(~M | [ CODIGO_PADRE \\ ] CODIGO_HIJO | { POSICION \\ } | MEDICION) show
28 664 moveto
10 f0
(| { TIPO \\ COMENTARIO \\ UNIDADES \\ LONGITUD \\ LATITUD \\ ALTURA \\ } |) show
28 642 moveto
10 f0
( ) show
28 620 moveto
10 f0
(~N | [ CODIGO_PADRE \\ ] CODIGO_HIJO | { POSICION \\ } | MEDICION) show
28 598 moveto
10 f0
(| { TIPO \\ COMENTARIO \\ UNIDADES \\ LONGITUD \\ LATITUD \\ ALTURA \\ } |) show
28 576 moveto
10 f0
( ) show
28 554 moveto
10 f0
(~A | CODIGO_CONCEPTO | { CLAVE_TESAURO \\ } |) show
28 532 moveto
10 f0
( ) show
28 510 moveto
10 f0
(~B | CODIGO_CONCEPTO | CODIGO_NUEVO |) show
0 483.9 moveto
14 f1
(Anexo 1. Cambios respecto a FIEBDC-3/95.) show
0 456 moveto
10 f0
( ) show
0 434 moveto
10 f0
( ) show
0 412 moveto
10 f0
(A continuaci\363n se indica la lista de apartados y registros del FIEBDC-3/95 afectados por ampliaciones y/o) show
0 401 moveto
10 f0
(modificaciones:) show
28 379 moveto
10 f0
(1. FORMATO FIEBDC-3. ESPECIFICACION.) show
28 357 moveto
10 f0
(2. ~V. Registro tipo PROPIEDAD Y VERSION.) show
28 335 moveto
10 f0
(3. ~C. Registro tipo CONCEPTO.) show
28 313 moveto
10 f0
(4. ~P. Registro tipo DESCRIPCION PARAMETRICA.) show
28 291 moveto
10 f0
(5. ~O. Registro tipo INFORMACION COMERCIAL, que pasa a denominarse RELACION COMERCIAL.) show
28 269 moveto
10 f0
(6. Se a\361ade el registro ~X. Registro tipo INFORMACION T\311CNICA.) show
28 247 moveto
10 f0
(7. Se a\361ade el nuevo tratamiento de DESCRIPCI\323N PARAM\311TRICA: API ESTANDAR para descripciones) show
28 236 moveto
10 f0
(param\351tricas compiladas en DLL \(Anexo 3\).) show
0 209.9 moveto
14 f1
(Anexo 2. DESCRIPCI\323N PARAM\311TRICA: Formato ESTANDAR.) show
0 182 moveto
10 f0
( ) show
0 160 moveto
10 f0
( ) show
0 138 moveto
10 f0
(Un concepto param\351trico es el que define su CODIGO, resumen, texto, pliego, descomposici\363n e INFORMACION) show
0 127 moveto
10 f0
(comercial de forma param\351trica, esto es, de una forma variable mediante tablas y expresiones aritm\351ticas y l\363gicas) show
0 116 moveto
10 f0
(funci\363n de par\341metros.) show
0 94 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 22 22
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752 moveto
10 f0
(En la descripci\363n param\351trica se encuentran las siguientes sentencias:) show
0 730 moveto
10 f0
( ) show
0 708 moveto
10 f0
(Se definen las variables:) show
0 686 moveto
10 f0
(%A %B %C %D Par\341metros seleccionados del concepto, de "a" a "z" ~ 1 a 26.) show
0 664 moveto
10 f0
(%O %P %Q %R Par\341metros seleccionados de la obra, de "a" a "z" ~ 1 a 26.) show
0 642 moveto
10 f0
(%E Variable que define las condiciones de error.) show
0 620 moveto
10 f0
($A $B $C $D Textos de los par\341metros seleccionados del concepto.) show
0 598 moveto
10 f0
($O $P $Q $R Textos de los par\341metros seleccionados de la obra.) show
0 576 moveto
10 f0
($E Variable que define los textos de error.) show
0 554 moveto
10 f0
( ) show
0 532 moveto
10 f0
(De forma equivalente las variables %O a %R y $O a $R tomar\355an el valor correspondiente a los valores de los) show
0 521 moveto
10 f0
(par\341metros generales de la obra.) show
0 499 moveto
10 f0
( ) show
0 477 moveto
10 f0
(Cualquier variable de la 'A' a la 'Z' tanto num\351rica \(%\) como alfanum\351rica \($\) se puede definir o redefinir con) show
0 466 moveto
10 f0
(cualquier n\372mero de dimensiones para ser utilizada posteriormente en expresiones.) show
0 444 moveto
10 f0
( ) show
0 422 moveto
10 f0
(Se definen las constantes de la 'a' a la 'z' con los valores num\351ricos del 1 al 26 respectivamente, para permitir) show
0 411 moveto
10 f0
(referenciar los par\341metros de forma nemot\351cnica. Para la utilizaci\363n de otro tipo de caracteres, se determinar\341 en el) show
0 400 moveto
10 f0
(texto de la opci\363n del par\341metro seleccionado el car\341cter de sustituci\363n que se desea utilizar, anteponi\351ndole un car\341cter) show
0 389 moveto
10 f0
(especial ' ! ' .Si dicho car\341cter no existe la sustituci\363n se realiza relacionando el car\341cter con la posici\363n que ocupa.) show
0 367 moveto
10 f0
( ) show
0 345 moveto
10 f0
(Ejemplo: PBPO.2$ M3 Hormig\363n $B $A) show
28 323 moveto
10 f0
(\\ CONSISTENCIA \\ pl\341stica \\ fluida \\ blanda \\) show
28 301 moveto
10 f0
(\\ RESISTENCIA \\ H-125 \\ H-150 \\ H-175 \\ H-200 \\) show
28 279 moveto
10 f0
(El derivado PBPO.2aa ser\355a: M3 Hormig\363n H-125 pl\341stica) show
28 257 moveto
10 f0
( ) show
28 235 moveto
10 f0
(Con el car\341cter especial:) show
28 213 moveto
10 f0
(\\ CONSISTENCIA \\ !p pl\341stica \\ !f fluida \\ !b blanda \\) show
28 191 moveto
10 f0
(\\ RESISTENCIA \\ !2 H-125 \\ !5 H-150 \\ !7 H-175 \\ !0 H-200 \\) show
28 169 moveto
10 f0
(El mismo derivado ser\355a: PBPO.2p2 M3 Hormig\363n H-125 pl\341stica.) show
28 147 moveto
10 f0
( ) show
0 125 moveto
10 f0
(Las variables num\351ricas deben permitir valores reales en coma flotante de doble precisi\363n \(64bits\) y las variables) show
0 114 moveto
10 f0
(alfanum\351ricas deben poder almacenar textos de cualquier tama\361o.) show
0 92 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 23 23
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752 moveto
10 f0
(Cualquier variable puede definirse, en la misma asignaci\363n, con cualquier n\372mero y tama\361o de dimensiones \(hasta 4\),) show
0 741 moveto
10 f0
(en la DEFINICION de dimensiones tendr\341n que hacerse expl\355citas todas las dimensiones.) show
0 719 moveto
10 f0
( ) show
140 697 moveto
10 f0
(%U=...... # define una variable con un dato num\351rico) show
140 675 moveto
10 f0
($X\(8\)=..... # define una lista de 8 datos alfanum\351ricos) show
140 653 moveto
10 f0
(%V\(3,4\)= ..... # define una tabla con 3 filas y 4 columnas de datos n.) show
140 631 moveto
10 f0
( ) show
0 609 moveto
10 f0
(Las variables %E y $E son especiales para devolver errores producidos por selecciones de par\341metros no coherentes.) show
0 598 moveto
10 f0
(En una evaluaci\363n secuencial de expresiones, si en una expresi\363n la variable %E adopta un valor distinto de 0, ha) show
0 587 moveto
10 f0
(habido alg\372n error, se interrumpe la evaluaci\363n de expresiones y se presenta el contenido de la variable $E donde se) show
0 576 moveto
10 f0
(almacena el texto del error producido.) show
0 554 moveto
10 f0
(Pueden haber m\372ltiples asignaciones de %E, cada una de ellas precedida de su correspondiente texto de error,) show
0 543 moveto
10 f0
(asignaci\363n de $E.) show
0 521 moveto
10 f0
( ) show
0 499 moveto
10 f0
(Las constantes alfanum\351ricas se definir\341n entre comillas \($I="incluida parte proporcional"\).) show
0 477 moveto
10 f0
( ) show
0 455 moveto
10 f0
(En la descripci\363n param\351trica podemos encontrar los siguientes tipos de sentencias:) show
0 433 moveto
10 f0
( ) show
0 411 moveto
10 f0
(SENTENCIA DE ROTULOS DE PARAMETRO:) show
28 389 moveto
10 f0
(\\ <ROTULO del par\341metro> \\ { <ROTULO de la opci\363n> \\ }) show
28 367 moveto
10 f0
(Los par\341metros definidos, hasta 4, se ir\341n asignando a las variables ABCD en el orden que se encuentren.) show
28 345 moveto
10 f0
( ) show
28 323 moveto
10 f0
( ) show
0 301 moveto
10 f0
(SENTENCIA DE ASIGNACION NUMERICA:) show
28 279 moveto
10 f0
(<variable numerica> = <expresi\363n num\351rica>) show
28 257 moveto
10 f0
( ) show
28 235 moveto
10 f0
( ) show
0 213 moveto
10 f0
(SENTENCIA DE ASIGNACION ALFANUMERICA:) show
28 191 moveto
10 f0
(<variable alfanumerica> = <expresi\363n alfanum\351rica>) show
28 169 moveto
10 f0
( ) show
28 147 moveto
10 f0
( ) show
0 125 moveto
10 f0
(SENTENCIA DE RENDIMIENTO:\(CONCEPTOS DESCOMPUESTOS\)) show
28 103 moveto
10 f0
(<texto de sustituci\363n de CODIGO> : <expresi\363n num\351rica> [ : <exp.num.> ] Se pueden definir uno u) show
28 92 moveto
10 f0
(opcionalmente dos rendimientos, el defecto del rendimiento opcional es 1.) show
pagelevel restore
showpage
%%Page: 24 24
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
28 752 moveto
10 f0
( ) show
28 730 moveto
10 f0
( ) show
0 708 moveto
10 f0
(SENTENCIA DE MEDIOS AUXILIARES:) show
28 686 moveto
10 f0
(%: <expresi\363n num\351rica> \(en tanto por cien\)) show
28 664 moveto
10 f0
(%%: <expresi\363n num\351rica> \(en tanto por uno\)) show
28 642 moveto
10 f0
( ) show
28 620 moveto
10 f0
( ) show
0 598 moveto
10 f0
(SENTENCIA DE PRECIO:\(CONCEPTOS SIMPLES\) :: <expresi\363n num\351rica>) show
28 576 moveto
10 f0
(En caso de figurar conjuntamente un juego de sentencias de rendimiento a modo de descomposici\363n y una) show
28 565 moveto
10 f0
(sentencia de precio, tendr\341 prioridad la sentencia de precio, ignorando las sentencias de rendimiento.) show
28 543 moveto
10 f0
( ) show
28 521 moveto
10 f0
( ) show
0 499 moveto
10 f0
(SENTENCIA DE COMENTARIO:) show
28 477 moveto
10 f0
(\\ COMENTARIO \\ \363 \\ C \\ <texto del comentario> \\) show
28 455 moveto
10 f0
(Si existe texto de comentario, se presentar\341 como ayuda a la selecci\363n de par\341metros junto a las opciones de) show
28 444 moveto
10 f0
(\351stos.) show
28 422 moveto
10 f0
( ) show
28 400 moveto
10 f0
( ) show
0 378 moveto
10 f0
(SENTENCIA DE SUSTITUCION:) show
28 356 moveto
10 f0
(\\ RESUMEN \\ \363 \\ R \\ <texto de sustituci\363n del texto resumido> \\) show
28 334 moveto
10 f0
(\\ TEXTO \\ \363 \\ T \\ <texto de sustituci\363n del texto descriptivo> \\) show
28 312 moveto
10 f0
(\\ PLIEGO \\ \363 \\ P \\ { <texto de sustituci\363n de pliego> \\ }) show
28 290 moveto
10 f0
(\\ CLAVES \\ \363 \\ K \\ { <texto de sustituci\363n de clave> \\ }) show
28 268 moveto
10 f0
(\\ COMERCIAL \\ \363 \\ F \\ { <texto de sustituci\363n de CODIGO>\\ <expresi\363n_num\351rica>\\}) show
28 246 moveto
10 f0
( ) show
28 224 moveto
10 f0
(Se considera que una sentencia continua en la l\355nea siguiente si:) show
56 202 moveto
10 f0
(. Acaba en un operador) show
56 180 moveto
10 f0
(. Acaba sin cerrar comillas '"') show
56 158 moveto
10 f0
(. Comienza con '\\' y no acaba con '\\') show
56 136 moveto
10 f0
( ) show
140 114 moveto
10 f0
(<constantes> PI, n\372meros, "texto" ...) show
140 92 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 25 25
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
140 752 moveto
10 f0
(<funciones> ABS\( \), INT\( \), SQRT\( \) ...) show
140 730 moveto
10 f0
( ) show
140 708 moveto
10 f0
(<variables> [$%] [A-Z] [\(dimensi\363n{,dimensi\363n}\)]) show
140 686 moveto
10 f0
( ) show
28 664 moveto
10 f0
(<expresi\363n num\351rica>:) show
56 642 moveto
10 f0
(Son aquellas que dan como resultado un n\372mero en funci\363n de constantes y variables num\351ricas,) show
56 631 moveto
10 f0
(expresiones l\363gicas, funciones y operadores.) show
56 609 moveto
10 f0
(por ejemplo: %I= %A + 3.17*\(1+%B\) + ABS\(%P+3.15*%Q\)/12000) show
56 587 moveto
10 f0
( ) show
28 565 moveto
10 f0
(<expresi\363n alfanum\351rica>:) show
56 543 moveto
10 f0
(Son aquellas que dan como resultada un texto en funci\363n de constantes y variables alfanum\351ricas,) show
56 532 moveto
10 f0
(operadores y funciones num\351ricas.) show
56 510 moveto
10 f0
(Una expresi\363n alfanum\351rica puede incluir expresiones l\363gicas.) show
56 488 moveto
10 f0
(por ejemplo: $I="parte proporcional"+" de perdidas"*\(%A>a\)) show
56 466 moveto
10 f0
(a\361adir " de perdidas" a $I si el valor actual de %A es mayor que <a> \363 1.) show
56 444 moveto
10 f0
( ) show
28 422 moveto
10 f0
(<expresiones l\363gicas>:) show
56 400 moveto
10 f0
(Son aquellas que dan como resultado VERDADERO o FALSO. En expresiones num\351ricas el verdadero) show
56 389 moveto
10 f0
(se considera como 1 y el falso como 0, en alfanum\351ricas el falso se considera suprimir texto.) show
56 367 moveto
10 f0
(%I = 323*\(%A=a\) + 345*\(%A=b\) + 1523*\($I=$A & $J=$B\)) show
56 345 moveto
10 f0
($I = "blanco"*\(%C=c\) + "negro"*\(%C=d\)) show
56 323 moveto
10 f0
( ) show
28 301 moveto
10 f0
(<texto de sustituci\363n>:) show
56 279 moveto
10 f0
(En los textos de sustituci\363n la INFORMACION es un texto constante \(sin comillas\) con variables) show
56 268 moveto
10 f0
(embebidas en \351l. Se consideran variables los caracteres $ y % inmediatamente seguidos por una letra de la) show
56 257 moveto
10 f0
(A a la Z.) show
56 235 moveto
10 f0
(En los textos de sustituci\363n, las variables alfanum\351ricas se sustituyen por sus contenido de texto) show
56 224 moveto
10 f0
(correspondiente, las num\351ricas se sustituyen por las constantes de la "a" a la "z" correspondientes al valor) show
56 213 moveto
10 f0
(num\351rico de su contenido.) show
56 191 moveto
10 f0
(En la expresi\363n del rendimiento, la primera parte de la sentencia es un texto de sustituci\363n que una vez) show
56 180 moveto
10 f0
(sustituidas las variables ser\341 el CODIGO del concepto al que le corresponde la expresi\363n num\351rica de la) show
56 169 moveto
10 f0
(segunda parte de la expresi\363n como rendimiento. Si el resultado es 0, se ignora la sentencia y no se) show
56 158 moveto
10 f0
(considera ese componente o l\355nea de descomposici\363n.) show
0 136 moveto
10 f0
(CONVENIOS DE NOTACION \(EBNF\)) show
0 114 moveto
10 f0
( ) show
112 92 moveto
10 f0
([a] Indica nada o "a") show
pagelevel restore
showpage
%%Page: 26 26
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
112 752 moveto
10 f0
({a} Indica cero o m\341s ocurrencias de "a") show
112 730 moveto
10 f0
([a-b] Indica cualquier valor desde "a" a "b" inclusivas) show
112 708 moveto
10 f0
([abc] Indica cualquiera de los valores a, b \363 c) show
112 686 moveto
10 f0
(<abc> Indica descripci\363n informal) show
112 664 moveto
10 f0
(abc Indica s\355mbolo terminal) show
112 642 moveto
10 f0
( ) show
112 620 moveto
10 f0
(%[A-Z] Variable num\351rica) show
112 598 moveto
10 f0
($[A-Z] Variable alfanum\351rica) show
112 576 moveto
10 f0
( ) show
112 554 moveto
10 f0
(Variables predefinidas:) show
112 532 moveto
10 f0
([%$][ABCD] Par\341metros del concepto) show
112 510 moveto
10 f0
([%$][OPQR] Par\341metros de la obra) show
112 488 moveto
10 f0
([%$]E Variable especial para reportar errores) show
112 466 moveto
10 f0
([%$][A-Z][\(dim{,dim}\)] Variables definibles) show
112 444 moveto
10 f0
(# Comentarios \(el texto comprendido entre este car\341cter y el siguiente final de l\355nea) show
112 433 moveto
10 f0
(exclusive, no se tiene en cuenta\)) show
112 411 moveto
10 f0
(, Separador de datos) show
112 389 moveto
10 f0
(: DEFINICION de rendimiento) show
112 367 moveto
10 f0
(:: DEFINICION de precio) show
112 345 moveto
10 f0
(%: DEFINICION de medios auxiliares en tanto por cien) show
112 323 moveto
10 f0
(%%: DEFINICION de medios auxiliares en tanto por uno) show
112 301 moveto
10 f0
( ) show
112 279 moveto
10 f0
( ) show
0 257 moveto
10 f0
(OPERADORES NUMERICOS \(De menor a mayor precedencia\)) show
0 235 moveto
10 f0
( ) show
112 213 moveto
10 f0
(+ Suma) show
112 191 moveto
10 f0
(- Resta) show
112 169 moveto
10 f0
(* Multiplicaci\363n) show
112 147 moveto
10 f0
(/ Divisi\363n) show
112 125 moveto
10 f0
(^ Operador elevado a) show
112 103 moveto
10 f0
( ) show
112 81 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 27 27
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 748 moveto
10 f0
(OPERADORES LOGICOS \(De menor a mayor precedencia\)) show
0 726 moveto
10 f0
( ) show
112 704 moveto
10 f0
(@ Operador l\363gico O) show
112 682 moveto
10 f0
(& Operador l\363gico Y) show
112 660 moveto
10 f0
(< Menor) show
112 638 moveto
10 f0
(> Mayor) show
112 616 moveto
10 f0
(<= Menor o igual) show
112 594 moveto
10 f0
(>= Mayor o igual) show
112 572 moveto
10 f0
(= Igual) show
112 550 moveto
10 f0
(<> Diferente) show
112 528 moveto
10 f0
(! Operador l\363gico NO) show
112 506 moveto
10 f0
( ) show
0 484 moveto
10 f0
(FUNCIONES -- VALOR RETORNADO:) show
0 462 moveto
10 f0
( ) show
0 440 moveto
10 f0
(ABS\(n\) Valor absoluto de "n") show
0 418 moveto
10 f0
(INT\(n\) Parte entera de "n") show
0 396 moveto
10 f0
(ROUND\(n,d\) Redondeo de "n" a "d" decimales) show
0 374 moveto
10 f0
(SIN\(n\) Seno \(grados sexagesimales\)) show
0 352 moveto
10 f0
(COS\(n\) Coseno \(grados sexagesimales\)) show
0 330 moveto
10 f0
(TAN\(n\) Tangente \(grados sexagesimales\)) show
0 308 moveto
10 f0
(ASIN\(n\) Arco seno \(gs\)) show
0 286 moveto
10 f0
(ACOS\(n\) Arco coseno \(gs\)) show
0 264 moveto
10 f0
(ATAN\(n\) Arco tangente \(gs\)) show
0 242 moveto
10 f0
(ATAN2\(x,y\) Arco tangente con dos par\341metros "x" e "y") show
0 220 moveto
10 f0
(SQRT\(n\) Ra\355z cuadrada de "n") show
0 198 moveto
10 f0
(ATOF\(a\) ConVERSION de alfanum\351rico "a" a num\351rico) show
0 176 moveto
10 f0
(FTOA\(n\) ConVERSION de num\351rico "n" a alfanum\351rico) show
0 154 moveto
10 f0
( ) show
0 132 moveto
10 f0
(Cada instrucci\363n ir\341 en distinta l\355nea, a menos que la instrucci\363n acabe en un operador en cuyo caso se considera que) show
0 121 moveto
10 f0
(sigue en la siguiente l\355nea.) show
0 99 moveto
10 f0
(Si una l\355nea acaba sin haber cerrado las comillas '"' o delimitador '\\', se considerar\341 que sigue en la l\355nea siguiente. Los) show
0 88 moveto
10 f0
(caracteres fin de l\355nea \(ASCII-13 + ASCII-10\) contenidos en las descripciones param\351tricas se mantendr\341n al) show
0 77 moveto
10 f0
(reformatear.) show
pagelevel restore
showpage
%%Page: 28 28
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 744 moveto
10 f0
( ) show
0 722 moveto
10 f0
( ) show
0 700 moveto
10 f0
(CONTROL DE ERRORES DE SELECCION.) show
0 678 moveto
10 f0
( ) show
0 656 moveto
10 f0
(Es frecuente encontrar un gran n\372mero de combinaciones de par\341metros posibles pero tener pocas de ellas resueltas.) show
0 645 moveto
10 f0
(Para evitar que el operador del sistema pruebe distintas combinaciones de par\341metros consiguiendo en todas ellas un) show
0 634 moveto
10 f0
(mensaje de error, el sistema debe ser capaz de guiarle en la selecci\363n de combinaciones correctas.) show
0 612 moveto
10 f0
(Cada vez que el operador define un par\341metro, el sistema evaluar\341 todas las sentencias posibles y en las sentencias del) show
0 601 moveto
10 f0
(tipo: %E= ...., funci\363n de par\341metros) show
0 579 moveto
10 f0
( ) show
0 557 moveto
10 f0
(Si todos los par\341metros intervinientes en la expresi\363n son conocidos, se evaluar\341 \351sta y si el resultado fuera de ERROR) show
0 546 moveto
10 f0
(se presentar\341 la previa DEFINICION de $E con el mensaje del error.) show
0 524 moveto
10 f0
( ) show
0 502 moveto
10 f0
(Si todos los par\341metros menos uno son conocidos, se ir\341 dando valores al par\341metro desconocido y evaluando la) show
0 491 moveto
10 f0
(expresi\363n hasta recorrer todos los valores v\341lidos del par\341metro. De alguna forma, el sistema "marcar\341" los valores que) show
0 480 moveto
10 f0
(producen ERROR del par\341metro estudiado en la pantalla de selecci\363n, para ayudar al operador a seleccionar las) show
0 469 moveto
10 f0
(combinaciones correctas.) show
0 447 moveto
10 f0
( ) show
0 425 moveto
10 f0
(Cada vez que se defina o redefina un par\341metro el sistema actualizar\341 todos los valores marcados en pantalla, por) show
0 414 moveto
10 f0
(ejemplo pondr\341 en "medio brillo" los ROTULOs de las opciones cuya selecci\363n no ser\355a compatible con los par\341metros) show
0 403 moveto
10 f0
(seleccionados previamente.) show
0 381 moveto
10 f0
( ) show
0 359 moveto
10 f0
(Este sistema de control de errores de selecci\363n es sencillo de implementar en cualquier soporte, pero obliga a los) show
0 348 moveto
10 f0
(redactores de los descompuestos param\351tricos a definir expl\355citamente las combinaciones de par\341metros incorrectas, ya) show
0 337 moveto
10 f0
(que con este m\351todo no se podr\355an encontrar combinaciones no permitidas cuando en la descomposici\363n param\351trica se) show
0 326 moveto
10 f0
(llama a otros descompuestos o precios param\351tricos.) show
0 304 moveto
10 f0
(PROCEDIMIENTO DE LECTURA DE DESCRIPCIONES PARAMETRICAS.) show
0 282 moveto
10 f0
( ) show
0 260 moveto
10 f0
( ) show
0 238 moveto
10 f0
(Recorrer la descripci\363n param\351trica ejecutando los siguientes pasos:) show
0 216 moveto
10 f0
( ) show
28 194 moveto
10 f0
(1. Eliminar desde el car\341cter '#' inclusive hasta el siguiente cambio de l\355nea exclusive.) show
28 172 moveto
10 f0
(2. Cambiar tabuladores \(9\) por caracteres ' ' \(32\)) show
28 150 moveto
10 f0
(3. Eliminar caracteres ' ' \(32\) delante y detr\341s de los caracteres '\\') show
28 128 moveto
10 f0
(4. Unir l\355neas, eliminando el fin de l\355nea, en l\355neas que comienzan con '\\' y no acaban con '\\', que terminan con) show
28 117 moveto
10 f0
(un operador y en la separaci\363n de datos de una variable matricial.) show
28 95 moveto
10 f0
(5. Eliminar todos los caracteres ' ' \(32\) en zonas no entrecomilladas \("..."\) o delimitadas \(\\...\\\)) show
pagelevel restore
showpage
%%Page: 29 29
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
28 752 moveto
10 f0
(6. Eliminar l\355neas vac\355as.) show
28 730 moveto
10 f0
(7. Leer y evaluar secuencialmente las sentencias de la forma:) show
28 708 moveto
10 f0
( ) show
28 686 moveto
10 f0
(Si la sentencia comienza con '\\' leer el ROTULO hasta el siguiente '\\', si el ROTULO es:) show
56 664 moveto
10 f0
(COMENTARIO \363 C- Palabra o car\341cter reservado que identifica el siguiente ROTULO entre '\\' como) show
56 653 moveto
10 f0
(comentario a la selecci\363n de par\341metros.) show
56 631 moveto
10 f0
(RESUMEN \363 R- Palabra o car\341cter reservado que identifica el siguiente ROTULO entre '\\' como el texto) show
56 620 moveto
10 f0
(de sustituci\363n del resumen del concepto.) show
56 598 moveto
10 f0
(TEXTO \363 T- Palabra o car\341cter reservado que identifica el siguiente ROTULO entre '\\' como el texto de) show
56 587 moveto
10 f0
(sustituci\363n del texto descriptivo del concepto.) show
56 565 moveto
10 f0
(PLIEGO \363 P- Palabra o car\341cter reservado que identifica los siguientes ROTULOs entre '\\' como los) show
56 554 moveto
10 f0
(textos de sustituci\363n de las distintas secciones del pliego.) show
56 532 moveto
10 f0
(CLAVES \363 K- Palabra o car\341cter reservado que identifica los siguientes ROTULOs entre '\\' como los) show
56 521 moveto
10 f0
(textos de sustituci\363n de los t\351rminos claves asociados al concepto.) show
56 499 moveto
10 f0
(COMERCIAL \363 F - Palabra o car\341cter reservado que identifica los siguientes ROTULOs entre '\\' como) show
56 488 moveto
10 f0
(los textos de sustituci\363n y tarifas de la INFORMACION comercial del concepto.) show
56 466 moveto
10 f0
(Cualquier otro ROTULO identificar\341 el nombre del siguiente par\341metro y los siguientes ROTULOs entre) show
56 455 moveto
10 f0
('\\' como los ROTULOs de las opciones de dicho par\341metro.) show
56 433 moveto
10 f0
(Si la sentencia comienza con '::' el resto de la misma debe ser una expresi\363n num\351rica indicadora del) show
56 422 moveto
10 f0
(Precio, s\363lo en familias de conceptos simples \(sin descomposici\363n\) y s\363lo puede haber una sentencia de) show
56 411 moveto
10 f0
(este tipo.) show
56 389 moveto
10 f0
( ) show
28 367 moveto
10 f0
(Si la sentencia comienza con '%:' el resto de la misma debe ser una expresi\363n num\351rica indicadora del) show
28 356 moveto
10 f0
(Porcentaje de Medios Auxiliares, s\363lo puede haber una sentencia de este tipo.) show
28 334 moveto
10 f0
( ) show
28 312 moveto
10 f0
(En otro caso si la sentencia contiene el car\341cter ':' la parte anterior a \351l es un texto de sustituci\363n del CODIGO) show
28 301 moveto
10 f0
(de una l\355nea de descomposici\363n y la posterior una expresi\363n num\351rica, o dos separadas por ':', indicadoras de el) show
28 290 moveto
10 f0
(o los rendimientos de dicha l\355nea de descomposici\363n.) show
28 268 moveto
10 f0
( ) show
28 246 moveto
10 f0
(En aquellos casos donde pueda aparecer un car\341cter ?%? seguido de un car\341cter alfab\351tico que se considere) show
28 235 moveto
10 f0
(como tal y no como una variable de sustituci\363n, deber\341 emplearse ?%%?, para evitar la ambig\374edad que se) show
28 224 moveto
10 f0
(puede producir entre una variable num\351rica que deba ser sustituida, una sentencia de medio auxiliar o un texto.) show
28 202 moveto
10 f0
( ) show
28 180 moveto
10 f0
(El resto de sentencias deber\341n ser de asignaci\363n de la forma variable/s = expresi\363n/es) show
28 158 moveto
10 f0
( ) show
0 136 moveto
10 f0
(RESUMEN DE TIPOS DE SENTENCIAS) show
0 114 moveto
10 f0
( ) show
0 92 moveto
10 f0
(Despu\351s de realizado el filtro descrito arriba, cada l\355nea, tira de caracteres acabada en \(ASCII-13\)\(ASCII-10\), ser\341 una) show
0 81 moveto
10 f0
(sentencia de alguno de los siguientes tipos:) show
pagelevel restore
showpage
%%Page: 30 30
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 748 moveto
10 f0
( ) show
0 726 moveto
10 f0
({ \\ ROTULO_par\341metro \\ { opci\363n_par\341metro \\ } \(13\)\(10\) }) show
0 704 moveto
10 f0
({ variable = expresi\363n \(13\)\(10\) }) show
0 682 moveto
10 f0
({ CODIGO : rendimiento [ : rendimiento ] \(13\)\(10\) }) show
0 660 moveto
10 f0
([ %: \363 %%: medios_auxiliares \(13\)\(10\) ] % \(tanto por cien\) %% \(tanto por uno\)) show
0 638 moveto
10 f0
([ :: expresi\363n_precio \(13\)\(10\) ]) show
0 616 moveto
10 f0
([ \\ COMENTARIO \\ \363 \\ C \\ texto_comentario \\ \(13\)\(10\) ]) show
0 594 moveto
10 f0
([ \\ RESUMEN \\ \363 \\ R \\ texto_resumen \\ \(13\)\(10\) ]) show
0 572 moveto
10 f0
([ \\ TEXTO \\ \363 \\ T \\ texto_descriptivo \\ \(13\)\(10\) ]) show
0 550 moveto
10 f0
([ \\ PLIEGO \\ \363 \\ P \\ { texto_faceta_pliego \\ }\(13\)\(10\) ]) show
0 528 moveto
10 f0
([ \\ CLAVES \\ \363 \\ K \\ { t\351rmino_clave \\ }\(13\)\(10\) ]) show
0 506 moveto
10 f0
([ \\ COMERCIAL \\ \363 \\ F \\ { CODIGO_producto_comercial \\ tarifa \\ } \(13\)\(10\) ]) show
0 479.9 moveto
14 f1
(Anexo 3. DESCRIPCI\323N PARAM\311TRICA: API ESTANDAR para) show
0 463.9 moveto
14 f1
(descripciones param\351tricas compiladas en DLL.) show
0 434.2 moveto
12 f0
( ) show
0 407.1 moveto
12 f1
( ) show
0 379.5 moveto
12 f1
(INTRODUCCION) show
0 354.2 moveto
10 f0
( ) show
0 332.2 moveto
10 f0
(Debido a la necesidad expuesta por los desarrolladores de bases de datos param\351tricas de ampliar las posibilidades del) show
0 321.2 moveto
10 f0
(lenguaje de descripci\363n param\351trica, poder compilar \351ste por eficiencia y protecci\363n de datos y posibilitar la protecci\363n) show
0 310.2 moveto
10 f0
(contra copia de bases de datos param\351tricas, se establece la siguiente ESPECIFICACION.) show
0 288.2 moveto
10 f0
( ) show
0 266.2 moveto
10 f0
(En este documento se definen los componentes necesarios para el desarrollo de descripciones param\351tricas en cualquier) show
0 255.2 moveto
10 f0
(lenguaje de aplicaciones para Windows \(C, C++, Pascal, Fortran, etc.\) y sin ninguna limitaci\363n. Se incluye la) show
0 244.2 moveto
10 f0
(DEFINICION de un API ESTANDAR en C, un ejemplo de base de datos en formato DLL de 32 bits desarrollado en) show
0 233.2 moveto
10 f0
(C++ y un ejemplo de aplicaci\363n con la implementaci\363n del interfaz con el API en C, definidos ambos en Microsoft) show
0 222.2 moveto
10 f0
(Visual C++. Se podr\355a implementar el interfaz con el API para otros compiladores y lenguajes para acceder a las) show
0 211.2 moveto
10 f0
(mismas DLL.) show
0 189.2 moveto
10 f0
( ) show
0 167.2 moveto
10 f0
(Es decir; es posible construir una base de datos que cumpla este API utilizando para ello cualquier lenguaje de) show
0 156.2 moveto
10 f0
(programaci\363n que permita desarrollar librer\355as de enlace din\341mico Windows \(DLL\). Asimismo, es posible construir un) show
0 145.2 moveto
10 f0
(programa que lea cualquier base de datos de estas caracter\355sticas utilizando lenguajes de aplicaciones para Windows.) show
0 123.2 moveto
10 f0
( ) show
0 101.2 moveto
10 f0
( ) show
0 77.4 moveto
12 f0
(ARCHIVOS QUE DEBE CONTENER UNA BASE DE DATOS) show
pagelevel restore
showpage
%%Page: 31 31
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 741.6 moveto
10 f0
( ) show
0 719.6 moveto
10 f0
(Una base de datos que se desee distribuir con las definiciones param\351tricas compiladas en DLL, debe contener los) show
0 708.6 moveto
10 f0
(siguientes archivos:) show
0 686.6 moveto
10 f0
( ) show
84 664.6 moveto
10 f0
(base.dll En este archivo, \372nico para cada base de datos y de nombre cualquiera pero extensi\363n) show
84 653.6 moveto
10 f0
(?..DLL?, se encuentran las funciones del API que la base de datos ofrece a las aplicaciones para) show
84 642.6 moveto
10 f0
(que \351stas obtengan la INFORMACION que contiene la base.) show
84 620.6 moveto
10 f0
(base.bc3 Archivo o archivos ASCII de la base de datos en formato FIEBDC-3/98. Los registros '~P') show
84 609.6 moveto
10 f0
(de los conceptos cuya descripci\363n param\351trica se acceda a trav\351s del archivo ?base.dll?, tendr\341n el) show
84 598.6 moveto
10 f0
(campo ?DESCRIPCI\323N_PARAM\311TRICA? vac\355o. Ejemplo:) show
84 576.6 moveto
10 f0
(~P|ABCD12$| |) show
84 554.6 moveto
10 f0
(El registro '~P' correspondiente al param\351trico global, tendr\341 el campo) show
84 543.6 moveto
10 f0
(?DESCRIPCI\323N_PARAM\311TRICA? vac\355o, y tendr\341 un tercer campo con el nombre del archivo) show
84 532.6 moveto
10 f0
(DLL en el que se encuentren las funciones del API de la base. Ejemplo:) show
84 510.6 moveto
10 f0
(~P| | | BASE.DLL |) show
84 488.2 moveto
10 f1
( ) show
0 465.8 moveto
10 f0
(La DEFINICION param\351trica de los conceptos implementados de esta forma podr\341 estar en el mismo archivo que las) show
0 454.8 moveto
10 f0
(funciones del API \(el archivo ?base.dll?\) o situado en otro u otros archivos cualesquiera, conforme desee el) show
0 443.8 moveto
10 f0
(desarrollador de la base de datos. Las aplicaciones s\363lo acceder\341n a las funciones del API incluidas en el archivo) show
0 432.8 moveto
10 f0
(?base.dll?, y \351stas ser\341n las encargadas de acceder a la INFORMACION en la forma que el desarrollador de la base) show
0 421.8 moveto
10 f0
(implemente.) show
0 399.8 moveto
10 f0
( ) show
0 376 moveto
12 f0
(DEFINICION DEL API: FIEBDC.H) show
0 351.2 moveto
10 f0
( ) show
0 329.2 moveto
10 f0
(\332nico archivo que define el ESTANDAR. En este archivo se define el API en C, que las descripciones param\351tricas en) show
0 318.2 moveto
10 f0
(DLL ofrecen a las aplicaciones. Este interfaz permite definiciones param\351tricas de ilimitado n\372mero de par\341metros e) show
0 307.2 moveto
10 f0
(ilimitadas opciones por par\341metro. Se soportan dos modelos de codificaciones:) show
0 285.2 moveto
10 f0
( ) show
28 263.2 moveto
10 f0
(1. Un modelo de codificaci\363n independiente de par\341metros, en el que el CODIGO de un concepto param\351trico es) show
28 252.2 moveto
10 f0
(completamente libre y el n\372mero de caracteres del CODIGO es independiente del n\372mero de par\341metros.) show
28 230.2 moveto
10 f0
(2. Un modelo dependiente de los mismos. Es el modelo que defin\355a FIEBDC-3/95 y en el que el CODIGO de un) show
28 219.2 moveto
10 f0
(concepto param\351trico debe tener un s\355mbolo ?$? en su s\351ptima posici\363n y en el que se asigna de la 'a' a la 'z' las) show
28 208.2 moveto
10 f0
(opciones 0 a 25 de cada par\341metro, ampli\341ndose en esta VERSION con los rangos 'A' a 'Z' y '0' a '9' para que) show
28 197.2 moveto
10 f0
(el n\372mero de opciones por par\341metro en este modelo de codificaci\363n pase a 62 \(de 0 a 61\).) show
28 175.2 moveto
10 f0
( ) show
0 153.2 moveto
10 f0
(Para que los programas puedan determinar si una base de datos responde a uno u otro modelo, se ha definido la funci\363n) show
0 142.2 moveto
10 f0
(BdcCodificacion\(\), que se especifica m\341s adelante y que indica si el sistema de codificaci\363n usado en la base de datos) show
0 131.2 moveto
10 f0
(es dependiente o independiente.) show
0 109.2 moveto
10 f0
( ) show
0 87.2 moveto
10 f0
(Si se adopta el primer modelo, no es posible averiguar ?a priori?, a partir de un CODIGO ?ABCDEFGHIJ? de) show
0 76.2 moveto
10 f0
(concepto, si \351ste es un derivado param\351trico ni de que concepto param\351trico procede o con qu\351 valores de sus) show
pagelevel restore
showpage
%%Page: 32 32
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752 moveto
10 f0
(par\341metros. Por ello, es establece el siguiente criterio de b\372squeda:) show
0 730 moveto
10 f0
( ) show
28 708 moveto
10 f0
(1. Si el concepto existe con este CODIGO en la base, se escoger\341 dicho concepto.) show
28 686 moveto
10 f0
(2. En caso de no existir, se intentar\341 localizarlo en la base de datos como perteneciente a un concepto) show
28 675 moveto
10 f0
(param\351trico ?al estilo? FIEBDC-3/95. En el ejemplo, se intentar\341 buscar el concepto param\351trico ?ABCDEF$? y) show
28 664 moveto
10 f0
(pasarle los par\341metros ?GHIJ? \(que implica pasarle a sus cuatro par\341metros valores ?31?, ?32?, ?33? y ?34?) show
28 653 moveto
10 f0
(respectivamente\).) show
28 631 moveto
10 f0
(3. En caso de no existir, se intentar\341 localizarlo en la DLL. Si \351sta posee un modelo de codificaci\363n dependiente,) show
28 620 moveto
10 f0
(se utilizar\341 el mismo criterio que en el punto anterior: en el ejemplo, buscar el concepto param\351trico) show
28 609 moveto
10 f0
(?ABCDEF$? y pasarle los par\341metros ?GHIJ?. Si la base posee un modelo independiente, se utilizar\341 la funci\363n) show
28 598 moveto
10 f0
(?BdcDecodifica\(\)?, tal como se especifica m\341s adelante.) show
28 576 moveto
10 f0
(4. Si no se cumplen ninguna de las condiciones anteriores, se supone que el concepto no existe en la base.) show
28 554 moveto
10 f0
( ) show
0 532 moveto
10 f0
(El archivo ?fiebdc.h? tiene el siguiente contenido:) show
0 510 moveto
10 f0
( ) show
0 489.8 moveto
8 f0
(/* FORMATO DE INTERCAMBIO ESTANDAR DE PARAM\311TRICOS EN DLL */) show
0 472.2 moveto
8 f0
(/* FIEBDC-3/98 */) show
0 454.6 moveto
8 f0
( ) show
0 437 moveto
8 f0
(#include <windows.h>) show
0 419.4 moveto
8 f0
( ) show
0 401.8 moveto
8 f0
(#ifndef FIEBDC_H) show
0 384.2 moveto
8 f0
(#define FIEBDC_H) show
0 366.6 moveto
8 f0
( ) show
0 349 moveto
8 f0
(#ifdef BASE /* definido si se desea construir la DLL */) show
0 331.4 moveto
8 f0
( ) show
0 313.8 moveto
8 f0
(/****************************************************************************/) show
0 296.2 moveto
8 f0
(/* PARTE DEL ARCHIVO NECESARIA PARA LOS DESARROLLADORES DE BASE DE DATOS */) show
0 278.6 moveto
8 f0
(/****************************************************************************/) show
0 261 moveto
8 f0
( ) show
0 243.4 moveto
8 f0
(/****************************************************************************/) show
0 225.8 moveto
8 f0
(/* MACROS DEPENDIENTES DEL COMPILADOR */) show
0 208.2 moveto
8 f0
(#if defined \(__BORLANDC__\) /* Borland C++ */) show
0 190.6 moveto
8 f0
(#define EXPORTA FAR _export) show
0 173 moveto
8 f0
(#elif defined \(_MSC_VER\) /* Microsoft C */) show
0 155.4 moveto
8 f0
(#define EXPORTA) show
0 137.8 moveto
8 f0
(#else /* Otros */) show
0 120.2 moveto
8 f0
(#define EXPORTA) show
0 102.6 moveto
8 f0
(#endif) show
0 85 moveto
8 f0
( ) show
pagelevel restore
showpage
%%Page: 33 33
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(#ifdef __cplusplus) show
0 736.2 moveto
8 f0
(extern "C" {) show
0 718.6 moveto
8 f0
(#endif) show
0 701 moveto
8 f0
( ) show
0 683.4 moveto
8 f0
(/* 0 FUNCIONES GENERALES ************************************************/) show
0 665.8 moveto
8 f0
(LONG EXPORTA BdcCodificacion \(VOID\);) show
0 648.2 moveto
8 f0
( ) show
0 630.6 moveto
8 f0
(/* 1 FUNCIONES REFERENTES AL PARAM\311TRICO GLOBAL *************************/) show
0 613 moveto
8 f0
(/* 1.1 Accesibles en cualquier momento */) show
0 595.4 moveto
8 f0
(/* 1.1.1 Obtenci\363n de sus par\341metros */) show
0 577.8 moveto
8 f0
(LONG EXPORTA BdcGloParNumero \(VOID\);) show
0 560.2 moveto
8 f0
(LONG EXPORTA BdcGloOpcNumero \(LONG par\);) show
0 542.6 moveto
8 f0
(LPCSTR EXPORTA BdcGloParRotulo \(LONG par\);) show
0 525 moveto
8 f0
(LPCSTR EXPORTA BdcGloOpcRotulo \(LONG par, LONG opc\);) show
0 507.4 moveto
8 f0
(/* 2.1.3 Mensajes / CODIGOs de error */) show
0 489.8 moveto
8 f0
(BOOL EXPORTA BdcGloError \(LPCSTR *err\);) show
0 472.2 moveto
8 f0
(/* 1.1.2 Asignaci\363n de opciones a los par\341metros */) show
0 454.6 moveto
8 f0
(BOOL EXPORTA BdcGloCalcula \(LPLONG opcl\);) show
0 437 moveto
8 f0
( ) show
0 419.4 moveto
8 f0
(/* 2 FUNCIONES REFERENTES AL RESTO DE PARAM\311TRICOS ***********************/) show
0 401.8 moveto
8 f0
(/* 2.1 Accesibles en cualquier momento */) show
0 384.2 moveto
8 f0
(/* 2.1.1 Lectura de un concepto param\351trico */) show
0 366.6 moveto
8 f0
(HANDLE EXPORTA BdcLee \(LPCSTR cod\);) show
0 349 moveto
8 f0
(/* 2.1.2 Lectura de un concepto param\351trico a partir del CODIGO del derivado */) show
0 331.4 moveto
8 f0
(HANDLE EXPORTA BdcDecodifica \(LPCSTR cod, LPLONG opcl\);) show
0 313.8 moveto
8 f0
(/* 2.1.3 Mensajes / CODIGOs de error */) show
0 296.2 moveto
8 f0
(BOOL EXPORTA BdcError \(HANDLE h, LPCSTR *err\);) show
0 278.6 moveto
8 f0
( ) show
0 261 moveto
8 f0
(/* 2.2 Accesibles despu\351s de BdcLee */) show
0 243.4 moveto
8 f0
(/* 2.2.1 Obtenci\363n de sus par\341metros */) show
0 225.8 moveto
8 f0
(LONG EXPORTA BdcParNumero \(HANDLE h\);) show
0 208.2 moveto
8 f0
(LONG EXPORTA BdcOpcNumero \(HANDLE h, LONG par\);) show
0 190.6 moveto
8 f0
(LPCSTR EXPORTA BdcParRotulo \(HANDLE h, LONG par\);) show
0 173 moveto
8 f0
(LPCSTR EXPORTA BdcOpcRotulo \(HANDLE h, LONG par, LONG opc\);) show
0 155.4 moveto
8 f0
(/* 2.2.2 Obtenci\363n de un comentario */) show
0 137.8 moveto
8 f0
(LPCSTR EXPORTA BdcComentario \(HANDLE h\);) show
0 120.2 moveto
8 f0
(/* 2.2.3 Asignaci\363n de opciones de los par\341metros y c\341lculo/chequeo del derivado */) show
0 102.6 moveto
8 f0
(BOOL EXPORTA BdcValida \(HANDLE h, LPLONG opcl\);) show
0 85 moveto
8 f0
(BOOL EXPORTA BdcCalcula \(HANDLE h, LPLONG opcl\);) show
pagelevel restore
showpage
%%Page: 34 34
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(/* 2.2.4 Liberaci\363n de memoria */) show
0 736.2 moveto
8 f0
(BOOL EXPORTA BdcCierra \(HANDLE h\);) show
0 718.6 moveto
8 f0
( ) show
0 701 moveto
8 f0
(/* 2.3 Accesibles despu\351s de BdcCalcula */) show
0 683.4 moveto
8 f0
(/* 2.3.1 Obtenci\363n del derivado param\351trico */) show
0 665.8 moveto
8 f0
(LONG EXPORTA BdcDesNumero \(HANDLE h\);) show
0 648.2 moveto
8 f0
(LPCSTR EXPORTA BdcDesCodigo \(HANDLE h, LONG des\);) show
0 630.6 moveto
8 f0
(BOOL EXPORTA BdcRendimiento \(HANDLE h, LONG des, double FAR *ren\);) show
0 613 moveto
8 f0
(BOOL EXPORTA BdcPrecio \(HANDLE h, double FAR *pre\);) show
0 595.4 moveto
8 f0
(LPCSTR EXPORTA BdcCodigo \(HANDLE h\);) show
0 577.8 moveto
8 f0
(LPCSTR EXPORTA BdcResumen \(HANDLE h\);) show
0 560.2 moveto
8 f0
(LPCSTR EXPORTA BdcTexto \(HANDLE h\);) show
0 542.6 moveto
8 f0
(LPCSTR EXPORTA BdcPliego \(HANDLE h\);) show
0 525 moveto
8 f0
(LPCSTR EXPORTA BdcClaves \(HANDLE h\);) show
0 507.4 moveto
8 f0
( ) show
0 489.8 moveto
8 f0
(#ifdef __cplusplus) show
0 472.2 moveto
8 f0
(}) show
0 454.6 moveto
8 f0
(#endif) show
0 437 moveto
8 f0
( ) show
0 419.4 moveto
8 f0
(#else /* BASE no definido */) show
0 401.8 moveto
8 f0
(/****************************************************************************/) show
0 384.2 moveto
8 f0
(/* PARTE DEL ARCHIVO NECESARIA PARA LOS DESARROLLADORES DE PROGRAMAS */) show
0 366.6 moveto
8 f0
(/****************************************************************************/) show
0 349 moveto
8 f0
( ) show
0 331.4 moveto
8 f0
(/****************************************************************************/) show
0 313.8 moveto
8 f0
(/* MACROS DEPENDIENTES DEL COMPILADOR */) show
0 296.2 moveto
8 f0
(#if defined \(__BORLANDC__\) /* Borland C++ */) show
0 278.6 moveto
8 f0
(#define IMPORTA FAR _import) show
0 261 moveto
8 f0
(#elif defined \(_MSC_VER\) /* Microsoft C */) show
0 243.4 moveto
8 f0
(#define IMPORTA ) show
0 225.8 moveto
8 f0
(#else /* Otros */) show
0 208.2 moveto
8 f0
(#define IMPORTA) show
0 190.6 moveto
8 f0
(#endif) show
0 173 moveto
8 f0
( ) show
0 155.4 moveto
8 f0
(/* FUNCIONES GENERALES *****************************************************/) show
0 137.8 moveto
8 f0
(typedef LONG \(IMPORTA * BDCCODIFICACION\) \(VOID\);) show
0 120.2 moveto
8 f0
(/* FUNCIONES REFERENTES AL PARAM\311TRICO GLOBAL *****************************/) show
0 102.6 moveto
8 f0
(typedef LONG \(IMPORTA * BDCGLOPARNUMERO\) \(VOID\);) show
0 85 moveto
8 f0
(typedef LONG \(IMPORTA * BDCGLOOPCNUMERO\) \(LONG par\);) show
pagelevel restore
showpage
%%Page: 35 35
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(typedef LPCSTR \(IMPORTA * BDCGLOPARROTULO\) \(LONG par\);) show
0 736.2 moveto
8 f0
(typedef LPCSTR \(IMPORTA * BDCGLOOPCROTULO\) \(LONG par, LONG opc\);) show
0 718.6 moveto
8 f0
(typedef BOOL \(IMPORTA * BDCGLOERROR\) \(LPCSTR *err\);) show
0 701 moveto
8 f0
(typedef BOOL \(IMPORTA * BDCGLOCALCULA\) \(LPLONG opcl\);) show
0 683.4 moveto
8 f0
( ) show
0 665.8 moveto
8 f0
(/* FUNCIONES REFERENTES AL RESTO DE PARAM\311TRICOS *************************/) show
0 648.2 moveto
8 f0
(typedef HANDLE \(IMPORTA * BDCLEE\) \(LPCSTR cod\);) show
0 630.6 moveto
8 f0
(typedef HANDLE \(IMPORTA * BDCDECODIFICA\) \(LPCSTR cod, LPLONG opcl\);) show
0 613 moveto
8 f0
(typedef BOOL \(IMPORTA * BDCERROR\) \(HANDLE h, LPCSTR *err\);) show
0 595.4 moveto
8 f0
(typedef LONG \(IMPORTA * BDCPARNUMERO\) \(HANDLE h\);) show
0 577.8 moveto
8 f0
(typedef LONG \(IMPORTA * BDCOPCNUMERO\) \(HANDLE h, LONG par\);) show
0 560.2 moveto
8 f0
(typedef LPCSTR \(IMPORTA * BDCPARROTULO\) \(HANDLE h, LONG par\);) show
0 542.6 moveto
8 f0
(typedef LPCSTR \(IMPORTA * BDCOPCROTULO\) \(HANDLE h, LONG par, LONG opc\);) show
0 525 moveto
8 f0
(typedef LPCSTR \(IMPORTA * BDCCOMENTARIO\) \(HANDLE h\);) show
0 507.4 moveto
8 f0
(typedef BOOL \(IMPORTA * BDCVALIDA\) \(HANDLE h, LPLONG opcl\);) show
0 489.8 moveto
8 f0
(typedef BOOL \(IMPORTA * BDCCALCULA\) \(HANDLE h, LPLONG opcl\);) show
0 472.2 moveto
8 f0
(typedef BOOL \(IMPORTA * BDCCIERRA\) \(HANDLE h\);) show
0 454.6 moveto
8 f0
(typedef LONG \(IMPORTA * BDCDESNUMERO\) \(HANDLE h\);) show
0 437 moveto
8 f0
(typedef LPCSTR \(IMPORTA * BDCDESCODIGO\) \(HANDLE h, LONG des\);) show
0 419.4 moveto
8 f0
(typedef BOOL \(IMPORTA * BDCRENDIMIENTO\) \(HANDLE h, LONG des, double FAR *ren\);) show
0 401.8 moveto
8 f0
(typedef BOOL \(IMPORTA * BDCPRECIO\) \(HANDLE h, double FAR *pre\);) show
0 384.2 moveto
8 f0
(typedef LPCSTR \(IMPORTA * BDCCODIGO\) \(HANDLE h\);) show
0 366.6 moveto
8 f0
(typedef LPCSTR \(IMPORTA * BDCRESUMEN\) \(HANDLE h\);) show
0 349 moveto
8 f0
(typedef LPCSTR \(IMPORTA * BDCTEXTO\) \(HANDLE h\);) show
0 331.4 moveto
8 f0
(typedef LPCSTR \(IMPORTA * BDCPLIEGO\) \(HANDLE h\);) show
0 313.8 moveto
8 f0
(typedef LPCSTR \(IMPORTA * BDCCLAVES\) \(HANDLE h\);) show
0 296.2 moveto
8 f0
( ) show
0 278.6 moveto
8 f0
(#endif /* de #ifdef BASE */) show
0 261 moveto
8 f0
( ) show
0 243.4 moveto
8 f0
(/****************************************************************************/) show
0 225.8 moveto
8 f0
(/* PARTE COM\332N DEL ARCHIVO: CODIGOS DE LOS MENSAJES DE ERROR */) show
0 208.2 moveto
8 f0
(/* SE ALMACENAN COMO BITS DE UN LONG, DE MANERA QUE EXISTAN HASTA 32 */) show
0 190.6 moveto
8 f0
(/****************************************************************************/) show
0 173 moveto
8 f0
( ) show
0 155.4 moveto
8 f0
(#define BDCERR_CORRECTO 0x0000 /* No hay error */) show
0 137.8 moveto
8 f0
(#define BDCERR_BASE_DATOS 0x0001 /* Existe un mensaje de error definido por */) show
0 120.2 moveto
8 f0
(/* el redactor de la base */) show
0 102.6 moveto
8 f0
(#define BDCERR_PARAMETRO 0x0002 /* Se pas\363 a BdcCalcula o BdcGloCalcula */) show
0 85 moveto
8 f0
(/* un par\341metro inexistente */) show
pagelevel restore
showpage
%%Page: 36 36
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(#define BDCERR_OPCION 0x0004 /* Se pas\363 a BdcCalcula o BdcGloCalcula una */) show
0 736.2 moveto
8 f0
(/* opci\363n inexistente */) show
0 718.6 moveto
8 f0
(#define BDCERR_MAX_OPCIONES 0x0008 /* Se definieron m\341s de 62 opciones */) show
0 701 moveto
8 f0
(#define BDCERR_NO_LEIDO 0x0010 /* Se intent\363 calcular un concepto sin leer */) show
0 683.4 moveto
8 f0
(#define BDCERR_NO_CALCULADO 0x0020 /* Se intent\363 acceder a datos de un derivado */) show
0 665.8 moveto
8 f0
(/* no calculado */) show
0 648.2 moveto
8 f0
(#define BDCERR_DESCOMPOSICION 0x0040 /* Se intent\363 acceder a un elemento de */) show
0 630.6 moveto
8 f0
(/* la descomposici\363n inexistente */) show
0 613 moveto
8 f0
(#define BDCERR_SIN_CODIGO 0x0080 /* No existe CODIGO definido */) show
0 595.4 moveto
8 f0
(#define BDCERR_SIN_MEMORIA 0x0100 /* Memoria insuficiente */) show
0 577.8 moveto
8 f0
(#define BDCERR_CONCEPTO_NULO 0x0200 /* Se pas\363 un HANDLE nulo */) show
0 560.2 moveto
8 f0
( ) show
0 542.6 moveto
8 f0
(#endif /* FIEBDC_H */) show
0 523.2 moveto
10 f0
( ) show
0 499.4 moveto
12 f0
(ESPECIFICACION DE LAS FUNCIONES DEL API) show
0 474.6 moveto
10 f0
( ) show
0 452.6 moveto
10 f0
( ) show
0 428.8 moveto
12 f0
(1. FUNCIONES GENERALES) show
0 404 moveto
10 f0
( ) show
0 382 moveto
10 f0
(LONG EXPORTA BdcCodificacion \( VOID\);) show
0 360 moveto
10 f0
( ) show
0 338 moveto
10 f0
(Prop\363sito) show
0 316 moveto
10 f0
(Indica si la base de datos utiliza un modelo de codificaci\363n dependiente o independiente del n\372mero y valor de los) show
0 305 moveto
10 f0
(par\341metros.) show
0 283 moveto
10 f0
( ) show
0 261 moveto
10 f0
(Valor devuelto) show
0 239 moveto
10 f0
(Devolver\341 ?0? si la codificaci\363n sigue un modelo dependiente \(al ?estilo? FIEBDC-3/95\), y ?1? si sigue un modelo) show
0 228 moveto
10 f0
(independiente.) show
0 206 moveto
10 f0
( ) show
0 184 moveto
10 f0
( ) show
0 160.2 moveto
12 f0
(2. FUNCIONES REFERENTES AL PARAM\311TRICO GLOBAL) show
0 135.4 moveto
10 f0
( ) show
0 111.6 moveto
12 f0
(2.1. Accesibles en cualquier momento) show
0 86.8 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 37 37
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752 moveto
10 f0
(2.1.1. Obtenci\363n de sus par\341metros) show
0 730 moveto
10 f0
( ) show
0 708 moveto
10 f0
(LONG EXPORTA BdcGloParNumero \( VOID\);) show
0 686 moveto
10 f0
( ) show
0 664 moveto
10 f0
(Prop\363sito) show
0 642 moveto
10 f0
(Obtener el n\372mero de par\341metros de concepto param\351trico global.) show
0 620 moveto
10 f0
( ) show
0 598 moveto
10 f0
(Valor devuelto) show
0 576 moveto
10 f0
(Devuelve el n\372mero de par\341metros. En caso de error, la funci\363n devuelve -1. Para obtener m\341s INFORMACION sobre) show
0 565 moveto
10 f0
(el error producido, llame a la funci\363n BdcGloError\(\).) show
0 543 moveto
10 f0
( ) show
0 521 moveto
10 f0
( ) show
0 499 moveto
10 f0
(LONG EXPORTA BdcGloOpcNumero \( LONG par // n\372mero de par\341metro del concepto\);) show
0 477 moveto
10 f0
( ) show
0 455 moveto
10 f0
(Prop\363sito) show
0 433 moveto
10 f0
(Obtiene el n\372mero de opciones de que consta el par\341metro ?par?.) show
0 411 moveto
10 f0
( ) show
0 389 moveto
10 f0
(Par\341metros) show
56 367 moveto
10 f0
(par: N\372mero del par\341metro. Debe ser un valor entre ?0? y ?n-1?, siendo ?n? el n\372mero de par\341metros del) show
56 356 moveto
10 f0
(concepto param\351trico global.) show
56 334 moveto
10 f0
( ) show
0 312 moveto
10 f0
(Valor devuelto) show
0 290 moveto
10 f0
(Devuelve el n\372mero de opciones del par\341metro ?par?. En caso de producirse un error, devuelve -1. Para obtener m\341s) show
0 279 moveto
10 f0
(INFORMACION sobre el error producido, llame a la funci\363n BdcGloError\(\).) show
0 257 moveto
10 f0
(LPCSTR EXPORTA BdcGloParRotulo \( LONG par // n\372mero de par\341metro del concepto\);) show
0 235 moveto
10 f0
( ) show
0 213 moveto
10 f0
(Prop\363sito) show
0 191 moveto
10 f0
(Obtiene el r\363tulo que identifica el par\341metro ?par? del concepto.) show
0 169 moveto
10 f0
( ) show
0 147 moveto
10 f0
(Par\341metros) show
56 125 moveto
10 f0
(par: N\372mero del par\341metro. Debe ser un valor entre ?0? y ?n-1?, siendo ?n? el n\372mero de par\341metros del) show
56 114 moveto
10 f0
(concepto param\351trico global.) show
56 92 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 38 38
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752 moveto
10 f0
(Valor devuelto) show
0 730 moveto
10 f0
(Devuelve el r\363tulo que identifica el par\341metro ?par? del concepto, como puntero constante ?far? a una cadena de) show
0 719 moveto
10 f0
(caracteres. La propia funci\363n es responsable de asignar memoria al puntero. En caso de error, la funci\363n devuelve) show
0 708 moveto
10 f0
(NULL. Para obtener m\341s INFORMACION sobre el error producido, llame a la funci\363n BdcGloError\(\).) show
0 686 moveto
10 f0
( ) show
0 664 moveto
10 f0
( ) show
0 642 moveto
10 f0
(LPCSTR EXPORTA BdcGloOpcRotulo \( LONG par, // n\372mero de par\341metro del concepto LONG opc // n\372mero de la) show
0 631 moveto
10 f0
(opci\363n del par\341metro\);) show
0 609 moveto
10 f0
( ) show
0 587 moveto
10 f0
(Prop\363sito) show
0 565 moveto
10 f0
(Obtiene el r\363tulo que identifica la opci\363n ?opc? del par\341metro ?par? del concepto.) show
0 543 moveto
10 f0
( ) show
0 521 moveto
10 f0
(Par\341metros) show
56 499 moveto
10 f0
(par: N\372mero del par\341metro. Debe ser un valor entre ?0? y ?n-1?, siendo ?n? el n\372mero de par\341metros del) show
56 488 moveto
10 f0
(concepto param\351trico global.) show
56 466 moveto
10 f0
(opc: N\372mero del par\341metro. Debe ser un valor entre ?0? y ?n-1?, siendo ?n? el n\372mero de opciones que) show
56 455 moveto
10 f0
(posee el par\341metro ?par? del concepto param\351trico global.) show
56 433 moveto
10 f0
( ) show
0 411 moveto
10 f0
(Valor devuelto) show
0 389 moveto
10 f0
(Devuelve el r\363tulo que identifica la opci\363n ?opc? del par\341metro ?par? del concepto, como puntero constante ?far? a una) show
0 378 moveto
10 f0
(cadena de caracteres. La propia funci\363n es responsable de asignar memoria al puntero. En caso de error, la funci\363n) show
0 367 moveto
10 f0
(devuelve NULL. Para obtener m\341s INFORMACION sobre el error producido, llame a la funci\363n BdcGloError\(\).) show
0 345 moveto
10 f0
( ) show
0 323 moveto
10 f0
( ) show
0 301 moveto
10 f0
(2.1.2. Mensajes / CODIGOs de error) show
0 279 moveto
10 f0
( ) show
0 257 moveto
10 f0
(BOOL EXPORTA BdcGloError \( LPCSTR *err // mensaje de error devuelto\);) show
0 235 moveto
10 f0
( ) show
0 213 moveto
10 f0
(Prop\363sito) show
0 191 moveto
10 f0
(Obtiene el tipo de error producido. Una vez le\355do, se inicializa el CODIGO de error.) show
0 169 moveto
10 f0
( ) show
0 147 moveto
10 f0
(Par\341metros) show
56 125 moveto
10 f0
(err: Puntero a un puntero constante ?far? a una cadena de caracteres. En \351l se almacena el mensaje de) show
56 114 moveto
10 f0
(error referente al error producido. La funci\363n es responsable de asignar memoria al puntero. Si no existe) show
56 103 moveto
10 f0
(un mensaje definido para el error existente, ?*err? apuntar\341 a la cadena vac\355a "".) show
56 81 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 39 39
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 748 moveto
10 f0
(Valor devuelto) show
0 726 moveto
10 f0
(Devuelve el CODIGO de error producido. Vea al final el apartado ?CODIGOs de los mensajes de error? para m\341s) show
0 715 moveto
10 f0
(INFORMACION.) show
0 693 moveto
10 f0
( ) show
0 671 moveto
10 f0
( ) show
0 649 moveto
10 f0
(2.1.3. Asignaci\363n de opciones a los par\341metros) show
0 627 moveto
10 f0
( ) show
0 605 moveto
10 f0
(BOOL EXPORTA BdcGloCalcula \( LPLONG opcl, // lista de opciones de los par\341metros\);) show
0 583 moveto
10 f0
( ) show
0 561 moveto
10 f0
(Prop\363sito) show
0 539 moveto
10 f0
(Asigna los valores de los par\341metros del concepto param\351trico global..) show
0 517 moveto
10 f0
( ) show
0 495 moveto
10 f0
(Par\341metros) show
56 473 moveto
10 f0
(opcl: Puntero a un array de LONGs con las opciones que se desea fijar a cada par\341metro. Las opciones se) show
56 462 moveto
10 f0
(numeran empezando por cero.) show
56 440 moveto
10 f0
( ) show
0 418 moveto
10 f0
(Valor devuelto) show
0 396 moveto
10 f0
(Devuelve ?0? si se ejecuta correctamente. En caso de error, devuelve ?-1?. Para obtener m\341s INFORMACION sobre el) show
0 385 moveto
10 f0
(error producido, llame a la funci\363n BdcGloError\(\).) show
0 363 moveto
10 f0
( ) show
0 341 moveto
10 f0
( ) show
0 317.2 moveto
12 f0
(3. FUNCIONES REFERENTES AL RESTO DE PARAM\311TRICOS) show
0 290.6 moveto
12 f0
( ) show
0 264 moveto
12 f0
(3.1. Accesibles en cualquier momento) show
0 239.2 moveto
10 f0
( ) show
0 217.2 moveto
10 f0
(3.1.1. Lectura de un concepto param\351trico) show
0 195.2 moveto
10 f0
( ) show
0 173.2 moveto
10 f0
(HANDLE EXPORTA BdcLee \( LPCSTR cod // CODIGO del concepto\);) show
0 151.2 moveto
10 f0
( ) show
0 129.2 moveto
10 f0
(Prop\363sito) show
0 107.2 moveto
10 f0
(Lee el concepto param\351trico identificado por ?cod?.) show
0 85.2 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 40 40
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752 moveto
10 f0
(Par\341metros) show
56 730 moveto
10 f0
(cod: Puntero constante ?far? a una cadena de caracteres con el CODIGO del concepto param\351trico a leer.) show
56 719 moveto
10 f0
(Si se utiliza un modelo de codificaci\363n dependiente, se asume que dicho CODIGO tenga 7 caracteres y) show
56 708 moveto
10 f0
(que el s\351ptimo sea ?$?. Dentro del CODIGO, los caracteres pueden ser cualesquiera salvo el 0x00 \(que) show
56 697 moveto
10 f0
(indica el final del CODIGO\).) show
56 675 moveto
10 f0
( ) show
0 653 moveto
10 f0
(Valor devuelto) show
0 631 moveto
10 f0
(Si la funci\363n encuentra el param\351trico, retorna un HANDLE distinto de cero. En caso de error, o si no existe el) show
0 620 moveto
10 f0
(param\351trico, la funci\363n devuelve cero.) show
0 598 moveto
10 f0
( ) show
0 576 moveto
10 f0
( ) show
0 554 moveto
10 f0
(3.1.2. Lectura de un concepto param\351trico a partir del CODIGO completo del derivado) show
0 532 moveto
10 f0
( ) show
0 510 moveto
10 f0
(HANDLE EXPORTA BdcDecodifica \( LPCSTR cod, // CODIGO completo del derivado param\351trico LPLONG opcl //) show
0 499 moveto
10 f0
(puntero al espacio de memoria a\); // rellenar con las opciones) show
0 477 moveto
10 f0
( ) show
0 455 moveto
10 f0
(Prop\363sito) show
0 433 moveto
10 f0
(Lee el concepto param\351trico al que pertenece el concepto de CODIGO ?cod?. El HANDLE y las opciones ?opcl?) show
0 422 moveto
10 f0
(devueltas se pueden utilizar directamente en una llamada a BdcCalcula\(\).) show
0 400 moveto
10 f0
( ) show
0 378 moveto
10 f0
(Par\341metros) show
56 356 moveto
10 f0
(cod: Puntero constante ?far? a una cadena de caracteres con el CODIGO del concepto del que se desea) show
56 345 moveto
10 f0
(obtener el concepto param\351trico a la que pertenece. Dentro del CODIGO, los caracteres pueden ser) show
56 334 moveto
10 f0
(cualesquiera salvo el 0x00 \(que indica el final del CODIGO\).) show
56 312 moveto
10 f0
(opcl: Puntero a un array de LONGs en el que la funci\363n devolver\341 las opciones a las que corresponda el) show
56 301 moveto
10 f0
(derivado param\351trico. El array debe estar previamente dimensionado con al menos el n\372mero de) show
56 290 moveto
10 f0
(par\341metros del concepto. Las opciones se numeran empezando por cero.) show
56 268 moveto
10 f0
( ) show
0 246 moveto
10 f0
(Valor devuelto) show
0 224 moveto
10 f0
(Si la funci\363n encuentra el param\351trico, retorna un HANDLE distinto de cero. En caso de error, o si no existe niguna) show
0 213 moveto
10 f0
(concepto param\351trico del que el concepto ?cod? es derivado, la funci\363n devuelve cero.) show
0 191 moveto
10 f0
( ) show
0 169 moveto
10 f0
( ) show
0 147 moveto
10 f0
(3.1.3. Mensajes / CODIGOs de error) show
0 125 moveto
10 f0
( ) show
0 103 moveto
10 f0
(BOOL EXPORTA BdcError \( HANDLE h, // identificador del concepto LPCSTR *err // mensaje de error devuelto\);) show
0 81 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 41 41
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 748 moveto
10 f0
(Prop\363sito) show
0 726 moveto
10 f0
(Obtiene tipo de error producido.) show
0 704 moveto
10 f0
( ) show
0 682 moveto
10 f0
(Par\341metros) show
56 660 moveto
10 f0
(h: Identificador \(HANDLE\) del concepto, que debe ser obtenido en una llamada anterior a la funci\363n) show
56 649 moveto
10 f0
(BdcLee\(\).) show
56 627 moveto
10 f0
(err: Puntero a un puntero constante ?far? a una cadena de caracteres. En \351l se almacena el mensaje de) show
56 616 moveto
10 f0
(error referente al error producido. La funci\363n es responsable de asignar memoria al puntero. Si no existe) show
56 605 moveto
10 f0
(un mensaje definido para el error existente, ?*err? apuntar\341 a la cadena vac\355a "".) show
56 583 moveto
10 f0
( ) show
0 561 moveto
10 f0
(Valor devuelto) show
0 539 moveto
10 f0
(Devuelve el CODIGO de error producido. Vea al final el apartado ?CODIGOs de los mensajes de error? para m\341s) show
0 528 moveto
10 f0
(INFORMACION.) show
0 506 moveto
10 f0
( ) show
0 484 moveto
10 f0
( ) show
0 460.2 moveto
12 f0
(3.2. Accesibles despu\351s de BdcLee) show
0 435.4 moveto
10 f0
( ) show
0 413.4 moveto
10 f0
(3.2.1. Obtenci\363n de sus par\341metros) show
0 391.4 moveto
10 f0
( ) show
0 369.4 moveto
10 f0
(LONG EXPORTA BdcParNumero \( HANDLE h // identificador del concepto\);) show
0 347.4 moveto
10 f0
( ) show
0 325.4 moveto
10 f0
(Prop\363sito) show
0 303.4 moveto
10 f0
(Obtiene el n\372mero de par\341metros de concepto param\351trico.) show
0 281.4 moveto
10 f0
( ) show
0 259.4 moveto
10 f0
(Par\341metros) show
56 237.4 moveto
10 f0
(h: Identificador \(HANDLE\) del concepto param\351trico, que debe ser obtenido en una llamada anterior a la) show
56 226.4 moveto
10 f0
(funci\363n BdcLee\(\).) show
56 204.4 moveto
10 f0
( ) show
0 182.4 moveto
10 f0
(Valor devuelto) show
0 160.4 moveto
10 f0
(Devuelve el n\372mero de par\341metros. En caso de error, la funci\363n devuelve -1. Para obtener m\341s INFORMACION sobre) show
0 149.4 moveto
10 f0
(el error producido, llame a la funci\363n BdcError\(\).) show
0 127.4 moveto
10 f0
( ) show
0 105.4 moveto
10 f0
( ) show
0 83.4 moveto
10 f0
(LONG EXPORTA BdcOpcNumero \( HANDLE h, // identificador del concepto LONG par // n\372mero de par\341metro del) show
pagelevel restore
showpage
%%Page: 42 42
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752 moveto
10 f0
(concepto\);) show
0 730 moveto
10 f0
( ) show
0 708 moveto
10 f0
(Prop\363sito) show
0 686 moveto
10 f0
(Obtiene el n\372mero de opciones de que consta el par\341metro ?par?.) show
0 664 moveto
10 f0
( ) show
0 642 moveto
10 f0
(Par\341metros) show
56 620 moveto
10 f0
(h: Identificador \(HANDLE\) del concepto param\351trico, que debe ser obtenido en una llamada anterior a la) show
56 609 moveto
10 f0
(funci\363n BdcLee\(\).) show
56 587 moveto
10 f0
(par: N\372mero del par\341metro. Debe ser un valor entre ?0? y ?n-1?, siendo ?n? el n\372mero de par\341metros del) show
56 576 moveto
10 f0
(concepto.) show
56 554 moveto
10 f0
( ) show
0 532 moveto
10 f0
(Valor devuelto) show
0 510 moveto
10 f0
(Devuelve el n\372mero de opciones del par\341metro ?par?. En caso de producirse un error, la funci\363n devuelve -1. Para) show
0 499 moveto
10 f0
(obtener m\341s INFORMACION sobre el error producido, llame a la funci\363n BdcError\(\).) show
0 477 moveto
10 f0
( ) show
0 455 moveto
10 f0
( ) show
0 433 moveto
10 f0
(LPCSTR EXPORTA BdcParRotulo \( HANDLE h, // identificador del concepto LONG par // n\372mero de par\341metro del) show
0 422 moveto
10 f0
(concepto\);) show
0 400 moveto
10 f0
( ) show
0 378 moveto
10 f0
(Prop\363sito) show
0 356 moveto
10 f0
(Obtiene el r\363tulo que identifica el par\341metro ?par? del concepto.) show
0 334 moveto
10 f0
( ) show
0 312 moveto
10 f0
(Par\341metros) show
56 290 moveto
10 f0
(h: Identificador \(HANDLE\) del concepto param\351trico, que debe ser obtenido en una llamada anterior a la) show
56 279 moveto
10 f0
(funci\363n BdcLee\(\).) show
56 257 moveto
10 f0
(par: N\372mero del par\341metro. Debe ser un valor entre ?0? y ?n-1?, siendo ?n? el n\372mero de par\341metros del) show
56 246 moveto
10 f0
(concepto.) show
56 224 moveto
10 f0
( ) show
0 202 moveto
10 f0
(Valor devuelto) show
0 180 moveto
10 f0
(Devuelve el r\363tulo que identifica el par\341metro ?par? del concepto, como puntero constante ?far? a una cadena de) show
0 169 moveto
10 f0
(caracteres. La propia funci\363n es responsable de asignar memoria al puntero. En caso de error, la funci\363n devuelve) show
0 158 moveto
10 f0
(NULL. Para obtener m\341s INFORMACION sobre el error producido, llame a la funci\363n BdcError\(\).) show
0 136 moveto
10 f0
( ) show
0 114 moveto
10 f0
( ) show
0 92 moveto
10 f0
(LPCSTR EXPORTA BdcOpcRotulo \( HANDLE h, // identificador del concepto LONG par, // n\372mero de par\341metro del) show
0 81 moveto
10 f0
(concepto LONG opc // n\372mero de la opci\363n del par\341metro\);) show
pagelevel restore
showpage
%%Page: 43 43
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 748 moveto
10 f0
( ) show
0 726 moveto
10 f0
(Prop\363sito) show
0 704 moveto
10 f0
(Obtiene r\363tulo que identifica la opci\363n ?opc? del par\341metro ?par? del concepto.) show
0 682 moveto
10 f0
( ) show
0 660 moveto
10 f0
(Par\341metros) show
56 638 moveto
10 f0
(h: Identificador \(HANDLE\) del concepto param\351trico, que debe ser obtenido en una llamada anterior a la) show
56 627 moveto
10 f0
(funci\363n BdcLee\(\).) show
56 605 moveto
10 f0
(par: N\372mero del par\341metro. Debe ser un valor entre ?0? y ?n-1?, siendo ?n? el n\372mero de par\341metros del) show
56 594 moveto
10 f0
(concepto.) show
56 572 moveto
10 f0
(opc: N\372mero del par\341metro. Debe ser un valor entre ?0? y ?n-1?, siendo ?n? el n\372mero de opciones que) show
56 561 moveto
10 f0
(posee el par\341metro ?par? del concepto.) show
56 539 moveto
10 f0
( ) show
0 517 moveto
10 f0
(Valor devuelto) show
0 495 moveto
10 f0
(Devuelve el r\363tulo que identifica la opci\363n ?opc? del par\341metro ?par? del concepto, como puntero constante ?far? a una) show
0 484 moveto
10 f0
(cadena de caracteres. La propia funci\363n es responsable de asignar memoria al puntero. En caso de error, la funci\363n) show
0 473 moveto
10 f0
(devuelve NULL. Para obtener m\341s INFORMACION sobre el error producido, llame a la funci\363n BdcError\(\).) show
0 451 moveto
10 f0
( ) show
0 429 moveto
10 f0
( ) show
0 407 moveto
10 f0
(3.2.2. Obtenci\363n de un comentario) show
0 385 moveto
10 f0
( ) show
0 363 moveto
10 f0
(LPCSTR EXPORTA BdcComentario \( HANDLE h, // identificador del concepto\);) show
0 341 moveto
10 f0
( ) show
0 319 moveto
10 f0
(Prop\363sito) show
0 297 moveto
10 f0
(Obtiene un texto de comentario del concepto param\351trico.) show
0 275 moveto
10 f0
( ) show
0 253 moveto
10 f0
(Par\341metros) show
56 231 moveto
10 f0
(h: Identificador \(HANDLE\) del concepto param\351trico, que debe ser obtenido en una llamada anterior a la) show
56 220 moveto
10 f0
(funci\363n BdcLee\(\).) show
56 198 moveto
10 f0
( ) show
0 176 moveto
10 f0
(Valor devuelto) show
0 154 moveto
10 f0
(Devuelve el comentario del concepto, como puntero constante ?far? a una cadena de caracteres. La propia funci\363n es) show
0 143 moveto
10 f0
(responsable de asignar memoria al puntero. En caso de error, la funci\363n devuelve NULL. Para obtener m\341s) show
0 132 moveto
10 f0
(INFORMACION sobre el error producido, llame a la funci\363n BdcError\(\).) show
0 110 moveto
10 f0
( ) show
0 88 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 44 44
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752 moveto
10 f0
(3.2.3. Asignaci\363n de opciones de los par\341metros y validaci\363n o c\341lculo del derivado) show
0 730 moveto
10 f0
( ) show
0 708 moveto
10 f0
(BOOL EXPORTA BdcValida \( HANDLE h, // identificador del concepto LPLONG opcl, // lista de opciones de los) show
0 697 moveto
10 f0
(par\341metros\);) show
0 675 moveto
10 f0
( ) show
0 653 moveto
10 f0
(Prop\363sito) show
0 631 moveto
10 f0
(Averigua si una determinada combinaci\363n param\351trica es correcta o no.) show
0 609 moveto
10 f0
( ) show
0 587 moveto
10 f0
(Par\341metros) show
56 565 moveto
10 f0
(h: Identificador \(HANDLE\) del concepto param\351trico, que debe ser obtenido en una llamada anterior a la) show
56 554 moveto
10 f0
(funci\363n BdcLee\(\).) show
56 532 moveto
10 f0
(opcl: Puntero a un array de LONGs con las opciones que se desea fijar a cada par\341metro. Las opciones se) show
56 521 moveto
10 f0
(numeran empezando por cero.) show
56 499 moveto
10 f0
( ) show
0 477 moveto
10 f0
(Valor devuelto) show
0 455 moveto
10 f0
(Devuelve ?0? si la combinaci\363n es correcta. En caso contrario, devuelve ?-1?. Para obtener m\341s INFORMACION sobre) show
0 444 moveto
10 f0
(el error producido, llame a la funci\363n BdcError\(\).) show
0 422 moveto
10 f0
( ) show
0 400 moveto
10 f0
( ) show
0 378 moveto
10 f0
(BOOL EXPORTA BdcCalcula \( HANDLE h, // identificador del concepto LPLONG opcl, // lista de opciones de los) show
0 367 moveto
10 f0
(par\341metros\);) show
0 345 moveto
10 f0
( ) show
0 323 moveto
10 f0
(Prop\363sito) show
0 301 moveto
10 f0
(Calcula los datos correspondientes a un derivado param\351trico.) show
0 279 moveto
10 f0
( ) show
0 257 moveto
10 f0
(Par\341metros) show
56 235 moveto
10 f0
(h: Identificador \(HANDLE\) del concepto param\351trico, que debe ser obtenido en una llamada anterior a la) show
56 224 moveto
10 f0
(funci\363n BdcLee\(\).) show
56 202 moveto
10 f0
(opcl: Puntero a un array de LONGs con las opciones que se desea fijar a cada par\341metro. Las opciones se) show
56 191 moveto
10 f0
(numeran empezando por cero.) show
56 169 moveto
10 f0
( ) show
0 147 moveto
10 f0
(Valor devuelto) show
0 125 moveto
10 f0
(Devuelve ?0? si se ejecuta correctamente. En caso de error, o de que la combinaci\363n no sea correcta, devuelve ?-1?.) show
0 114 moveto
10 f0
(Para obtener m\341s INFORMACION sobre el error producido, llame a la funci\363n BdcError\(\).) show
0 92 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 45 45
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752 moveto
10 f0
( ) show
0 730 moveto
10 f0
(3.2.4. Liberaci\363n de memoria) show
0 708 moveto
10 f0
( ) show
0 686 moveto
10 f0
(BOOL EXPORTA BdcCierra \( HANDLE h // identificador del concepto\);) show
0 664 moveto
10 f0
( ) show
0 642 moveto
10 f0
(Prop\363sito) show
0 620 moveto
10 f0
(Cierra el concepto param\351trico y libera la memoria asignada.) show
0 598 moveto
10 f0
( ) show
0 576 moveto
10 f0
(Par\341metros) show
56 554 moveto
10 f0
(h: Identificador \(HANDLE\) del concepto param\351trico, que debe ser obtenido en una llamada anterior a la) show
56 543 moveto
10 f0
(funci\363n BdcLee\(\).) show
56 521 moveto
10 f0
( ) show
0 499 moveto
10 f0
(Valor devuelto) show
0 477 moveto
10 f0
(Devuelve ?0? si realiza la operaci\363n correctamente. En caso de error, la funci\363n devuelve ?-1?. Para obtener m\341s) show
0 466 moveto
10 f0
(INFORMACION sobre el error producido, llame a la funci\363n BdcError\(\).) show
0 444 moveto
10 f0
( ) show
0 420.2 moveto
12 f0
( ) show
0 393.6 moveto
12 f0
(3.3. Accesibles despu\351s de BdcCalcula) show
0 368.8 moveto
10 f0
( ) show
0 346.8 moveto
10 f0
(3.3.1. Obtenci\363n del derivado param\351trico) show
0 324.8 moveto
10 f0
( ) show
0 302.8 moveto
10 f0
(LONG EXPORTA BdcDesNumero \( HANDLE h // identificador del concepto\);) show
0 280.8 moveto
10 f0
( ) show
0 258.8 moveto
10 f0
(Prop\363sito) show
0 236.8 moveto
10 f0
(Obtiene el n\372mero de conceptos en los que se descompone el derivado param\351trico. Es posible que un mismo concepto) show
0 225.8 moveto
10 f0
(param\351trico posea derivados simples y compuestos.) show
0 203.8 moveto
10 f0
( ) show
0 181.8 moveto
10 f0
(Par\341metros) show
56 159.8 moveto
10 f0
(h: Identificador \(HANDLE\) del concepto param\351trico, que debe ser obtenido en una llamada anterior a la) show
56 148.8 moveto
10 f0
(funci\363n BdcLee\(\).) show
56 126.8 moveto
10 f0
( ) show
0 104.8 moveto
10 f0
(Valor devuelto) show
0 82.8 moveto
10 f0
(Devuelve el n\372mero de elementos de su descomposici\363n. En caso de error, la funci\363n devuelve ?-1?. Un valor de cero) show
pagelevel restore
showpage
%%Page: 46 46
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752 moveto
10 f0
(indicar\341 que el concepto no tiene descomposici\363n. Para obtener m\341s INFORMACION sobre el error producido, llame a) show
0 741 moveto
10 f0
(la funci\363n BdcError\(\).) show
0 719 moveto
10 f0
( ) show
0 697 moveto
10 f0
( ) show
0 675 moveto
10 f0
(LPCSTR EXPORTA BdcDesCodigo \( HANDLE h, // identificador del concepto LONG des // n\372mero del elemento de) show
0 664 moveto
10 f0
(la descomposici\363n\);) show
0 642 moveto
10 f0
( ) show
0 620 moveto
10 f0
(Prop\363sito) show
0 598 moveto
10 f0
(Obtiene el CODIGO del elemento n\372mero ?des? en el que se descompone el derivado param\351trico.) show
0 576 moveto
10 f0
( ) show
0 554 moveto
10 f0
(Par\341metros) show
56 532 moveto
10 f0
(h: Identificador \(HANDLE\) del concepto param\351trico, que debe ser obtenido en una llamada anterior a la) show
56 521 moveto
10 f0
(funci\363n BdcLee\(\).) show
56 499 moveto
10 f0
(des: N\372mero del elemento de la descomposici\363n del concepto. Los elementos se numeran empezando por) show
56 488 moveto
10 f0
(cero.) show
56 466 moveto
10 f0
( ) show
0 444 moveto
10 f0
(Valor devuelto) show
0 422 moveto
10 f0
(Devuelve el CODIGO del elemento n\372mero ?des? en el que se descompone el derivado param\351trico, como puntero) show
0 411 moveto
10 f0
(constante ?far? a una cadena de caracteres. La propia funci\363n es responsable de asignar memoria al puntero. En caso de) show
0 400 moveto
10 f0
(error, la funci\363n devuelve NULL. Para obtener m\341s INFORMACION sobre el error producido, llame a la funci\363n) show
0 389 moveto
10 f0
(BdcError\(\).) show
0 367 moveto
10 f0
( ) show
0 345 moveto
10 f0
( ) show
0 323 moveto
10 f0
(BOOL EXPORTA BdcRendimiento \( HANDLE h, // identificador del concepto LONG des, // n\372mero del elemento de) show
0 312 moveto
10 f0
(la descomposici\363n double FAR *ren // rendimiento a obtener\);) show
0 290 moveto
10 f0
( ) show
0 268 moveto
10 f0
(Prop\363sito) show
0 246 moveto
10 f0
(Obtiene el rendimiento del elemento n\372mero ?des? en el que se descompone el derivado param\351trico.) show
0 224 moveto
10 f0
( ) show
0 202 moveto
10 f0
(Par\341metros) show
56 180 moveto
10 f0
(h: Identificador \(HANDLE\) del concepto param\351trico, que debe ser obtenido en una llamada anterior a la) show
56 169 moveto
10 f0
(funci\363n BdcLee\(\).) show
56 147 moveto
10 f0
(des: N\372mero del elemento de la descomposici\363n del concepto. Los elementos se numeran empezando por) show
56 136 moveto
10 f0
(cero.) show
56 114 moveto
10 f0
(*ren: Puntero en el que devolver el rendimiento deseado. El rendimiento puede ser positivo, cero o) show
56 103 moveto
10 f0
(negativo.) show
56 81 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 47 47
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 748 moveto
10 f0
(Valor devuelto) show
0 726 moveto
10 f0
(Devuelve ?0? si se ejecuta correctamente. En caso de error, el rendimiento se asigna a cero y la funci\363n devuelve ?-1?.) show
0 715 moveto
10 f0
(Para obtener m\341s INFORMACION sobre el error producido, llame a la funci\363n BdcError\(\).) show
0 693 moveto
10 f0
( ) show
0 671 moveto
10 f0
( ) show
0 649 moveto
10 f0
(BOOL EXPORTA BdcPrecio \( HANDLE h, // identificador del concepto double FAR *pre // precio unitario a) show
0 638 moveto
10 f0
(devolver\);) show
0 616 moveto
10 f0
( ) show
0 594 moveto
10 f0
(Prop\363sito) show
0 572 moveto
10 f0
(Obtiene el precio unitario en el caso de que el derivado param\351trico sea un simple. Es posible que un mismo concepto) show
0 561 moveto
10 f0
(param\351trico tenga como derivados tanto simples como compuestos.) show
0 539 moveto
10 f0
( ) show
0 517 moveto
10 f0
(Par\341metros) show
56 495 moveto
10 f0
(h: Identificador \(HANDLE\) del concepto param\351trico, que debe ser obtenido en una llamada anterior a la) show
56 484 moveto
10 f0
(funci\363n BdcLee\(\).) show
56 462 moveto
10 f0
(*pre: Puntero en el que devolver el precio unitario. Dicho precio puede ser positivo, cero o negativo.) show
56 440 moveto
10 f0
( ) show
0 418 moveto
10 f0
(Valor devuelto) show
0 396 moveto
10 f0
(Devuelve ?0? si se ejecuta correctamente. En caso de error, el precio se asigna a cero y la funci\363n devuelve ?-1?. Para) show
0 385 moveto
10 f0
(obtener m\341s INFORMACION sobre el error producido, llame a la funci\363n BdcError\(\).) show
0 363 moveto
10 f0
( ) show
0 341 moveto
10 f0
( ) show
0 319 moveto
10 f0
(LPCSTR EXPORTA BdcCodigo \( HANDLE h // identificador del concepto\);) show
0 297 moveto
10 f0
( ) show
0 275 moveto
10 f0
(Prop\363sito) show
0 253 moveto
10 f0
(Obtiene el CODIGO del concepto.) show
0 231 moveto
10 f0
( ) show
0 209 moveto
10 f0
(Par\341metros) show
56 187 moveto
10 f0
(h: Identificador \(HANDLE\) del concepto param\351trico, que debe ser obtenido en una llamada anterior a la) show
56 176 moveto
10 f0
(funci\363n BdcLee\(\).) show
56 154 moveto
10 f0
( ) show
0 132 moveto
10 f0
(Valor devuelto) show
0 110 moveto
10 f0
(Devuelve el CODIGO del concepto, como puntero constante ?far? a una cadena de caracteres. Si se ha calculado un) show
0 99 moveto
10 f0
(derivado param\351trico \(se ha llamado a BdcCalcula\), este CODIGO ser\341 el del derivado param\351trico. En caso contario,) show
0 88 moveto
10 f0
(ser\341 el CODIGO del concepto param\351trico. La propia funci\363n es responsable de asignar memoria al puntero. En caso de) show
0 77 moveto
10 f0
(error, la funci\363n devuelve NULL. Para obtener m\341s INFORMACION sobre el error producido, llame a la funci\363n) show
pagelevel restore
showpage
%%Page: 48 48
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752 moveto
10 f0
(BdcError\(\).) show
0 730 moveto
10 f0
( ) show
0 708 moveto
10 f0
( ) show
0 686 moveto
10 f0
(LPCSTR EXPORTA BdcResumen \( HANDLE h // identificador del concepto\);) show
0 664 moveto
10 f0
( ) show
0 642 moveto
10 f0
(Prop\363sito) show
0 620 moveto
10 f0
(Obtiene el texto resumido del derivado param\351trico.) show
0 598 moveto
10 f0
( ) show
0 576 moveto
10 f0
(Par\341metros) show
56 554 moveto
10 f0
(h: Identificador \(HANDLE\) del concepto param\351trico, que debe ser obtenido en una llamada anterior a la) show
56 543 moveto
10 f0
(funci\363n BdcLee\(\).) show
56 521 moveto
10 f0
( ) show
0 499 moveto
10 f0
(Valor devuelto) show
0 477 moveto
10 f0
(Devuelve el texto resumido del derivado param\351trico, como puntero constante ?far? a una cadena de caracteres. La) show
0 466 moveto
10 f0
(propia funci\363n es responsable de asignar memoria al puntero. Si no existe definido un texto resumido, la funci\363n) show
0 455 moveto
10 f0
(devuelve la cadena vac\355a "". En caso de error, la funci\363n devuelve NULL. Para obtener m\341s INFORMACION sobre el) show
0 444 moveto
10 f0
(error producido, llame a la funci\363n BdcError\(\).) show
0 422 moveto
10 f0
( ) show
0 400 moveto
10 f0
( ) show
0 378 moveto
10 f0
(LPCSTR EXPORTA BdcTexto \( HANDLE h // identificador del concepto\);) show
0 356 moveto
10 f0
( ) show
0 334 moveto
10 f0
(Prop\363sito) show
0 312 moveto
10 f0
(Obtiene el texto completo de descripci\363n del derivado param\351trico.) show
0 290 moveto
10 f0
( ) show
0 268 moveto
10 f0
(Par\341metros) show
56 246 moveto
10 f0
(h: Identificador \(HANDLE\) del concepto param\351trico, que debe ser obtenido en una llamada anterior a la) show
56 235 moveto
10 f0
(funci\363n BdcLee\(\).) show
56 213 moveto
10 f0
( ) show
0 191 moveto
10 f0
(Valor devuelto) show
0 169 moveto
10 f0
(Devuelve el texto completo de descripci\363n del derivado param\351trico, como puntero constante ?far? a una cadena de) show
0 158 moveto
10 f0
(caracteres. La propia funci\363n es responsable de asignar memoria al puntero. Si no existe definido un texto completo de) show
0 147 moveto
10 f0
(descripci\363n, la funci\363n devuelve la cadena vac\355a "". En caso de error, la funci\363n devuelve NULL. Para obtener m\341s) show
0 136 moveto
10 f0
(INFORMACION sobre el error producido, llame a la funci\363n BdcError\(\).) show
0 114 moveto
10 f0
( ) show
0 92 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 49 49
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752 moveto
10 f0
(LPCSTR EXPORTA BdcPliego \( HANDLE h // identificador del concepto\);) show
0 730 moveto
10 f0
( ) show
0 708 moveto
10 f0
(Prop\363sito) show
0 686 moveto
10 f0
(Obtiene el texto del pliego del derivado param\351trico.) show
0 664 moveto
10 f0
( ) show
0 642 moveto
10 f0
(Par\341metros) show
56 620 moveto
10 f0
(h: Identificador \(HANDLE\) del concepto param\351trico, que debe ser obtenido en una llamada anterior a la) show
56 609 moveto
10 f0
(funci\363n BdcLee\(\).) show
56 587 moveto
10 f0
( ) show
0 565 moveto
10 f0
(Valor devuelto) show
0 543 moveto
10 f0
(Devuelve el texto del pliego del derivado param\351trico, como puntero constante ?far? a una cadena de caracteres. La) show
0 532 moveto
10 f0
(propia funci\363n es responsable de asignar memoria al puntero. Si no existe definido un texto de pliego, la funci\363n) show
0 521 moveto
10 f0
(devuelve la cadena vac\355a "".. En caso de error, la funci\363n devuelve NULL. Para obtener m\341s INFORMACION sobre el) show
0 510 moveto
10 f0
(error producido, llame a la funci\363n BdcError\(\).) show
0 488 moveto
10 f0
( ) show
0 466 moveto
10 f0
( ) show
0 444 moveto
10 f0
(LPCSTR EXPORTA BdcClaves \( HANDLE h // identificador del concepto\);) show
0 422 moveto
10 f0
( ) show
0 400 moveto
10 f0
(Prop\363sito) show
0 378 moveto
10 f0
(Obtiene las claves de tesauro del derivado param\351trico.) show
0 356 moveto
10 f0
( ) show
0 334 moveto
10 f0
(Par\341metros) show
56 312 moveto
10 f0
(h: Identificador \(HANDLE\) del concepto param\351trico, que debe ser obtenido en una llamada anterior a la) show
56 301 moveto
10 f0
(funci\363n BdcLee\(\).) show
56 279 moveto
10 f0
( ) show
0 257 moveto
10 f0
(Valor devuelto) show
0 235 moveto
10 f0
(Devuelve las claves de tesauro del derivado param\351trico, como puntero constante ?far? a una cadena de caracteres, con) show
0 224 moveto
10 f0
(el mismo formato que el registro ?~A?, es decir, ?{CLAVE_TESAURO\\}?. La propia funci\363n es responsable de asignar) show
0 213 moveto
10 f0
(memoria al puntero. Si no existen definidas claves del tesauro, la funci\363n devuelve la cadena vac\355a "". En caso de error,) show
0 202 moveto
10 f0
(la funci\363n devuelve NULL. Para obtener m\341s INFORMACION sobre el error producido, llame a la funci\363n BdcError\(\).) show
0 180 moveto
10 f0
( ) show
0 158 moveto
10 f0
( ) show
0 134.2 moveto
12 f0
(4. MENSAJES DE ERROR) show
0 109.4 moveto
10 f0
( ) show
0 87.4 moveto
10 f0
(Los CODIGOs de error se almacenan en un LONG \(entero de 32 bits\) de manera que cada error corresponde a un bit.) show
0 76.4 moveto
10 f0
(De esta forma, es posible definir hasta 32 CODIGOs de error que pueden producirse de forma aislada o conjunta. Las) show
pagelevel restore
showpage
%%Page: 50 50
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752 moveto
10 f0
(llamadas a las funciones BdcGloError\(\) y BdcError\(\) eliminan los CODIGOs de error porducidos anteriormente.) show
0 730 moveto
10 f0
( ) show
0 708 moveto
10 f0
(Por ejemplo, para saber si un determinado error se ha producido con el concepto ?Concepto?, se debe utilizar la) show
0 697 moveto
10 f0
(sintaxis:) show
0 675 moveto
10 f0
( ) show
28 653 moveto
10 f0
(const char *Mensaje;) show
28 631 moveto
10 f0
(BOOL cod_err = BdcError \(\(HANDLE\)Concepto, &Mensaje\);) show
28 609 moveto
10 f0
(if \(cod_err & BDCERR_BASE_DATOS\) {) show
28 587 moveto
10 f0
(// Se ha producido el error ?BDCERR_BASE_DATOS?) show
28 565 moveto
10 f0
(...) show
28 543 moveto
10 f0
(}) show
28 521 moveto
10 f0
( ) show
28 499 moveto
10 f0
( ) show
0 475.2 moveto
12 f0
(4.1. CODIGOs de los mensajes de error) show
0 450.4 moveto
10 f0
( ) show
224 428.4 moveto
10 f0
(BDCERR_CORRECTO No hay error.) show
224 406.4 moveto
10 f0
(BDCERR_BASE_DATOS Existe un mensaje de error. Es el) show
224 395.4 moveto
10 f0
(caso en el que la DEFINICION param\351trica se indica una) show
224 384.4 moveto
10 f0
(combinaci\363n inv\341lida y se devuelve un mensaje de error) show
224 373.4 moveto
10 f0
(explicativo.) show
224 351.4 moveto
10 f0
(BDCERR_PARAMETRO Se pas\363 a BdcCalcula o) show
224 340.4 moveto
10 f0
(BdcGloCalcula un par\341metro inexistente.) show
224 318.4 moveto
10 f0
(BDCERR_OPCION Se pas\363 a BdcCalcula o BdcGloCalcula) show
224 307.4 moveto
10 f0
(una opci\363n inexistente.) show
224 285.4 moveto
10 f0
(BDCERR_MAX_OPCIONES Se definieron m\341s de 62) show
224 274.4 moveto
10 f0
(opciones en un determinado par\341metro.) show
224 252.4 moveto
10 f0
(BDCERR_NO_LEIDO Se intent\363 utilizar BdcCalcula\(\) antes) show
224 241.4 moveto
10 f0
(que BdcLee\(\).) show
224 219.4 moveto
10 f0
(BDCERR_NO_CALCULADO Se intent\363 acceder a datos de un) show
224 208.4 moveto
10 f0
(derivado param\351trico antes de utilizar BdcCalcula\(\).) show
224 186.4 moveto
10 f0
(BDCERR_DESCOMPOSICION Se intent\363 acceder a un) show
224 175.4 moveto
10 f0
(elemento de la descomposici\363n inexistente.) show
224 153.4 moveto
10 f0
(BDCERR_SIN_CODIGO No existe CODIGO definido.) show
224 131.4 moveto
10 f0
(BDCERR_SIN_MEMORIA Memoria insuficiente.) show
224 109.4 moveto
10 f0
(BDCERR_CONCEPTO_NULO Se pas\363 un HANDLE nulo.) show
224 87.4 moveto
10 f0
( ) show
pagelevel restore
showpage
%%Page: 51 51
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
224 752 moveto
10 f0
( ) show
0 728.2 moveto
12 f0
(EJEMPLOS) show
0 703.4 moveto
10 f0
( ) show
0 681.4 moveto
10 f0
( ) show
0 657.6 moveto
12 f0
(1. BASE DE DATOS EJEMPLO: BASE.DLL) show
0 632.8 moveto
10 f0
( ) show
0 610.8 moveto
10 f0
( ) show
0 587 moveto
12 f0
(1.1. Archivos para la distribuci\363n de la Base de Datos.) show
0 562.2 moveto
10 f0
( ) show
0 540.2 moveto
10 f0
(Para distribuir la base datos que se construyera con este ejemplo, se deber\355an proporcionar los siguientes archivos:) show
0 517.8 moveto
10 f1
( ) show
112 495.4 moveto
10 f0
(base.dll DLL que contiene tanto las descripciones param\351tricas y como el interfaz) show
112 484.4 moveto
10 f0
(ESTANDAR con aplicaciones \(API\).) show
112 462.4 moveto
10 f0
(base.bc3 Archivo ASCII de la base de datos en formato FIEBDC-3/98. En el ejemplo, la) show
112 451.4 moveto
10 f0
(base incluye en esta DLL el param\351trico global de la base, as\355 como las descripciones) show
112 440.4 moveto
10 f0
(param\351tricas de los conceptos "ABPH.1$", "SBRG.1$" y "EADR.3$", por lo que al menos) show
112 429.4 moveto
10 f0
(debe contar con los siguientes registros:) show
112 407.4 moveto
10 f0
( ) show
112 385.4 moveto
10 f0
(~P| | | BASE.DLL |) show
112 363.4 moveto
10 f0
(~P| ABPH.1$ | |) show
112 341.4 moveto
10 f0
(~P| SBRG.1$ | |) show
112 319.4 moveto
10 f0
(~P| EADR.3$ | |) show
112 297.4 moveto
10 f0
( ) show
112 275.4 moveto
10 f0
( ) show
0 251.6 moveto
12 f0
(1.2. Archivos necesarios para la CONSTRUCCION de la Base de Datos.) show
0 226.8 moveto
10 f0
( ) show
0 204.8 moveto
10 f0
(Este ejemplo est\341 preparado para compilarse con Microsoft Visual C++ VERSION 2.2 o posterior como DLL de 32) show
0 193.8 moveto
10 f0
(bits. Sin apenas modificaciones, ser\355a posible compilarlo como DLL de 16 bits o utilizar el compilador Borland C++.) show
0 171.8 moveto
10 f0
( ) show
0 149.8 moveto
10 f0
(Para contruir la DLL, son necesarios los siguientes archivos:) show
0 127.8 moveto
10 f0
( ) show
112 105.8 moveto
10 f0
(fiebdc.h Archivo que define el formato, con el contenido ya especificado.) show
112 83.8 moveto
10 f0
(base.h DEFINICION de variables y defines \372tiles para la definci\363n de las descripciones) show
pagelevel restore
showpage
%%Page: 52 52
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
112 752 moveto
10 f0
(param\351tricas.) show
112 730 moveto
10 f0
(interfaz.cpp Implementaci\363n de las funciones del API.) show
112 708 moveto
10 f0
(aplicat.cpp Implementaci\363n de las funciones de la descripci\363n param\351trica.) show
112 686 moveto
10 f0
(base.cpp Implementaci\363n de las descripciones param\351tricas de la base de datos en formato) show
112 675 moveto
10 f0
(C++. Es la \372nica parte que escribir\355an los redactores de las bases de datos. En el ejemplo se) show
112 664 moveto
10 f0
(incluyen dos descompuestos y un elemental. En el elemental se ha utilizado la posibilidad) show
112 653 moveto
10 f0
(que posee el formato de que el CODIGO del derivado param\351trico no refleje directamente) show
112 642 moveto
10 f0
(el valor de sus par\341metros. Se ha utilizado una sintaxis similar a la descripci\363n param\351trica) show
112 631 moveto
10 f0
(del formato FIEBDC-3/95, para facilitar as\355 el intercambio entre ambos formatos.) show
112 609 moveto
10 f0
(base.def DEFINICION de las funciones de exportaci\363n del API.) show
112 587 moveto
10 f0
( ) show
0 565 moveto
10 f0
(1.2.1. Archivo ?base.h?) show
0 543 moveto
10 f0
( ) show
0 522.8 moveto
8 f0
(#define BASE) show
0 505.2 moveto
8 f0
(#include "Fiebdc.h") show
0 487.6 moveto
8 f0
( ) show
0 470 moveto
8 f0
(#define PAR par.parametro) show
0 452.4 moveto
8 f0
(#define PRE par.precio) show
0 434.8 moveto
8 f0
(#define DES par.descompuesto) show
0 417.2 moveto
8 f0
(#define RES par.resumen) show
0 399.6 moveto
8 f0
(#define TEX par.texto) show
0 382 moveto
8 f0
(#define PLI par.pliego) show
0 364.4 moveto
8 f0
(#define ROT par.lee_rotulo) show
0 346.8 moveto
8 f0
(#define ERR par.error) show
0 329.2 moveto
8 f0
(#define COD par.codigo) show
0 311.6 moveto
8 f0
(#define SIN par.sinonimo) show
0 294 moveto
8 f0
(#define CLA par.claves) show
0 276.4 moveto
8 f0
(#define COM par.comentario) show
0 258.8 moveto
8 f0
(#define INI\(Op\) par.inicializa\(Op\)) show
0 241.2 moveto
8 f0
( ) show
0 223.6 moveto
8 f0
(#define ROTA ROT\(0\)) show
0 206 moveto
8 f0
(#define ROTB ROT\(1\)) show
0 188.4 moveto
8 f0
(#define ROTC ROT\(2\)) show
0 170.8 moveto
8 f0
(#define ROTD ROT\(3\)) show
0 153.2 moveto
8 f0
( ) show
0 135.6 moveto
8 f0
(// Par\341metros de cada concepto) show
0 118 moveto
8 f0
(#define A par.lee_opcion\(0\)) show
0 100.4 moveto
8 f0
(#define B par.lee_opcion\(1\)) show
0 82.8 moveto
8 f0
(#define C par.lee_opcion\(2\)) show
pagelevel restore
showpage
%%Page: 53 53
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(#define D par.lee_opcion\(3\)) show
0 736.2 moveto
8 f0
(// Par\341metros del parem\351trico Global) show
0 718.6 moveto
8 f0
(#define O Cglobal->lee_opcion\(0\)) show
0 701 moveto
8 f0
(#define P Cglobal->lee_opcion\(1\)) show
0 683.4 moveto
8 f0
(#define Q Cglobal->lee_opcion\(2\)) show
0 665.8 moveto
8 f0
(#define R Cglobal->lee_opcion\(3\)) show
0 648.2 moveto
8 f0
( ) show
0 630.6 moveto
8 f0
(// Valores de status) show
0 613 moveto
8 f0
(#define ST_VACIO 0) show
0 595.4 moveto
8 f0
(#define ST_FAMILIA 1) show
0 577.8 moveto
8 f0
(#define ST_DERIVADO 2) show
0 560.2 moveto
8 f0
(// Valores de operaci\363n) show
0 542.6 moveto
8 f0
(#define BORRA 0) show
0 525 moveto
8 f0
(#define LEE 1) show
0 507.4 moveto
8 f0
(#define CALCULA 2) show
0 489.8 moveto
8 f0
(#define BUSCA 3) show
0 472.2 moveto
8 f0
(#define VALIDA 4) show
0 454.6 moveto
8 f0
( ) show
0 437 moveto
8 f0
(// Valores BOOL de devoluci\363n) show
0 419.4 moveto
8 f0
(#define CORRECTO 0) show
0 401.8 moveto
8 f0
(#define ERRONEO -1) show
0 384.2 moveto
8 f0
( ) show
0 366.6 moveto
8 f0
(#define MAX_PARAM 12 // M\341ximo n\372mero de par\341netros) show
0 349 moveto
8 f0
(#define MAX_TXT 30000 // Longitud m\341xima de los textos) show
0 331.4 moveto
8 f0
( ) show
0 313.8 moveto
8 f0
(class Cfiebdc;) show
0 296.2 moveto
8 f0
(typedef short \(*PRECIO\)\(Cfiebdc &, short operacion\);) show
0 278.6 moveto
8 f0
( ) show
0 261 moveto
8 f0
(extern Cfiebdc *Cglobal; // Param\351trico Global) show
0 243.4 moveto
8 f0
(extern PRECIO precios[]; // Lista de precios \(conceptos\) de la base) show
0 225.8 moveto
8 f0
(extern short Global \(Cfiebdc &, short operacion\); // Funci\363n del param\351trico Global) show
0 208.2 moveto
8 f0
( ) show
0 190.6 moveto
8 f0
(class Cfiebdc {) show
0 173 moveto
8 f0
(private:) show
0 155.4 moveto
8 f0
(long parnum; // N\272 de par\341metros) show
0 137.8 moveto
8 f0
(long opcnum[MAX_PARAM]; // N\272 de opciones por par\341metro) show
0 120.2 moveto
8 f0
(char *parrot[MAX_PARAM]; // Texto de los r\363tulos de cada par\341metro) show
0 102.6 moveto
8 f0
(char **opcrot[MAX_PARAM]; // Texto de las opciones de cada par\341metro) show
0 85 moveto
8 f0
( ) show
pagelevel restore
showpage
%%Page: 54 54
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(long opc[MAX_PARAM]; // Valores de cada par\341metro) show
0 736.2 moveto
8 f0
( ) show
0 718.6 moveto
8 f0
(char *err; // Texto de error) show
0 701 moveto
8 f0
(double pre; // Precio unitario \(precio simple\)) show
0 683.4 moveto
8 f0
(long desnum; // N\272 de descompuestos) show
0 665.8 moveto
8 f0
(char **descod; // CODIGOs de cada concpto de la descomposici\363n) show
0 648.2 moveto
8 f0
(double *desren; // Rendimiento de cada concpto de la descomposici\363n) show
0 630.6 moveto
8 f0
(char *res, *tex, *pli; // Texto resumido, Completo y Pliego) show
0 613 moveto
8 f0
(char *cla, *com; // Claves y comentario) show
0 595.4 moveto
8 f0
(char *codfam; // CODIGO del concepto param\351trico \(familia\)) show
0 577.8 moveto
8 f0
(char *subcod; // Parte variable del CODIGO autom\341tica) show
0 560.2 moveto
8 f0
(char *codder; // CODIGO completo del derivado) show
0 542.6 moveto
8 f0
(BOOL status; // Estado: ST_VACIO, ST_FAMILIA, ST_DERIVADO) show
0 525 moveto
8 f0
(long coderr; // CODIGO de error) show
0 507.4 moveto
8 f0
( ) show
0 489.8 moveto
8 f0
(long sinnum; // N\272 de sin\363nimos) show
0 472.2 moveto
8 f0
(char **codsin[2]; // Textos [0] subCODIGOs autom\341ticos [1] sin\363nimos) show
0 454.6 moveto
8 f0
( ) show
0 437 moveto
8 f0
(public:) show
0 419.4 moveto
8 f0
(PRECIO funcion; // Puntero a la funci\363n del precio) show
0 401.8 moveto
8 f0
(BOOL parametro \(char *Rot, ...\); // Crea un par\341metro) show
0 384.2 moveto
8 f0
(BOOL precio \(double Pre\); // Fija el precio unitario) show
0 366.6 moveto
8 f0
(BOOL descompuesto \(double Ren, char *cod, ...\); // Crea un elemento de) show
0 349 moveto
8 f0
(// la descomposici\363n) show
0 331.4 moveto
8 f0
(BOOL resumen \(char *Res, ...\); // Fija el texto resumido) show
0 313.8 moveto
8 f0
(BOOL texto \(char *Tex, ...\); // Fija el texto de descripci\363n) show
0 296.2 moveto
8 f0
(BOOL pliego \(char *Pli, ...\); // Fija el texto del pliego) show
0 278.6 moveto
8 f0
(BOOL comentario \(char *Com, ...\); // Fija el texto del comentario) show
0 261 moveto
8 f0
(BOOL claves \(char *Cla, ...\); // Fija el texto de las claves) show
0 243.4 moveto
8 f0
(BOOL error \(char *Err, ...\); // Fija el texto de error) show
0 225.8 moveto
8 f0
(BOOL codigo \(char *Cod, ...\); // Fija el CODIGO \(familia o derivado\)) show
0 208.2 moveto
8 f0
(void estado \(BOOL Status\) {status = Status; };) show
0 190.6 moveto
8 f0
(void cod_error \(BOOL CodErr\) {coderr |= CodErr; };) show
0 173 moveto
8 f0
(BOOL subcodigo \(void\); // Calcula el subCODIGO) show
0 155.4 moveto
8 f0
(BOOL opciones \(long *Opc\); // Fija los valores de los par\341metros) show
0 137.8 moveto
8 f0
(BOOL opciones_glo \(long ParGNum, long *OpcG\); // Fija los valores de) show
0 120.2 moveto
8 f0
(// los par\341metros globales) show
0 102.6 moveto
8 f0
(BOOL sinonimo \(char *Subcod, char *Codsin\); // Fija el sin\363nimo se Subcod) show
0 85 moveto
8 f0
( ) show
pagelevel restore
showpage
%%Page: 55 55
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(long lee_num_par \(void\) { return parnum; };) show
0 736.2 moveto
8 f0
(long lee_num_des \(void\) { return desnum; };) show
0 718.6 moveto
8 f0
(long lee_num_opc \(long id_par\) { return opcnum[id_par];};) show
0 701 moveto
8 f0
(char *lee_rot_par \(long id_par\);) show
0 683.4 moveto
8 f0
(char *lee_rot_opc \(long id_par, long id_opc\);) show
0 665.8 moveto
8 f0
(char *lee_cod_des \(long id_des\);) show
0 648.2 moveto
8 f0
(double lee_ren_des \(long id_des\);) show
0 630.6 moveto
8 f0
(double lee_precio \(void\) { return pre; };) show
0 613 moveto
8 f0
(char *lee_codigo \(void\);) show
0 595.4 moveto
8 f0
(char *lee_resumen \(void\);) show
0 577.8 moveto
8 f0
(char *lee_texto \(void\);) show
0 560.2 moveto
8 f0
(char *lee_pliego \(void\);) show
0 542.6 moveto
8 f0
(char *lee_claves \(void\);) show
0 525 moveto
8 f0
(char *lee_comentario \(void\);) show
0 507.4 moveto
8 f0
(char *lee_error \(void\);) show
0 489.8 moveto
8 f0
(long lee_opcion \(long Par\); // Devuelve la opci\363n fijada en el) show
0 472.2 moveto
8 f0
(// par\341metro Par) show
0 454.6 moveto
8 f0
(char *lee_rotulo \(long Par\); // Devuelve el r\363tulo de la opci\363n fijada en ) show
0 437 moveto
8 f0
(// el par\341metro Par) show
0 419.4 moveto
8 f0
(BOOL lee_opciones \(char *Cod, long *Opc\); // Devuelve las opciones de ) show
0 401.8 moveto
8 f0
(// un CODIGO) show
0 384.2 moveto
8 f0
(BOOL lee_estado \(void\) { return status; };) show
0 366.6 moveto
8 f0
(BOOL lee_cod_error \(void\) { return coderr; };) show
0 349 moveto
8 f0
(int inicializa \(short operacion\);) show
0 331.4 moveto
8 f0
(Cfiebdc \(\);) show
0 313.8 moveto
8 f0
(~Cfiebdc \(\);) show
0 296.2 moveto
8 f0
(};) show
0 276.8 moveto
10 f0
(1.2.2. Archivo ?inferfaz.cpp?) show
0 256.6 moveto
8 f0
( ) show
0 239 moveto
8 f0
(#define STRICT) show
0 221.4 moveto
8 f0
(#include <windows.h>) show
0 203.8 moveto
8 f0
(#include <string.h>) show
0 186.2 moveto
8 f0
(#include "Base.h") show
0 168.6 moveto
8 f0
( ) show
0 151 moveto
8 f0
(Cfiebdc *Cglobal;) show
0 133.4 moveto
8 f0
( ) show
0 115.8 moveto
8 f0
(/////////////////////////////////////////////////////////////////////////////) show
0 98.2 moveto
8 f0
(// FUNCIONES GENERALES Y DE INICIALIZACI\323N) show
0 80.6 moveto
8 f0
( ) show
pagelevel restore
showpage
%%Page: 56 56
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752 moveto
8 f0
(BOOL APIENTRY) show
0 734.4 moveto
8 f0
(DllMain \( // Espec\355fico de Microsoft. Borland utiliza ?DllEntryPoint?) show
0 716.8 moveto
8 f0
(HANDLE hModule,) show
0 699.2 moveto
8 f0
(DWORD tipo_llamada,) show
0 681.6 moveto
8 f0
(LPVOID lpReserved \)) show
0 664 moveto
8 f0
({) show
0 646.4 moveto
8 f0
(switch \(tipo_llamada\) {) show
0 628.8 moveto
8 f0
(case DLL_PROCESS_ATTACH:) show
0 611.2 moveto
8 f0
(case DLL_THREAD_ATTACH:) show
0 593.6 moveto
8 f0
(// Inicializaci\363n) show
0 576 moveto
8 f0
(Cglobal = new Cfiebdc;) show
0 558.4 moveto
8 f0
(Global \(*Cglobal, LEE\);) show
0 540.8 moveto
8 f0
(Cglobal->funcion = &Global;) show
0 523.2 moveto
8 f0
(break;) show
0 505.6 moveto
8 f0
(case DLL_THREAD_DETACH:) show
0 488 moveto
8 f0
(case DLL_PROCESS_DETACH:) show
0 470.4 moveto
8 f0
(// Liberaci\363n) show
0 452.8 moveto
8 f0
(Cglobal->inicializa \(BORRA\);) show
0 435.2 moveto
8 f0
(Cglobal->Cfiebdc::~Cfiebdc\(\);) show
0 417.6 moveto
8 f0
(}) show
0 400 moveto
8 f0
(return TRUE;) show
0 382.4 moveto
8 f0
(}) show
0 364.8 moveto
8 f0
( ) show
0 347.2 moveto
8 f0
(LONG EXPORTA) show
0 329.6 moveto
8 f0
(BdcCodificacion \(VOID\)) show
0 312 moveto
8 f0
({) show
0 294.4 moveto
8 f0
(return 1; // La codificaci\363n es indipendiente de los valores de los par\341metros) show
0 276.8 moveto
8 f0
(}) show
0 259.2 moveto
8 f0
( ) show
0 241.6 moveto
8 f0
(/////////////////////////////////////////////////////////////////////////////) show
0 224 moveto
8 f0
(// FUNCIONES REFERENTES AL PARAM\311TRICO GLOBAL) show
0 206.4 moveto
8 f0
( ) show
0 188.8 moveto
8 f0
(// Obtenci\363n de sus par\341metros) show
0 171.2 moveto
8 f0
(LONG EXPORTA) show
0 153.6 moveto
8 f0
(BdcGloParNumero \(VOID\)) show
0 136 moveto
8 f0
({) show
0 118.4 moveto
8 f0
(return BdcParNumero \(Cglobal\);) show
0 100.8 moveto
8 f0
(}) show
0 83.2 moveto
8 f0
( ) show
pagelevel restore
showpage
%%Page: 57 57
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(LONG EXPORTA) show
0 736.2 moveto
8 f0
(BdcGloOpcNumero \() show
0 718.6 moveto
8 f0
(LONG par \)) show
0 701 moveto
8 f0
({) show
0 683.4 moveto
8 f0
(return BdcOpcNumero \(Cglobal, par\);) show
0 665.8 moveto
8 f0
(}) show
0 648.2 moveto
8 f0
( ) show
0 630.6 moveto
8 f0
(LPCSTR EXPORTA) show
0 613 moveto
8 f0
(BdcGloParRotulo \() show
0 595.4 moveto
8 f0
(LONG par \)) show
0 577.8 moveto
8 f0
({) show
0 560.2 moveto
8 f0
(return BdcParRotulo \(Cglobal, par\);) show
0 542.6 moveto
8 f0
(}) show
0 525 moveto
8 f0
( ) show
0 507.4 moveto
8 f0
(LPCSTR EXPORTA) show
0 489.8 moveto
8 f0
(BdcGloOpcRotulo \() show
0 472.2 moveto
8 f0
(LONG par,) show
0 454.6 moveto
8 f0
(LONG opc \)) show
0 437 moveto
8 f0
({) show
0 419.4 moveto
8 f0
(return BdcOpcRotulo \(Cglobal, par, opc\);) show
0 401.8 moveto
8 f0
(}) show
0 384.2 moveto
8 f0
( ) show
0 366.6 moveto
8 f0
(BOOL EXPORTA) show
0 349 moveto
8 f0
(BdcGloCalcula \() show
0 331.4 moveto
8 f0
(LPLONG opcl\)) show
0 313.8 moveto
8 f0
({) show
0 296.2 moveto
8 f0
(return BdcCalcula \(Cglobal, opcl\);) show
0 278.6 moveto
8 f0
(}) show
0 261 moveto
8 f0
( ) show
0 243.4 moveto
8 f0
(BOOL EXPORTA) show
0 225.8 moveto
8 f0
(BdcGloError \() show
0 208.2 moveto
8 f0
(LPCSTR *err\)) show
0 190.6 moveto
8 f0
({) show
0 173 moveto
8 f0
(return BdcError \(Cglobal, err\);) show
0 155.4 moveto
8 f0
(}) show
0 137.8 moveto
8 f0
(////////////////////////////////////////////////////////////////////////////) show
0 120.2 moveto
8 f0
(// FUNCIONES REFERENTES AL RESTO DE PARAM\311TRICOS) show
0 102.6 moveto
8 f0
( ) show
0 85 moveto
8 f0
(// Lectura de un concepto param\351trico) show
pagelevel restore
showpage
%%Page: 58 58
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(HANDLE EXPORTA) show
0 736.2 moveto
8 f0
(BdcLee \() show
0 718.6 moveto
8 f0
(LPCSTR cod\) {) show
0 701 moveto
8 f0
(int i;) show
0 683.4 moveto
8 f0
( ) show
0 665.8 moveto
8 f0
(Cfiebdc *Cpar = new Cfiebdc\(\);) show
0 648.2 moveto
8 f0
(for \(i=0;;i++\) {) show
0 630.6 moveto
8 f0
(Cpar->inicializa\(BORRA\);) show
0 613 moveto
8 f0
(if \(!\(\(precios [i]\)\(*Cpar, BUSCA\)\) \)) show
0 595.4 moveto
8 f0
(break;) show
0 577.8 moveto
8 f0
(if \(strcmp \(Cpar->lee_codigo\(\), cod\) == 0\) {) show
0 560.2 moveto
8 f0
(\(precios [i]\)\(*Cpar, LEE\);) show
0 542.6 moveto
8 f0
(Cpar->funcion = precios[i];) show
0 525 moveto
8 f0
(return \(HANDLE\)Cpar;) show
0 507.4 moveto
8 f0
(}) show
0 489.8 moveto
8 f0
(}) show
0 472.2 moveto
8 f0
(BdcCierra \( \(HANDLE\)Cpar \);) show
0 454.6 moveto
8 f0
(return \(HANDLE\) 0; // El precio no existe) show
0 437 moveto
8 f0
(}) show
0 419.4 moveto
8 f0
( ) show
0 401.8 moveto
8 f0
(// Lectura de un concepto param\351trico a partir del CODIGO del derivado param\351trico) show
0 384.2 moveto
8 f0
(HANDLE EXPORTA) show
0 366.6 moveto
8 f0
(BdcDecodifica \() show
0 349 moveto
8 f0
(LPCSTR cod,) show
0 331.4 moveto
8 f0
(LPLONG opcl \)) show
0 313.8 moveto
8 f0
({) show
0 296.2 moveto
8 f0
(int i,j;) show
0 278.6 moveto
8 f0
(char cod_fam[8];) show
0 261 moveto
8 f0
( ) show
0 243.4 moveto
8 f0
(if \(strlen\(cod\)<7\) return \(HANDLE\)0;) show
0 225.8 moveto
8 f0
(strncpy \(cod_fam, cod, 6\);) show
0 208.2 moveto
8 f0
(cod_fam[6]='$';) show
0 190.6 moveto
8 f0
(cod_fam[7]='\\0';) show
0 173 moveto
8 f0
(for \(i=0; i<7; i++\)) show
0 155.4 moveto
8 f0
(if \(cod_fam[i]<=' '\) cod_fam[i]='_';) show
0 137.8 moveto
8 f0
(Cfiebdc *Cpar = new Cfiebdc\(\);) show
0 120.2 moveto
8 f0
(for \(i=0;;i++\) {) show
0 102.6 moveto
8 f0
(Cpar->inicializa\(BORRA\);) show
0 85 moveto
8 f0
(if \(!\(\(precios [i]\)\(*Cpar, BUSCA\)\) \)) show
pagelevel restore
showpage
%%Page: 59 59
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(break;) show
0 736.2 moveto
8 f0
(if \(strcmp \(Cpar->lee_codigo\(\), cod_fam\) == 0\) {) show
0 718.6 moveto
8 f0
( ) show
0 701 moveto
8 f0
(//Se encontr\363 el param\351trico) show
0 683.4 moveto
8 f0
(\(precios [i]\)\(*Cpar, LEE\);) show
0 665.8 moveto
8 f0
(Cpar->funcion = precios[i];) show
0 648.2 moveto
8 f0
( ) show
0.5 630.6 moveto
8 f0
(j=Cpar->lee_num_par\(\);) show
0 613 moveto
8 f0
( ) show
0 595.4 moveto
8 f0
(if \(!Cpar->lee_opciones\(\(char *\)cod+6, opcl\)\) {) show
0 577.8 moveto
8 f0
(break;) show
0 560.2 moveto
8 f0
(}) show
0 542.6 moveto
8 f0
(return \(HANDLE\)Cpar;) show
0 525 moveto
8 f0
(}) show
0 507.4 moveto
8 f0
(}) show
0 489.8 moveto
8 f0
(BdcCierra \( \(HANDLE\)Cpar \);) show
0 472.2 moveto
8 f0
(return \(HANDLE\) 0; // El precio no existe) show
0 454.6 moveto
8 f0
(}) show
0 437 moveto
8 f0
(// Obtenci\363n de sus par\341metros) show
0 419.4 moveto
8 f0
(LONG EXPORTA) show
0 401.8 moveto
8 f0
(BdcParNumero \() show
0 384.2 moveto
8 f0
(HANDLE h \)) show
0 366.6 moveto
8 f0
({) show
0 349 moveto
8 f0
(Cfiebdc *Cpar;) show
0 331.4 moveto
8 f0
( ) show
0 313.8 moveto
8 f0
(if \(!h\) return ERRONEO;) show
0 296.2 moveto
8 f0
(else Cpar = \(Cfiebdc *\)h;) show
0 278.6 moveto
8 f0
(if \(Cpar->lee_estado\(\) == ST_VACIO\) {) show
0 261 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_LEIDO\);) show
0 243.4 moveto
8 f0
(return ERRONEO;) show
0 225.8 moveto
8 f0
(} else) show
0 208.2 moveto
8 f0
(return Cpar->lee_num_par\(\);) show
0 190.6 moveto
8 f0
(}) show
0 173 moveto
8 f0
( ) show
0 155.4 moveto
8 f0
(LONG EXPORTA) show
0 137.8 moveto
8 f0
(BdcOpcNumero \() show
0 120.2 moveto
8 f0
(HANDLE h,) show
0 102.6 moveto
8 f0
(LONG par\)) show
0 85 moveto
8 f0
({) show
pagelevel restore
showpage
%%Page: 60 60
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(Cfiebdc *Cpar;) show
0 736.2 moveto
8 f0
(if \(!h\) return ERRONEO;) show
0 718.6 moveto
8 f0
(else Cpar = \(Cfiebdc *\)h;) show
0 701 moveto
8 f0
(if \(Cpar->lee_estado\(\) == ST_VACIO\) {) show
0 683.4 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_LEIDO\);) show
0 665.8 moveto
8 f0
(return ERRONEO;) show
0 648.2 moveto
8 f0
(} else) show
0 630.6 moveto
8 f0
(return Cpar->lee_num_opc \(par\);) show
0 613 moveto
8 f0
(}) show
0 595.4 moveto
8 f0
( ) show
0 577.8 moveto
8 f0
(LPCSTR EXPORTA) show
0 560.2 moveto
8 f0
(BdcParRotulo \() show
0 542.6 moveto
8 f0
(HANDLE h,) show
0 525 moveto
8 f0
(LONG par\)) show
0 507.4 moveto
8 f0
({) show
0 489.8 moveto
8 f0
(Cfiebdc *Cpar;) show
0 472.2 moveto
8 f0
(if \(!h\) return NULL;) show
0 454.6 moveto
8 f0
(else Cpar = \(Cfiebdc *\)h;) show
0 437 moveto
8 f0
(if \(Cpar->lee_estado\(\) == ST_VACIO\) {) show
0 419.4 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_LEIDO\);) show
0 401.8 moveto
8 f0
(return NULL;) show
0 384.2 moveto
8 f0
(} else) show
0 366.6 moveto
8 f0
(return \(LPCSTR\)Cpar->lee_rot_par\(par\);) show
0 349 moveto
8 f0
(}) show
0 331.4 moveto
8 f0
( ) show
0 313.8 moveto
8 f0
(LPCSTR EXPORTA) show
0 296.2 moveto
8 f0
(BdcOpcRotulo \() show
0 278.6 moveto
8 f0
(HANDLE h,) show
0 261 moveto
8 f0
(LONG par,) show
0 243.4 moveto
8 f0
(LONG opc\)) show
0 225.8 moveto
8 f0
({) show
0 208.2 moveto
8 f0
(Cfiebdc *Cpar;) show
0 190.6 moveto
8 f0
(if \(!h\) return NULL;) show
0 173 moveto
8 f0
(else Cpar = \(Cfiebdc *\)h;) show
0 155.4 moveto
8 f0
(if \(Cpar->lee_estado\(\) == ST_VACIO\) {) show
0 137.8 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_LEIDO\);) show
0 120.2 moveto
8 f0
(return NULL;) show
0 102.6 moveto
8 f0
(} else) show
0 85 moveto
8 f0
(return \(LPCSTR\)Cpar->lee_rot_opc \(par, opc\);) show
pagelevel restore
showpage
%%Page: 61 61
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(}) show
0 736.2 moveto
8 f0
( ) show
0 718.6 moveto
8 f0
(// Asignaci\363n de opciones de los par\341metros y comprobaci\363n de su validez) show
0 701 moveto
8 f0
(BOOL EXPORTA ) show
0 683.4 moveto
8 f0
(BdcValida \() show
0 665.8 moveto
8 f0
(HANDLE h,) show
0 648.2 moveto
8 f0
(LPLONG opcl \)) show
0 630.6 moveto
8 f0
({) show
0 613 moveto
8 f0
(Cfiebdc *Cpar;) show
0 595.4 moveto
8 f0
(if \(!h\) return ERRONEO;) show
0 577.8 moveto
8 f0
(else Cpar = \(Cfiebdc *\)h;) show
0 560.2 moveto
8 f0
(if \(Cpar->lee_estado\(\) == ST_VACIO\) {) show
0 542.6 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_LEIDO\);) show
0 525 moveto
8 f0
(return ERRONEO;) show
0 507.4 moveto
8 f0
(}) show
0 489.8 moveto
8 f0
(if \(!Cpar->opciones \(opcl\)\) return FALSE;) show
0 472.2 moveto
8 f0
(return \(\(Cpar->funcion\) \(*Cpar, VALIDA\)\) ? CORRECTO : ERRONEO;) show
0 454.6 moveto
8 f0
(}) show
0 437 moveto
8 f0
( ) show
0 419.4 moveto
8 f0
(// Asignaci\363n de opciones de los par\341metros y c\341lculo del derivado) show
0 401.8 moveto
8 f0
(BOOL EXPORTA ) show
0 384.2 moveto
8 f0
(BdcCalcula \() show
0 366.6 moveto
8 f0
(HANDLE h,) show
0 349 moveto
8 f0
(LPLONG opcl \)) show
0 331.4 moveto
8 f0
({) show
0 313.8 moveto
8 f0
(Cfiebdc *Cpar;) show
0 296.2 moveto
8 f0
(if \(!h\) return ERRONEO;) show
0 278.6 moveto
8 f0
(else Cpar = \(Cfiebdc *\)h;) show
0 261 moveto
8 f0
(if \(Cpar->lee_estado\(\) == ST_VACIO\) {) show
0 243.4 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_LEIDO\);) show
0 225.8 moveto
8 f0
(return ERRONEO;) show
0 208.2 moveto
8 f0
(}) show
0 190.6 moveto
8 f0
(if \(!Cpar->opciones \(opcl\)\) return FALSE;) show
0 173 moveto
8 f0
(return \(\(Cpar->funcion\) \(*Cpar, CALCULA\)\) ? CORRECTO : ERRONEO;) show
0 155.4 moveto
8 f0
(}) show
0 137.8 moveto
8 f0
( ) show
0 120.2 moveto
8 f0
(// Liberaci\363n de memoria) show
0 102.6 moveto
8 f0
(BOOL EXPORTA) show
0 85 moveto
8 f0
(BdcCierra \() show
pagelevel restore
showpage
%%Page: 62 62
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(HANDLE h\)) show
0 736.2 moveto
8 f0
({) show
0 718.6 moveto
8 f0
(Cfiebdc *Cpar;) show
0 701 moveto
8 f0
(if \(!h\) return ERRONEO;) show
0 683.4 moveto
8 f0
(else Cpar = \(Cfiebdc *\)h;) show
0 665.8 moveto
8 f0
(Cpar->inicializa \(BORRA\);) show
0 648.2 moveto
8 f0
(Cpar->Cfiebdc::~Cfiebdc\(\);) show
0 630.6 moveto
8 f0
(return CORRECTO;) show
0 613 moveto
8 f0
(}) show
0 595.4 moveto
8 f0
( ) show
0 577.8 moveto
8 f0
(// Obtenci\363n del derivado param\351trico) show
0 560.2 moveto
8 f0
(LONG EXPORTA) show
0 542.6 moveto
8 f0
(BdcDesNumero \() show
0 525 moveto
8 f0
(HANDLE h \)) show
0 507.4 moveto
8 f0
({) show
0 489.8 moveto
8 f0
(Cfiebdc *Cpar;) show
0 472.2 moveto
8 f0
(if \(!h\) return ERRONEO;) show
0 454.6 moveto
8 f0
(else Cpar = \(Cfiebdc *\)h;) show
0 437 moveto
8 f0
( ) show
0 419.4 moveto
8 f0
(if \(Cpar->lee_estado\(\) == ST_VACIO\) {) show
0 401.8 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_LEIDO\);) show
0 384.2 moveto
8 f0
(return ERRONEO;) show
0 366.6 moveto
8 f0
(}) show
0 349 moveto
8 f0
(if \(Cpar->lee_estado\(\) != ST_DERIVADO\) {) show
0 331.4 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_CALCULADO\);) show
0 313.8 moveto
8 f0
(return ERRONEO;) show
0 296.2 moveto
8 f0
(}) show
0 278.6 moveto
8 f0
(return Cpar->lee_num_des\(\);) show
0 261 moveto
8 f0
(}) show
0 243.4 moveto
8 f0
( ) show
0 225.8 moveto
8 f0
(LPCSTR EXPORTA) show
0 208.2 moveto
8 f0
(BdcDesCodigo \() show
0 190.6 moveto
8 f0
(HANDLE h,) show
0 173 moveto
8 f0
(LONG des \)) show
0 155.4 moveto
8 f0
({) show
0 137.8 moveto
8 f0
(Cfiebdc *Cpar;) show
0 120.2 moveto
8 f0
( ) show
0 102.6 moveto
8 f0
(if \(!h\) return NULL;) show
0 85 moveto
8 f0
(else Cpar = \(Cfiebdc *\)h;) show
pagelevel restore
showpage
%%Page: 63 63
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
( ) show
0 736.2 moveto
8 f0
(if \(Cpar->lee_estado\(\) == ST_VACIO\) {) show
0 718.6 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_LEIDO\);) show
0 701 moveto
8 f0
(return NULL;) show
0 683.4 moveto
8 f0
(}) show
0 665.8 moveto
8 f0
(if \(Cpar->lee_estado\(\) != ST_DERIVADO\) {) show
0 648.2 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_CALCULADO\);) show
0 630.6 moveto
8 f0
(return NULL;) show
0 613 moveto
8 f0
(}) show
0 595.4 moveto
8 f0
(return \(LPCSTR\)Cpar->lee_cod_des \(des\);) show
0 577.8 moveto
8 f0
(}) show
0 560.2 moveto
8 f0
( ) show
0 542.6 moveto
8 f0
(BOOL EXPORTA) show
0 525 moveto
8 f0
(BdcRendimiento \() show
0 507.4 moveto
8 f0
(HANDLE h,) show
0 489.8 moveto
8 f0
(LONG des,) show
0 472.2 moveto
8 f0
(double FAR *ren\)) show
0 454.6 moveto
8 f0
({) show
0 437 moveto
8 f0
(Cfiebdc *Cpar;) show
0 419.4 moveto
8 f0
( ) show
0 401.8 moveto
8 f0
(*ren = 0.0;) show
0 384.2 moveto
8 f0
(if \(!h\) return ERRONEO;) show
0 366.6 moveto
8 f0
(else Cpar = \(Cfiebdc *\)h;) show
0 349 moveto
8 f0
( ) show
0 331.4 moveto
8 f0
(if \(Cpar->lee_estado\(\) == ST_VACIO\) {) show
0 313.8 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_LEIDO\);) show
0 296.2 moveto
8 f0
(return ERRONEO;) show
0 278.6 moveto
8 f0
(}) show
0 261 moveto
8 f0
(if \(Cpar->lee_estado\(\) != ST_DERIVADO\) {) show
0 243.4 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_CALCULADO\);) show
0 225.8 moveto
8 f0
(return ERRONEO;) show
0 208.2 moveto
8 f0
(}) show
0 190.6 moveto
8 f0
(*ren = Cpar->lee_ren_des\(des\);) show
0 173 moveto
8 f0
(return CORRECTO;) show
0 155.4 moveto
8 f0
(}) show
0 137.8 moveto
8 f0
( ) show
0 120.2 moveto
8 f0
(BOOL EXPORTA) show
0 102.6 moveto
8 f0
(BdcPrecio \() show
0 85 moveto
8 f0
(HANDLE h,) show
pagelevel restore
showpage
%%Page: 64 64
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(double FAR *pre\)) show
0 736.2 moveto
8 f0
({) show
0 718.6 moveto
8 f0
(Cfiebdc *Cpar;) show
0 701 moveto
8 f0
(*pre=0.0;) show
0 683.4 moveto
8 f0
( ) show
0 665.8 moveto
8 f0
(if \(!h\) return ERRONEO;) show
0 648.2 moveto
8 f0
(else Cpar = \(Cfiebdc *\)h;) show
0 630.6 moveto
8 f0
( ) show
0 613 moveto
8 f0
(if \(Cpar->lee_estado\(\) == ST_VACIO\) {) show
0 595.4 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_LEIDO\);) show
0 577.8 moveto
8 f0
(return ERRONEO;) show
0 560.2 moveto
8 f0
(}) show
0 542.6 moveto
8 f0
(if \(Cpar->lee_estado\(\) != ST_DERIVADO\) {) show
0 525 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_CALCULADO\);) show
0 507.4 moveto
8 f0
(return ERRONEO;) show
0 489.8 moveto
8 f0
(}) show
0 472.2 moveto
8 f0
(*pre = Cpar->lee_precio\(\);) show
0 454.6 moveto
8 f0
(return CORRECTO;) show
0 437 moveto
8 f0
(}) show
0 419.4 moveto
8 f0
( ) show
0 401.8 moveto
8 f0
(LPCSTR EXPORTA) show
0 384.2 moveto
8 f0
(BdcCodigo \() show
0 366.6 moveto
8 f0
(HANDLE h\)) show
0 349 moveto
8 f0
({) show
0 331.4 moveto
8 f0
(Cfiebdc *Cpar;) show
0 313.8 moveto
8 f0
( ) show
0 296.2 moveto
8 f0
(if \(!h\) return NULL;) show
0 278.6 moveto
8 f0
(else Cpar = \(Cfiebdc *\)h;) show
0 261 moveto
8 f0
( ) show
0 243.4 moveto
8 f0
(if \(Cpar->lee_estado\(\) == ST_VACIO\) {) show
0 225.8 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_LEIDO\);) show
0 208.2 moveto
8 f0
(return NULL;) show
0 190.6 moveto
8 f0
(}) show
0 173 moveto
8 f0
(return \(LPCSTR\)Cpar->lee_codigo\(\);) show
0 155.4 moveto
8 f0
(}) show
0 137.8 moveto
8 f0
( ) show
0 120.2 moveto
8 f0
(LPCSTR EXPORTA) show
0 102.6 moveto
8 f0
(BdcResumen \() show
0 85 moveto
8 f0
(HANDLE h\)) show
pagelevel restore
showpage
%%Page: 65 65
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
({) show
0 736.2 moveto
8 f0
(Cfiebdc *Cpar;) show
0 718.6 moveto
8 f0
( ) show
0 701 moveto
8 f0
(if \(!h\) return NULL;) show
0 683.4 moveto
8 f0
(else Cpar = \(Cfiebdc *\)h;) show
0 665.8 moveto
8 f0
( ) show
0 648.2 moveto
8 f0
(if \(Cpar->lee_estado\(\) == ST_VACIO\) {) show
0 630.6 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_LEIDO\);) show
0 613 moveto
8 f0
(return NULL;) show
0 595.4 moveto
8 f0
(}) show
0 577.8 moveto
8 f0
(if \(Cpar->lee_estado\(\) != ST_DERIVADO\) {) show
0 560.2 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_CALCULADO\);) show
0 542.6 moveto
8 f0
(return NULL;) show
0 525 moveto
8 f0
(}) show
0 507.4 moveto
8 f0
(return \(LPCSTR\)Cpar->lee_resumen\(\);) show
0 489.8 moveto
8 f0
(}) show
0 472.2 moveto
8 f0
( ) show
0 454.6 moveto
8 f0
(LPCSTR EXPORTA) show
0 437 moveto
8 f0
(BdcTexto \() show
0 419.4 moveto
8 f0
(HANDLE h\)) show
0 401.8 moveto
8 f0
({) show
0 384.2 moveto
8 f0
(Cfiebdc *Cpar;) show
0 366.6 moveto
8 f0
( ) show
0 349 moveto
8 f0
(if \(!h\) return NULL;) show
0 331.4 moveto
8 f0
(else Cpar = \(Cfiebdc *\)h;) show
0 313.8 moveto
8 f0
( ) show
0 296.2 moveto
8 f0
(if \(Cpar->lee_estado\(\) == ST_VACIO\) {) show
0 278.6 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_LEIDO\);) show
0 261 moveto
8 f0
(return NULL;) show
0 243.4 moveto
8 f0
(}) show
0 225.8 moveto
8 f0
(if \(Cpar->lee_estado\(\) != ST_DERIVADO\) {) show
0 208.2 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_CALCULADO\);) show
0 190.6 moveto
8 f0
(return NULL;) show
0 173 moveto
8 f0
(}) show
0 155.4 moveto
8 f0
(return \(LPCSTR\)Cpar->lee_texto\(\);) show
0 137.8 moveto
8 f0
(}) show
0 120.2 moveto
8 f0
( ) show
0 102.6 moveto
8 f0
(LPCSTR EXPORTA) show
0 85 moveto
8 f0
(BdcPliego \() show
pagelevel restore
showpage
%%Page: 66 66
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(HANDLE h\)) show
0 736.2 moveto
8 f0
({) show
0 718.6 moveto
8 f0
(Cfiebdc *Cpar;) show
0 701 moveto
8 f0
( ) show
0 683.4 moveto
8 f0
(if \(!h\) return NULL;) show
0 665.8 moveto
8 f0
(else Cpar = \(Cfiebdc *\)h;) show
0 648.2 moveto
8 f0
( ) show
0 630.6 moveto
8 f0
(if \(Cpar->lee_estado\(\) == ST_VACIO\) {) show
0 613 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_LEIDO\);) show
0 595.4 moveto
8 f0
(return NULL;) show
0 577.8 moveto
8 f0
(}) show
0 560.2 moveto
8 f0
(if \(Cpar->lee_estado\(\) != ST_DERIVADO\) {) show
0 542.6 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_CALCULADO\);) show
0 525 moveto
8 f0
(return NULL;) show
0 507.4 moveto
8 f0
(}) show
0 489.8 moveto
8 f0
(return \(LPCSTR\)Cpar->lee_pliego\(\);) show
0 472.2 moveto
8 f0
(}) show
0 454.6 moveto
8 f0
(LPCSTR EXPORTA) show
0 437 moveto
8 f0
(BdcComentario \() show
0 419.4 moveto
8 f0
(HANDLE h\)) show
0 401.8 moveto
8 f0
({) show
0 384.2 moveto
8 f0
(Cfiebdc *Cpar;) show
0 366.6 moveto
8 f0
( ) show
0 349 moveto
8 f0
(if \(!h\) return NULL;) show
0 331.4 moveto
8 f0
(else Cpar = \(Cfiebdc *\)h;) show
0 313.8 moveto
8 f0
( ) show
0 296.2 moveto
8 f0
(if \(Cpar->lee_estado\(\) == ST_VACIO\) {) show
0 278.6 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_LEIDO\);) show
0 261 moveto
8 f0
(return NULL;) show
0 243.4 moveto
8 f0
(}) show
0 225.8 moveto
8 f0
(return \(LPCSTR\)Cpar->lee_comentario\(\);) show
0 208.2 moveto
8 f0
(}) show
0 190.6 moveto
8 f0
( ) show
0 173 moveto
8 f0
(LPCSTR EXPORTA) show
0 155.4 moveto
8 f0
(BdcClaves \() show
0 137.8 moveto
8 f0
(HANDLE h\)) show
0 120.2 moveto
8 f0
({) show
0 102.6 moveto
8 f0
(Cfiebdc *Cpar;) show
0 85 moveto
8 f0
( ) show
pagelevel restore
showpage
%%Page: 67 67
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(if \(!h\) return NULL;) show
0 736.2 moveto
8 f0
(else Cpar = \(Cfiebdc *\)h;) show
0 718.6 moveto
8 f0
( ) show
0 701 moveto
8 f0
(if \(Cpar->lee_estado\(\) == ST_VACIO\) {) show
0 683.4 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_LEIDO\);) show
0 665.8 moveto
8 f0
(return NULL;) show
0 648.2 moveto
8 f0
(}) show
0 630.6 moveto
8 f0
(if \(Cpar->lee_estado\(\) != ST_DERIVADO\) {) show
0 613 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_CALCULADO\);) show
0 595.4 moveto
8 f0
(return NULL;) show
0 577.8 moveto
8 f0
(}) show
0 560.2 moveto
8 f0
(return \(LPCSTR\)Cpar->lee_claves\(\);) show
0 542.6 moveto
8 f0
(}) show
0 525 moveto
8 f0
( ) show
0 507.4 moveto
8 f0
(BOOL EXPORTA) show
0 489.8 moveto
8 f0
(BdcError \() show
0 472.2 moveto
8 f0
(HANDLE h,) show
0 454.6 moveto
8 f0
(LPCSTR *err\)) show
0 437 moveto
8 f0
({) show
0 419.4 moveto
8 f0
(Cfiebdc *Cpar;) show
0 401.8 moveto
8 f0
(BOOL ret;) show
0 384.2 moveto
8 f0
( ) show
0 366.6 moveto
8 f0
(if \(!h\) { *err=""; return BDCERR_CONCEPTO_NULO; }) show
0 349 moveto
8 f0
(else Cpar = \(Cfiebdc *\)h;) show
0 331.4 moveto
8 f0
( ) show
0 313.8 moveto
8 f0
(if \(Cpar->lee_estado\(\) == ST_VACIO\) {) show
0 296.2 moveto
8 f0
(Cpar->cod_error \(BDCERR_NO_LEIDO\);) show
0 278.6 moveto
8 f0
(*err = "";) show
0 261 moveto
8 f0
(return Cpar->lee_cod_error\(\);) show
0 243.4 moveto
8 f0
(}) show
0 225.8 moveto
8 f0
(*err = \(LPCSTR\)Cpar->lee_error\(\);) show
0 208.2 moveto
8 f0
(ret = Cpar->lee_cod_error\(\);) show
0 190.6 moveto
8 f0
(Cpar->cod_error \(BDCERR_CORRECTO\);) show
0 173 moveto
8 f0
(return ret;) show
0 155.4 moveto
8 f0
(}) show
0 137.8 moveto
8 f0
( ) show
0 118.4 moveto
10 f0
( ) show
0 96.4 moveto
10 f0
(1.2.3. Archivo ?aplicat.cpp?) show
0 76.2 moveto
8 f0
( ) show
pagelevel restore
showpage
%%Page: 68 68
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 747.6 moveto
8 f0
(#define STRICT) show
0 730 moveto
8 f0
(#include <windows.h>) show
0 712.4 moveto
8 f0
(#include <stdio.h>) show
0 694.8 moveto
8 f0
(#include <stdarg.h>) show
0 677.2 moveto
8 f0
(#include <string.h>) show
0 659.6 moveto
8 f0
(#include <math.h>) show
0 642 moveto
8 f0
( ) show
0 624.4 moveto
8 f0
(#include "Base.h") show
0 606.8 moveto
8 f0
( ) show
0 589.2 moveto
8 f0
(Cfiebdc::Cfiebdc \(void\) {) show
0 571.6 moveto
8 f0
(int i,j;) show
0 554 moveto
8 f0
( ) show
0 536.4 moveto
8 f0
(estado \(ST_VACIO\);) show
0 518.8 moveto
8 f0
(coderr =BDCERR_CORRECTO;) show
0 501.2 moveto
8 f0
(// par\341metros y opciones por par\341metro) show
0 483.6 moveto
8 f0
(for \(i=0; i<MAX_PARAM; i++\) {) show
0 466 moveto
8 f0
(parrot[i] = \(char *\)0;) show
0 448.4 moveto
8 f0
(opcrot[i] = \(char **\)0;) show
0 430.8 moveto
8 f0
(}) show
0 413.2 moveto
8 f0
( ) show
0 395.6 moveto
8 f0
(parnum=0;) show
0 378 moveto
8 f0
(pre=0.;) show
0 360.4 moveto
8 f0
( ) show
0 342.8 moveto
8 f0
(// sin\363nimos) show
0 325.2 moveto
8 f0
(for \(j=0; j<2; j++\) {) show
0 307.6 moveto
8 f0
(codsin[j]= \(char **\)0;) show
0 290 moveto
8 f0
(}) show
0 272.4 moveto
8 f0
(sinnum=0;) show
0 254.8 moveto
8 f0
( ) show
0 237.2 moveto
8 f0
(// descomposici\363n) show
0 219.6 moveto
8 f0
(desren = \(double *\)0;) show
0 202 moveto
8 f0
(descod = \(char **\)0;) show
0 184.4 moveto
8 f0
(desnum=0;) show
0 166.8 moveto
8 f0
(// textos) show
0 149.2 moveto
8 f0
(err = \(char *\)0;) show
0 131.6 moveto
8 f0
(res = \(char *\)0;) show
0 114 moveto
8 f0
(tex = \(char *\)0;) show
0 96.4 moveto
8 f0
(pli = \(char *\)0;) show
0 78.8 moveto
8 f0
(com = \(char *\)0;) show
pagelevel restore
showpage
%%Page: 69 69
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 750.2 moveto
8 f0
(cla = \(char *\)0;) show
0 732.6 moveto
8 f0
(codfam = \(char *\)0;) show
0 715 moveto
8 f0
(subcod = \(char *\)0;) show
0 697.4 moveto
8 f0
(codder = \(char *\)0;) show
0 679.8 moveto
8 f0
(}) show
0 662.2 moveto
8 f0
( ) show
0 644.6 moveto
8 f0
(Cfiebdc::~Cfiebdc \(void\) {) show
0 627 moveto
8 f0
(estado \(ST_VACIO\);) show
0 609.4 moveto
8 f0
(}) show
0 591.8 moveto
8 f0
( ) show
0 574.2 moveto
8 f0
(Cfiebdc::inicializa \() show
0 556.6 moveto
8 f0
(short operacion \)) show
0 539 moveto
8 f0
({) show
0 521.4 moveto
8 f0
(int i,j;) show
0 503.8 moveto
8 f0
( ) show
0 486.2 moveto
8 f0
(coderr = BDCERR_CORRECTO;) show
0 468.6 moveto
8 f0
( ) show
0 451 moveto
8 f0
(if \(operacion == BORRA\) {) show
0 433.4 moveto
8 f0
(estado \(ST_VACIO\);) show
0 415.8 moveto
8 f0
(// par\341metros y opciones por par\341metro) show
0 398.2 moveto
8 f0
(for \(i=0; i<parnum; i++\) {) show
0 380.6 moveto
8 f0
(if \(parrot[i]\) {) show
0 363 moveto
8 f0
(delete[] parrot[i];) show
0 345.4 moveto
8 f0
(parrot[i] = \(char *\)0;) show
0 327.8 moveto
8 f0
(}) show
0 310.2 moveto
8 f0
(for \(j=0; j< opcnum[i]; j++\) {) show
0 292.6 moveto
8 f0
(if \(opcrot[i][j]\) {) show
0 275 moveto
8 f0
(delete[] opcrot[i][j];) show
0 257.4 moveto
8 f0
(opcrot[i][j]= \(char *\)0;) show
0 239.8 moveto
8 f0
(}) show
0 222.2 moveto
8 f0
(}) show
0 204.6 moveto
8 f0
(if \(opcrot[i]\) {) show
0 187 moveto
8 f0
(delete[] opcrot[i];) show
0 169.4 moveto
8 f0
(opcrot[i]= \(char **\)0;) show
0 151.8 moveto
8 f0
(}) show
0 134.2 moveto
8 f0
(}) show
0 116.6 moveto
8 f0
( ) show
0 99 moveto
8 f0
(parnum=0;) show
0 81.4 moveto
8 f0
(pre=0.;) show
pagelevel restore
showpage
%%Page: 70 70
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752.8 moveto
8 f0
( ) show
0 735.2 moveto
8 f0
(// sin\363nimos) show
0 717.6 moveto
8 f0
(for \(j=0; j<2; j++\) {) show
0 700 moveto
8 f0
(for \(i=0; i<sinnum; i++\) {) show
0 682.4 moveto
8 f0
(if \(codsin[j][i]\) {) show
0 664.8 moveto
8 f0
(delete[] codsin[j][i];) show
0 647.2 moveto
8 f0
(codsin[j][i]= \(char *\)0;) show
0 629.6 moveto
8 f0
(}) show
0 612 moveto
8 f0
(}) show
0 594.4 moveto
8 f0
(if \(codsin[j]\) {) show
0 576.8 moveto
8 f0
(delete[] codsin[j];) show
0 559.2 moveto
8 f0
(codsin[j]= \(char **\)0;) show
0 541.6 moveto
8 f0
(}) show
0 524 moveto
8 f0
(}) show
0 506.4 moveto
8 f0
(sinnum=0;) show
0 488.8 moveto
8 f0
( ) show
0 471.2 moveto
8 f0
(// descomposici\363n) show
0 453.6 moveto
8 f0
(if \(desren\) {) show
0 436 moveto
8 f0
(delete[] desren;) show
0 418.4 moveto
8 f0
(desren = \(double *\)0;) show
0 400.8 moveto
8 f0
(}) show
0 383.2 moveto
8 f0
(for \(i=0; i<desnum; i++\) {) show
0 365.6 moveto
8 f0
(if \(descod[i]\) {) show
0 348 moveto
8 f0
(delete[] descod[i];) show
0 330.4 moveto
8 f0
(descod[i] = \(char *\)0;) show
0 312.8 moveto
8 f0
(}) show
0 295.2 moveto
8 f0
(}) show
0 277.6 moveto
8 f0
(if \(descod\) {) show
0 260 moveto
8 f0
(delete[] descod;) show
0 242.4 moveto
8 f0
(descod = \(char **\)0;) show
0 224.8 moveto
8 f0
(}) show
0 207.2 moveto
8 f0
(desnum=0;) show
0 189.6 moveto
8 f0
(// textos) show
0 172 moveto
8 f0
(if \(err\) { delete[] err; err = \(char *\)0; }) show
0 154.4 moveto
8 f0
(if \(res\) { delete[] res; res = \(char *\)0; }) show
0 136.8 moveto
8 f0
(if \(tex\) { delete[] tex; tex = \(char *\)0; }) show
0 119.2 moveto
8 f0
(if \(pli\) { delete[] pli; pli = \(char *\)0; }) show
0 101.6 moveto
8 f0
(if \(cla\) { delete[] cla; cla = \(char *\)0; }) show
0 84 moveto
8 f0
(if \(com\) { delete[] com; com = \(char *\)0; }) show
pagelevel restore
showpage
%%Page: 71 71
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(if \(codfam\) { delete[] codfam; codfam = \(char *\)0; }) show
0 736.2 moveto
8 f0
(if \(subcod\) { delete[] subcod; subcod = \(char *\)0; }) show
0 718.6 moveto
8 f0
(if \(codder\) { delete[] codder; codder = \(char *\)0; }) show
0 701 moveto
8 f0
(}) show
0 683.4 moveto
8 f0
( ) show
0 665.8 moveto
8 f0
(else if \(operacion == LEE\) {) show
0 648.2 moveto
8 f0
(estado \(ST_FAMILIA\);) show
0 630.6 moveto
8 f0
(}) show
0 613 moveto
8 f0
( ) show
0 595.4 moveto
8 f0
(else if \(operacion==CALCULA\) {) show
0 577.8 moveto
8 f0
(estado \(ST_DERIVADO\);) show
0 560.2 moveto
8 f0
(pre=0.;) show
0 542.6 moveto
8 f0
( ) show
0 525 moveto
8 f0
(// descomposici\363n) show
0 507.4 moveto
8 f0
(if \(desren\) {) show
0 489.8 moveto
8 f0
(delete[] desren;) show
0 472.2 moveto
8 f0
(desren = \(double *\)0;) show
0 454.6 moveto
8 f0
(}) show
0 437 moveto
8 f0
(for \(i=0; i<desnum; i++\) {) show
0 419.4 moveto
8 f0
(if \(descod[i]\) {) show
0 401.8 moveto
8 f0
(delete[] descod[i];) show
0 384.2 moveto
8 f0
(descod[i] = \(char *\)0;) show
0 366.6 moveto
8 f0
(}) show
0 349 moveto
8 f0
(}) show
0 331.4 moveto
8 f0
(if \(descod\) {) show
0 313.8 moveto
8 f0
(delete[] descod;) show
0 296.2 moveto
8 f0
(descod = \(char **\)0;) show
0 278.6 moveto
8 f0
(}) show
0 261 moveto
8 f0
(desnum=0;) show
0 243.4 moveto
8 f0
(if \(err\) { delete[] err; err = \(char *\)0; }) show
0 225.8 moveto
8 f0
(if \(res\) { delete[] res; res = \(char *\)0; }) show
0 208.2 moveto
8 f0
(if \(tex\) { delete[] tex; tex = \(char *\)0; }) show
0 190.6 moveto
8 f0
(if \(pli\) { delete[] pli; pli = \(char *\)0; }) show
0 173 moveto
8 f0
(if \(cla\) { delete[] cla; cla = \(char *\)0; }) show
0 155.4 moveto
8 f0
(if \(codfam\) { delete[] codfam; codfam = \(char *\)0; }) show
0 137.8 moveto
8 f0
(if \(subcod\) { delete[] subcod; subcod = \(char *\)0; }) show
0 120.2 moveto
8 f0
(if \(codder\) { delete[] codder; codder = \(char *\)0; }) show
0 102.6 moveto
8 f0
(}) show
0 85 moveto
8 f0
(return TRUE;) show
pagelevel restore
showpage
%%Page: 72 72
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(}) show
0 736.2 moveto
8 f0
( ) show
0 718.6 moveto
8 f0
(BOOL) show
0 701 moveto
8 f0
(Cfiebdc::parametro \() show
0 683.4 moveto
8 f0
(char *rot, ... \)) show
0 665.8 moveto
8 f0
({) show
0 648.2 moveto
8 f0
(int i, len;) show
0 630.6 moveto
8 f0
(long Opcnum=0;) show
0 613 moveto
8 f0
(char *s;) show
0 595.4 moveto
8 f0
(va_list marker;) show
0 577.8 moveto
8 f0
( ) show
0 560.2 moveto
8 f0
(if \(parnum>=MAX_PARAM\) return FALSE;) show
0 542.6 moveto
8 f0
( ) show
0 525 moveto
8 f0
(len = strlen\(rot\);) show
0 507.4 moveto
8 f0
(parrot[parnum] = new char[len+1];) show
0 489.8 moveto
8 f0
(strcpy \(parrot[parnum], rot\);) show
0 472.2 moveto
8 f0
( ) show
0 454.6 moveto
8 f0
(va_start\( marker, rot \);) show
0 437 moveto
8 f0
(do {) show
0 419.4 moveto
8 f0
(s = va_arg\( marker, char *\);) show
0 401.8 moveto
8 f0
(len = strlen \(s\);) show
0 384.2 moveto
8 f0
(if \(len==0\) break;) show
0 366.6 moveto
8 f0
(Opcnum++;) show
0 349 moveto
8 f0
(} while \( s[0] != '\\0' \);) show
0 331.4 moveto
8 f0
( ) show
0 313.8 moveto
8 f0
(va_start\( marker, rot \);) show
0 296.2 moveto
8 f0
(opcrot[parnum] = new char* [Opcnum];) show
0 278.6 moveto
8 f0
(for \(i=0; i<Opcnum; i++\) {) show
0 261 moveto
8 f0
(s = va_arg\( marker, char *\);) show
0 243.4 moveto
8 f0
(len = strlen \(s\);) show
0 225.8 moveto
8 f0
(opcrot[parnum][i] = new char[len+1];) show
0 208.2 moveto
8 f0
(strcpy \(opcrot[parnum][i], s\);) show
0 190.6 moveto
8 f0
(}) show
0 173 moveto
8 f0
( ) show
0 155.4 moveto
8 f0
(va_end\( marker \);) show
0 137.8 moveto
8 f0
( ) show
0 120.2 moveto
8 f0
(opcnum[parnum]=Opcnum;) show
0 102.6 moveto
8 f0
(parnum++;) show
0 85 moveto
8 f0
( ) show
pagelevel restore
showpage
%%Page: 73 73
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(return TRUE;) show
0 736.2 moveto
8 f0
(}) show
0 718.6 moveto
8 f0
(BOOL) show
0 701 moveto
8 f0
(Cfiebdc::precio \() show
0 683.4 moveto
8 f0
(double Pre \)) show
0 665.8 moveto
8 f0
({) show
0 648.2 moveto
8 f0
(pre=Pre;) show
0 630.6 moveto
8 f0
(return TRUE;) show
0 613 moveto
8 f0
(}) show
0 595.4 moveto
8 f0
( ) show
0 577.8 moveto
8 f0
(BOOL) show
0 560.2 moveto
8 f0
(Cfiebdc::descompuesto \() show
0 542.6 moveto
8 f0
(double Ren,) show
0 525 moveto
8 f0
(char *Cod,... \)) show
0 507.4 moveto
8 f0
({) show
0 489.8 moveto
8 f0
(int i, len;) show
0 472.2 moveto
8 f0
(char s[255], **Descod;) show
0 454.6 moveto
8 f0
(va_list marker;) show
0 437 moveto
8 f0
(double *Desren;) show
0 419.4 moveto
8 f0
( ) show
0 401.8 moveto
8 f0
(if \(fabs\(Ren\)<0.0005\) return FALSE;) show
0 384.2 moveto
8 f0
( ) show
0 366.6 moveto
8 f0
(Desren = new double [desnum+1];) show
0 349 moveto
8 f0
(memcpy \(Desren, desren, desnum*sizeof\(double\)\);) show
0 331.4 moveto
8 f0
(delete[] desren;) show
0 313.8 moveto
8 f0
(desren = Desren;) show
0 296.2 moveto
8 f0
(desren [desnum] = Ren;) show
0 278.6 moveto
8 f0
( ) show
0 261 moveto
8 f0
(Descod = new char *[desnum+1];) show
0 243.4 moveto
8 f0
(for \(i=0; i<desnum; i++\)) show
0 225.8 moveto
8 f0
(Descod[i] = descod[i];) show
0 208.2 moveto
8 f0
(delete[] descod;) show
0 190.6 moveto
8 f0
(descod = Descod;) show
0 173 moveto
8 f0
(va_start\( marker, Cod \);) show
0 155.4 moveto
8 f0
( ) show
0 137.8 moveto
8 f0
(vsprintf \(s,Cod,marker\);) show
0 120.2 moveto
8 f0
( ) show
0 102.6 moveto
8 f0
(len = strlen \(s\);) show
0 85 moveto
8 f0
(descod[desnum] = new char[len+1];) show
pagelevel restore
showpage
%%Page: 74 74
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(strcpy \(descod[desnum], s\);) show
0 736.2 moveto
8 f0
( ) show
0 718.6 moveto
8 f0
(va_end\( marker \);) show
0 701 moveto
8 f0
(desnum++;) show
0 683.4 moveto
8 f0
(return TRUE;) show
0 665.8 moveto
8 f0
(}) show
0 648.2 moveto
8 f0
( ) show
0 630.6 moveto
8 f0
(BOOL) show
0 613 moveto
8 f0
(Cfiebdc::resumen \() show
0 595.4 moveto
8 f0
(char *Res, ... \)) show
0 577.8 moveto
8 f0
({) show
0 560.2 moveto
8 f0
(char *s = new char [MAX_TXT];) show
0 542.6 moveto
8 f0
(int len;) show
0 525 moveto
8 f0
(va_list marker;) show
0 507.4 moveto
8 f0
( ) show
0 489.8 moveto
8 f0
(va_start\( marker, Res \);) show
0 472.2 moveto
8 f0
( ) show
0 454.6 moveto
8 f0
(vsprintf \(s,Res,marker\);) show
0 437 moveto
8 f0
( ) show
0 419.4 moveto
8 f0
(len = strlen \(s\);) show
0 401.8 moveto
8 f0
(res = new char[len+1];) show
0 384.2 moveto
8 f0
(strcpy \(res, s\);) show
0 366.6 moveto
8 f0
(delete[] \(s\);) show
0 349 moveto
8 f0
( ) show
0 331.4 moveto
8 f0
(va_end\( marker \);) show
0 313.8 moveto
8 f0
( ) show
0 296.2 moveto
8 f0
(return TRUE;) show
0 278.6 moveto
8 f0
(}) show
0 261 moveto
8 f0
( ) show
0 243.4 moveto
8 f0
(BOOL) show
0 225.8 moveto
8 f0
(Cfiebdc::texto \() show
0 208.2 moveto
8 f0
(char *Tex, ...\)) show
0 190.6 moveto
8 f0
({) show
0 173 moveto
8 f0
(char *s = new char [MAX_TXT];) show
0 155.4 moveto
8 f0
(int len;) show
0 137.8 moveto
8 f0
(va_list marker;) show
0 120.2 moveto
8 f0
( ) show
0 102.6 moveto
8 f0
(va_start\( marker, Tex \);) show
0 85 moveto
8 f0
( ) show
pagelevel restore
showpage
%%Page: 75 75
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(vsprintf \(s,Tex,marker\);) show
0 736.2 moveto
8 f0
( ) show
0 718.6 moveto
8 f0
(len = strlen \(s\);) show
0 701 moveto
8 f0
(tex = new char[len+1];) show
0 683.4 moveto
8 f0
(strcpy \(tex, s\);) show
0 665.8 moveto
8 f0
(delete[] \(s\);) show
0 648.2 moveto
8 f0
( ) show
0 630.6 moveto
8 f0
(va_end\( marker \);) show
0 613 moveto
8 f0
( ) show
0 595.4 moveto
8 f0
(return TRUE;) show
0 577.8 moveto
8 f0
(}) show
0 560.2 moveto
8 f0
( ) show
0 542.6 moveto
8 f0
(BOOL) show
0 525 moveto
8 f0
(Cfiebdc::pliego \() show
0 507.4 moveto
8 f0
(char *Pli, ...\)) show
0 489.8 moveto
8 f0
({) show
0 472.2 moveto
8 f0
(char *s = new char [MAX_TXT];) show
0 454.6 moveto
8 f0
(int len;) show
0 437 moveto
8 f0
(va_list marker;) show
0 419.4 moveto
8 f0
( ) show
0 401.8 moveto
8 f0
(va_start\( marker, Pli \);) show
0 384.2 moveto
8 f0
( ) show
0 366.6 moveto
8 f0
(vsprintf \(s,Pli,marker\);) show
0 349 moveto
8 f0
( ) show
0 331.4 moveto
8 f0
(len = strlen \(s\);) show
0 313.8 moveto
8 f0
(pli = new char[len+1];) show
0 296.2 moveto
8 f0
(strcpy \(pli, s\);) show
0 278.6 moveto
8 f0
(delete[] \(s\);) show
0 261 moveto
8 f0
( ) show
0 243.4 moveto
8 f0
(va_end\( marker \);) show
0 225.8 moveto
8 f0
( ) show
0 208.2 moveto
8 f0
(return TRUE;) show
0 190.6 moveto
8 f0
(}) show
0 173 moveto
8 f0
( ) show
0 155.4 moveto
8 f0
(BOOL) show
0 137.8 moveto
8 f0
(Cfiebdc::claves \() show
0 120.2 moveto
8 f0
(char *Cla, ...\)) show
0 102.6 moveto
8 f0
({) show
0 85 moveto
8 f0
(char *s = new char [MAX_TXT];) show
pagelevel restore
showpage
%%Page: 76 76
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(int len;) show
0 736.2 moveto
8 f0
(va_list marker;) show
0 718.6 moveto
8 f0
( ) show
0 701 moveto
8 f0
(va_start\( marker, Cla \);) show
0 683.4 moveto
8 f0
( ) show
0 665.8 moveto
8 f0
(vsprintf \(s,Cla,marker\);) show
0 648.2 moveto
8 f0
( ) show
0 630.6 moveto
8 f0
(len = strlen \(s\);) show
0 613 moveto
8 f0
(pli = new char[len+1];) show
0 595.4 moveto
8 f0
(strcpy \(cla, s\);) show
0 577.8 moveto
8 f0
(delete[] \(s\);) show
0 560.2 moveto
8 f0
( ) show
0 542.6 moveto
8 f0
(va_end\( marker \);) show
0 525 moveto
8 f0
( ) show
0 507.4 moveto
8 f0
(return TRUE;) show
0 489.8 moveto
8 f0
(}) show
0 472.2 moveto
8 f0
( ) show
0 454.6 moveto
8 f0
(BOOL) show
0 437 moveto
8 f0
(Cfiebdc::comentario \() show
0 419.4 moveto
8 f0
(char *Com, ...\)) show
0 401.8 moveto
8 f0
({) show
0 384.2 moveto
8 f0
(char *s = new char [MAX_TXT];) show
0 366.6 moveto
8 f0
(int len;) show
0 349 moveto
8 f0
(va_list marker;) show
0 331.4 moveto
8 f0
( ) show
0 313.8 moveto
8 f0
(va_start\( marker, Com \);) show
0 296.2 moveto
8 f0
( ) show
0 278.6 moveto
8 f0
(vsprintf \(s,Com,marker\);) show
0 261 moveto
8 f0
( ) show
0 243.4 moveto
8 f0
(len = strlen \(s\);) show
0 225.8 moveto
8 f0
(pli = new char[len+1];) show
0 208.2 moveto
8 f0
(strcpy \(com, s\);) show
0 190.6 moveto
8 f0
(delete[] \(s\);) show
0 173 moveto
8 f0
( ) show
0 155.4 moveto
8 f0
(va_end\( marker \);) show
0 137.8 moveto
8 f0
( ) show
0 120.2 moveto
8 f0
(return TRUE;) show
0 102.6 moveto
8 f0
(}) show
0 85 moveto
8 f0
( ) show
pagelevel restore
showpage
%%Page: 77 77
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(BOOL) show
0 736.2 moveto
8 f0
(Cfiebdc::error \() show
0 718.6 moveto
8 f0
(char *Err, ...\)) show
0 701 moveto
8 f0
({) show
0 683.4 moveto
8 f0
(char *s = new char [MAX_TXT];) show
0 665.8 moveto
8 f0
(int len;) show
0 648.2 moveto
8 f0
(va_list marker;) show
0 630.6 moveto
8 f0
( ) show
0 613 moveto
8 f0
(va_start\( marker, Err \);) show
0 595.4 moveto
8 f0
( ) show
0 577.8 moveto
8 f0
(vsprintf \(s,Err,marker\);) show
0 560.2 moveto
8 f0
( ) show
0 542.6 moveto
8 f0
(len = strlen \(s\);) show
0 525 moveto
8 f0
(err = new char[len+1];) show
0 507.4 moveto
8 f0
(strcpy \(err, s\);) show
0 489.8 moveto
8 f0
(delete[] \(s\);) show
0 472.2 moveto
8 f0
( ) show
0 454.6 moveto
8 f0
(va_end\( marker \);) show
0 437 moveto
8 f0
( ) show
0 419.4 moveto
8 f0
(cod_error \(BDCERR_BASE_DATOS\);) show
0 401.8 moveto
8 f0
(return FALSE;) show
0 384.2 moveto
8 f0
(}) show
0 366.6 moveto
8 f0
( ) show
0 349 moveto
8 f0
(long) show
0 331.4 moveto
8 f0
(Cfiebdc::lee_opcion \() show
0 313.8 moveto
8 f0
(long Par\)) show
0 296.2 moveto
8 f0
({) show
0 278.6 moveto
8 f0
(if \(Par>=parnum\) {) show
0 261 moveto
8 f0
(cod_error \(BDCERR_PARAMETRO\);) show
0 243.4 moveto
8 f0
(return -1;) show
0 225.8 moveto
8 f0
(}) show
0 208.2 moveto
8 f0
(return opc[Par];) show
0 190.6 moveto
8 f0
(}) show
0 173 moveto
8 f0
( ) show
0 155.4 moveto
8 f0
(char) show
0 137.8 moveto
8 f0
(*Cfiebdc::lee_rotulo \() show
0 120.2 moveto
8 f0
(long Par\)) show
0 102.6 moveto
8 f0
({) show
0 85 moveto
8 f0
(if \(Par>=parnum || opc[Par]>=opcnum[Par]\) {) show
pagelevel restore
showpage
%%Page: 78 78
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(cod_error \(BDCERR_PARAMETRO\);) show
0 736.2 moveto
8 f0
(return NULL;) show
0 718.6 moveto
8 f0
(}) show
0 701 moveto
8 f0
(return opcrot[Par][opc[Par]];) show
0 683.4 moveto
8 f0
(}) show
0 665.8 moveto
8 f0
( ) show
0 648.2 moveto
8 f0
(BOOL) show
0 630.6 moveto
8 f0
(Cfiebdc::codigo \() show
0 613 moveto
8 f0
(char *Cod, ...\)) show
0 595.4 moveto
8 f0
({) show
0 577.8 moveto
8 f0
(char *s = new char [MAX_TXT];) show
0 560.2 moveto
8 f0
(int i,len;) show
0 542.6 moveto
8 f0
(va_list marker;) show
0 525 moveto
8 f0
( ) show
0 507.4 moveto
8 f0
(va_start\( marker, Cod \);) show
0 489.8 moveto
8 f0
( ) show
0 472.2 moveto
8 f0
(vsprintf \(s,Cod,marker\);) show
0 454.6 moveto
8 f0
( ) show
0 437 moveto
8 f0
(len = strlen \(s\);) show
0 419.4 moveto
8 f0
(for \(i=0; i<len; i++\)) show
0 401.8 moveto
8 f0
(if \(s[i] == '$'\) break;) show
0 384.2 moveto
8 f0
( ) show
0 366.6 moveto
8 f0
(if \(codfam\) delete[] codfam;) show
0 349 moveto
8 f0
(if \(i<len\) {) show
0 331.4 moveto
8 f0
(codfam = new char[len+1];) show
0 313.8 moveto
8 f0
(strcpy \(codfam, s\);) show
0 296.2 moveto
8 f0
(} else {) show
0 278.6 moveto
8 f0
(codfam = new char[len+2];) show
0 261 moveto
8 f0
(sprintf \(codfam, "%s%c", s, '$'\);) show
0 243.4 moveto
8 f0
(}) show
0 225.8 moveto
8 f0
(delete[] s;) show
0 208.2 moveto
8 f0
( ) show
0 190.6 moveto
8 f0
(va_end\( marker \);) show
0 173 moveto
8 f0
( ) show
0 155.4 moveto
8 f0
(if \(status==ST_DERIVADO\)) show
0 137.8 moveto
8 f0
(return subcodigo\(\);) show
0 120.2 moveto
8 f0
(return TRUE;) show
0 102.6 moveto
8 f0
(}) show
0 85 moveto
8 f0
( ) show
pagelevel restore
showpage
%%Page: 79 79
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(BOOL) show
0 736.2 moveto
8 f0
(Cfiebdc::opciones \() show
0 718.6 moveto
8 f0
(long *Opc \)) show
0 701 moveto
8 f0
({) show
0 683.4 moveto
8 f0
(int i;) show
0 665.8 moveto
8 f0
(BOOL ret=TRUE;) show
0 648.2 moveto
8 f0
( ) show
0 630.6 moveto
8 f0
(for \(i=0; i<parnum; i++\) {) show
0 613 moveto
8 f0
(if \(Opc[i]<0 || Opc[i]>=opcnum[i]\) {) show
0 595.4 moveto
8 f0
(cod_error \(BDCERR_OPCION\);) show
0 577.8 moveto
8 f0
(opc[i] = 0;) show
0 560.2 moveto
8 f0
(ret=FALSE;) show
0 542.6 moveto
8 f0
(} else {) show
0 525 moveto
8 f0
(opc[i] = Opc[i];) show
0 507.4 moveto
8 f0
(}) show
0 489.8 moveto
8 f0
(}) show
0 472.2 moveto
8 f0
(return ret;) show
0 454.6 moveto
8 f0
(}) show
0 437 moveto
8 f0
( ) show
0 419.4 moveto
8 f0
(BOOL) show
0 401.8 moveto
8 f0
(Cfiebdc::sinonimo \() show
0 384.2 moveto
8 f0
(char *Subcod,) show
0 366.6 moveto
8 f0
(char *Codsin \)) show
0 349 moveto
8 f0
({) show
0 331.4 moveto
8 f0
(char **Sin[2];) show
0 313.8 moveto
8 f0
(int i,j,len1,len2;) show
0 296.2 moveto
8 f0
( ) show
0 278.6 moveto
8 f0
(len1 = strlen \(Subcod\);) show
0 261 moveto
8 f0
(len2 = strlen \(Codsin\);) show
0 243.4 moveto
8 f0
( ) show
0 225.8 moveto
8 f0
(if \(!len1 || !len2\) return FALSE;) show
0 208.2 moveto
8 f0
( ) show
0 190.6 moveto
8 f0
(for \(i=0; i<2; i++\) {) show
0 173 moveto
8 f0
(Sin[i] = new char *[sinnum+1];) show
0 155.4 moveto
8 f0
(for \(j=0; j<sinnum; j++\) {) show
0 137.8 moveto
8 f0
(Sin[i][j] = codsin[i][j];) show
0 120.2 moveto
8 f0
(}) show
0 102.6 moveto
8 f0
(if \(codsin[i]\) delete[] codsin[i];) show
0 85 moveto
8 f0
(}) show
pagelevel restore
showpage
%%Page: 80 80
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(Sin[0][sinnum] = new char [len1+1];) show
0 736.2 moveto
8 f0
(Sin[1][sinnum] = new char [len2+1];) show
0 718.6 moveto
8 f0
(strcpy \(Sin[0][sinnum], Subcod\);) show
0 701 moveto
8 f0
(strcpy \(Sin[1][sinnum], Codsin\);) show
0 683.4 moveto
8 f0
( ) show
0 665.8 moveto
8 f0
(codsin[0]=Sin[0];) show
0 648.2 moveto
8 f0
(codsin[1]=Sin[1];) show
0 630.6 moveto
8 f0
( ) show
0 613 moveto
8 f0
(sinnum++;) show
0 595.4 moveto
8 f0
( ) show
0 577.8 moveto
8 f0
(return TRUE;) show
0 560.2 moveto
8 f0
(}) show
0 542.6 moveto
8 f0
( ) show
0 525 moveto
8 f0
(char) show
0 507.4 moveto
8 f0
(*Cfiebdc::lee_rot_par \() show
0 489.8 moveto
8 f0
(long id_par\)) show
0 472.2 moveto
8 f0
({) show
0 454.6 moveto
8 f0
(if \(id_par >= parnum || !parrot[id_par]\) {) show
0 437 moveto
8 f0
(cod_error \(BDCERR_PARAMETRO\);) show
0 419.4 moveto
8 f0
(return "";) show
0 401.8 moveto
8 f0
(}) show
0 384.2 moveto
8 f0
(else) show
0 366.6 moveto
8 f0
(return parrot[id_par];) show
0 349 moveto
8 f0
(}) show
0 331.4 moveto
8 f0
( ) show
0 313.8 moveto
8 f0
(char) show
0 296.2 moveto
8 f0
(*Cfiebdc::lee_rot_opc) show
0 278.6 moveto
8 f0
(\(long id_par,) show
0 261 moveto
8 f0
(long id_opc\) {) show
0 243.4 moveto
8 f0
(if \(id_par >= parnum\) {) show
0 225.8 moveto
8 f0
(cod_error \(BDCERR_PARAMETRO\);) show
0 208.2 moveto
8 f0
(return NULL;) show
0 190.6 moveto
8 f0
(} else if \(id_opc >= opcnum[id_par] || !opcrot[id_par] || !opcrot[id_par][id_opc]\) {) show
0 173 moveto
8 f0
(cod_error \(BDCERR_OPCION\);) show
0 155.4 moveto
8 f0
(return NULL;) show
0 137.8 moveto
8 f0
(} else) show
0 120.2 moveto
8 f0
(return opcrot[id_par][id_opc];) show
0 102.6 moveto
8 f0
(}) show
0 85 moveto
8 f0
( ) show
pagelevel restore
showpage
%%Page: 81 81
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(char) show
0 736.2 moveto
8 f0
(*Cfiebdc::lee_cod_des \() show
0 718.6 moveto
8 f0
(long id_des \)) show
0 701 moveto
8 f0
({) show
0 683.4 moveto
8 f0
(if \(id_des >= desnum || !descod[id_des]\) {) show
0 665.8 moveto
8 f0
(cod_error \(BDCERR_DESCOMPOSICION\);) show
0 648.2 moveto
8 f0
(return NULL;) show
0 630.6 moveto
8 f0
(} else) show
0 613 moveto
8 f0
(return descod[id_des];) show
0 595.4 moveto
8 f0
(}) show
0 577.8 moveto
8 f0
( ) show
0 560.2 moveto
8 f0
(double) show
0 542.6 moveto
8 f0
(Cfiebdc::lee_ren_des \() show
0 525 moveto
8 f0
(long id_des \)) show
0 507.4 moveto
8 f0
({) show
0 489.8 moveto
8 f0
(if \(id_des >= desnum\) {) show
0 472.2 moveto
8 f0
(cod_error \(BDCERR_DESCOMPOSICION\);) show
0 454.6 moveto
8 f0
(return -1.0;) show
0 437 moveto
8 f0
(} else) show
0 419.4 moveto
8 f0
(return desren[id_des];) show
0 401.8 moveto
8 f0
(}) show
0 384.2 moveto
8 f0
( ) show
0 366.6 moveto
8 f0
(char) show
0 349 moveto
8 f0
(*Cfiebdc::lee_codigo \(void\) {) show
0 331.4 moveto
8 f0
(if \(codder\)) show
0 313.8 moveto
8 f0
(return codder;) show
0 296.2 moveto
8 f0
(else if \(codfam\)) show
0 278.6 moveto
8 f0
(return codfam;) show
0 261 moveto
8 f0
(else {) show
0 243.4 moveto
8 f0
(cod_error \(BDCERR_SIN_CODIGO\);) show
0 225.8 moveto
8 f0
(return NULL;) show
0 208.2 moveto
8 f0
(}) show
0 190.6 moveto
8 f0
(}) show
0 173 moveto
8 f0
( ) show
0 155.4 moveto
8 f0
(char) show
0 137.8 moveto
8 f0
(*Cfiebdc::lee_resumen \(void\) {) show
0 120.2 moveto
8 f0
(if \(res\) return res;) show
0 102.6 moveto
8 f0
(else return "";) show
0 85 moveto
8 f0
(}) show
pagelevel restore
showpage
%%Page: 82 82
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
( ) show
0 736.2 moveto
8 f0
(char) show
0 718.6 moveto
8 f0
(*Cfiebdc::lee_texto \(void\) {) show
0 701 moveto
8 f0
(if \(tex\) return tex;) show
0 683.4 moveto
8 f0
(else return "";) show
0 665.8 moveto
8 f0
(}) show
0 648.2 moveto
8 f0
(char) show
0 630.6 moveto
8 f0
(*Cfiebdc::lee_pliego \(void\) {) show
0 613 moveto
8 f0
(if \(pli\) return pli;) show
0 595.4 moveto
8 f0
(else return "";) show
0 577.8 moveto
8 f0
(}) show
0 560.2 moveto
8 f0
(char) show
0 542.6 moveto
8 f0
(*Cfiebdc::lee_claves \(void\) {) show
0 525 moveto
8 f0
(if \(pli\) return cla;) show
0 507.4 moveto
8 f0
(else return "";) show
0 489.8 moveto
8 f0
(}) show
0 472.2 moveto
8 f0
(char) show
0 454.6 moveto
8 f0
(*Cfiebdc::lee_comentario \(void\) {) show
0 437 moveto
8 f0
(if \(pli\) return com;) show
0 419.4 moveto
8 f0
(else return "";) show
0 401.8 moveto
8 f0
(}) show
0 384.2 moveto
8 f0
( ) show
0 366.6 moveto
8 f0
(char) show
0 349 moveto
8 f0
(*Cfiebdc::lee_error \(void\) {) show
0 331.4 moveto
8 f0
(if \(err\) return err;) show
0 313.8 moveto
8 f0
(else return "";) show
0 296.2 moveto
8 f0
(}) show
0 278.6 moveto
8 f0
( ) show
0 261 moveto
8 f0
(BOOL) show
0 243.4 moveto
8 f0
(Cfiebdc::subcodigo \(void\) {) show
0 225.8 moveto
8 f0
(int i, az='z'-'a', AZ='Z'-'A';) show
0 208.2 moveto
8 f0
(BOOL ret=TRUE;) show
0 190.6 moveto
8 f0
(char *s = new char [MAX_TXT];) show
0 173 moveto
8 f0
(// Obtenci\363n del subCODIGO autom\341tico) show
0 155.4 moveto
8 f0
(subcod = new char [parnum+1];) show
0 137.8 moveto
8 f0
(for \(i=0; i<parnum; i++\) {) show
0 120.2 moveto
8 f0
(if \(opc[i]>=0 && opc[i]<=0+az\)) show
0 102.6 moveto
8 f0
(subcod[i]=opc[i]+'a';) show
0 85 moveto
8 f0
(else if \(opc[i]>0+az && opc[i]<=0+az+AZ\)) show
pagelevel restore
showpage
%%Page: 83 83
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(subcod[i]=opc[i]-az+'A';) show
0 736.2 moveto
8 f0
(else if \(opc[i]>0+az+AZ && opc[i]<=9+az+AZ\)) show
0 718.6 moveto
8 f0
(subcod[i]=opc[i]-az-AZ;) show
0 701 moveto
8 f0
(else {) show
0 683.4 moveto
8 f0
(subcod[i]='_';) show
0 665.8 moveto
8 f0
(cod_error \(BDCERR_MAX_OPCIONES\);) show
0 648.2 moveto
8 f0
(ret = FALSE;) show
0 630.6 moveto
8 f0
(}) show
0 613 moveto
8 f0
(}) show
0 595.4 moveto
8 f0
(subcod[i]='\\0';) show
0 577.8 moveto
8 f0
(// Comprobar lista de sin\363nimos) show
0 560.2 moveto
8 f0
(for \(i=0; i<sinnum; i++\) {) show
0 542.6 moveto
8 f0
(if \(strcmp\(subcod,codsin[0][i]\) == 0\) {) show
0 525 moveto
8 f0
(delete [] subcod;) show
0 507.4 moveto
8 f0
(subcod = new char [strlen \(codsin[1][i]\)+1];) show
0 489.8 moveto
8 f0
(strcpy \(subcod, codsin[1][i]\);) show
0 472.2 moveto
8 f0
(}) show
0 454.6 moveto
8 f0
(}) show
0 437 moveto
8 f0
(// Rellenar codfam y codder) show
0 419.4 moveto
8 f0
(strcpy \(s, codfam\);) show
0 401.8 moveto
8 f0
(for \(i=0; i<\(int\)strlen\(codfam\); i++\)) show
0 384.2 moveto
8 f0
(if \(codfam[i]=='$'\) break;) show
0 366.6 moveto
8 f0
(strcpy \(s+i, subcod\);) show
0 349 moveto
8 f0
( ) show
0 331.4 moveto
8 f0
(codder = new char [strlen\(s\)+1];) show
0 313.8 moveto
8 f0
(strcpy \(codder, s\);) show
0 296.2 moveto
8 f0
(return ret;) show
0 278.6 moveto
8 f0
(}) show
0 261 moveto
8 f0
( ) show
0 243.4 moveto
8 f0
(BOOL) show
0 225.8 moveto
8 f0
(Cfiebdc::lee_opciones \() show
0 208.2 moveto
8 f0
(char *Cod, // parte variable del CODIGO) show
0 190.6 moveto
8 f0
(long *Opc \) // opciones a devolver) show
0 173 moveto
8 f0
({) show
0 155.4 moveto
8 f0
(int i, len, az='z'-'a', AZ='Z'-'A';) show
0 137.8 moveto
8 f0
(char *s;) show
0 120.2 moveto
8 f0
(BOOL ret=TRUE;) show
0 102.6 moveto
8 f0
( ) show
0 85 moveto
8 f0
(for \(i=0; i<sinnum; i++\) {) show
pagelevel restore
showpage
%%Page: 84 84
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(if \(strcmp\(Cod, codsin[1][i]\)==0\) {) show
0 736.2 moveto
8 f0
(len = strlen \(codsin[0][i]\);) show
0 718.6 moveto
8 f0
(s = codsin[0][i];) show
0 701 moveto
8 f0
(break;) show
0 683.4 moveto
8 f0
(}) show
0 665.8 moveto
8 f0
(}) show
0 648.2 moveto
8 f0
(if \(i==sinnum\) {) show
0 630.6 moveto
8 f0
(s = Cod;) show
0 613 moveto
8 f0
(len = strlen \(s\);) show
0 595.4 moveto
8 f0
(}) show
0 577.8 moveto
8 f0
( ) show
0 560.2 moveto
8 f0
(for \(i=0; i<len; i++\) {) show
0 542.6 moveto
8 f0
(if \(s[i] >= 'a' && s[i] <= 'z'\)) show
0 525 moveto
8 f0
(Opc[i] = s[i]-'a';) show
0 507.4 moveto
8 f0
(else if \(s[i] >= 'A' && s[i] <= 'Z'\)) show
0 489.8 moveto
8 f0
(Opc[i] = s[i]-'A' + az;) show
0 472.2 moveto
8 f0
(else if \(s[i] >= '0' && s[i] <= '9'\)) show
0 454.6 moveto
8 f0
(Opc[i] = s[i]-'0' + az + AZ;) show
0 437 moveto
8 f0
(else {) show
0 419.4 moveto
8 f0
(// excedida capacidad) show
0 401.8 moveto
8 f0
(Opc[i] = az + AZ + 11;) show
0 384.2 moveto
8 f0
(cod_error \(BDCERR_MAX_OPCIONES\);) show
0 366.6 moveto
8 f0
(ret = FALSE;) show
0 349 moveto
8 f0
(}) show
0 331.4 moveto
8 f0
(}) show
0 313.8 moveto
8 f0
(return ret;) show
0 296.2 moveto
8 f0
(}) show
0 276.8 moveto
10 f0
( ) show
0 254.8 moveto
10 f0
( ) show
0 232.8 moveto
10 f0
(1.2.4. Archivo ?base.cpp?) show
0 212.6 moveto
8 f0
( ) show
0 195 moveto
8 f0
(#define STRICT) show
0 177.4 moveto
8 f0
(#include <windows.h>) show
0 159.8 moveto
8 f0
(#include <stdio.h>) show
0 142.2 moveto
8 f0
(#include <stdarg.h>) show
0 124.6 moveto
8 f0
(#include <math.h>) show
0 107 moveto
8 f0
( ) show
0 89.4 moveto
8 f0
(#include "Base.h") show
pagelevel restore
showpage
%%Page: 85 85
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
( ) show
0 736.2 moveto
8 f0
(//////////////////////////////////////////////////////////////////////////////) show
0 718.6 moveto
8 f0
(// Concepto Global) show
0 701 moveto
8 f0
(//) show
0 683.4 moveto
8 f0
( ) show
0 665.8 moveto
8 f0
(short Global \(Cfiebdc &par, short operacion\) {) show
0 648.2 moveto
8 f0
(INI \(operacion\);) show
0 630.6 moveto
8 f0
( ) show
0 613 moveto
8 f0
(switch \(operacion\) {) show
0 595.4 moveto
8 f0
(case LEE:) show
0 577.8 moveto
8 f0
(PAR \("\301MBITO","Espa\361a","Madrid","Barcelona","Valencia","Bilbao","Sevilla",""\);) show
0 560.2 moveto
8 f0
(return TRUE;) show
0 542.6 moveto
8 f0
(}) show
0 525 moveto
8 f0
(return TRUE;) show
0 507.4 moveto
8 f0
(}) show
0 489.8 moveto
8 f0
( ) show
0 472.2 moveto
8 f0
(//////////////////////////////////////////////////////////////////////////////) show
0 454.6 moveto
8 f0
(// Conceptos) show
0 437 moveto
8 f0
(//) show
0 419.4 moveto
8 f0
( ) show
0 401.8 moveto
8 f0
(short fABPH_1 \(Cfiebdc &par, short operacion\) {) show
0 384.2 moveto
8 f0
( ) show
0 366.6 moveto
8 f0
(INI \(operacion\);) show
0 349 moveto
8 f0
(COD \("ABPH.1$"\);) show
0 331.4 moveto
8 f0
( ) show
0 313.8 moveto
8 f0
(switch \(operacion\) {) show
0 296.2 moveto
8 f0
( ) show
0 278.6 moveto
8 f0
(case LEE:) show
0 261 moveto
8 f0
(PAR \("RESISTENCIA", "H-50", "H-100", "H-125", "H-150", "H-175", ""\);) show
0 243.4 moveto
8 f0
(PAR \("CONSISTENCIA", "pl\341stica", "blanda", ""\);) show
0 225.8 moveto
8 f0
(PAR \("Tmax", "18", "38", "78", ""\);) show
0 208.2 moveto
8 f0
(return TRUE;) show
0 190.6 moveto
8 f0
( ) show
0 173 moveto
8 f0
(case CALCULA:) show
0 155.4 moveto
8 f0
(case VALIDA:) show
0 137.8 moveto
8 f0
(// pl\341stica H50 H100 H125 H150 H175) show
0 120.2 moveto
8 f0
(double T[2][3][5] ={ .180, .255, .290, .330, .365, //18) show
0 102.6 moveto
8 f0
(.160, .225, .260, .290, .325, //38) show
0 85 moveto
8 f0
(.140, .200, .225, .255, .285, //78) show
pagelevel restore
showpage
%%Page: 86 86
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(// blanda) show
0 736.2 moveto
8 f0
(.210, .290, .330, .375, .000,) show
0 718.6 moveto
8 f0
(.185, .260, .300, .335, .375,) show
0 701 moveto
8 f0
(.165, .235, .265, .300, .335 };) show
0 683.4 moveto
8 f0
( ) show
0 665.8 moveto
8 f0
(if \(!T[B][C][A]\) return ERR \("Combinaci\363n no permitida"\);) show
0 648.2 moveto
8 f0
(if \(operacion == VALIDA\) return TRUE;) show
0 630.6 moveto
8 f0
( ) show
0 613 moveto
8 f0
(double U[2][3]= { .180, .160, .140,) show
0 595.4 moveto
8 f0
(.205, .185, .165 };) show
0 577.8 moveto
8 f0
(double V[2][3][5]= { .695, .675, .665, .650, .640,) show
0 560.2 moveto
8 f0
(.720, .700, .690, .680, .670,) show
0 542.6 moveto
8 f0
(.740, .725, .720, .710, .700,) show
0 525 moveto
8 f0
(.665, .640, .630, .615, .0,) show
0 507.4 moveto
8 f0
(.690, .670, .665, .645, .635,) show
0 489.8 moveto
8 f0
(.715, .695, .685, .775, .665 };) show
0 472.2 moveto
8 f0
(DES \(T[B][C][A], "SBAC.5ccaa"\); // Cemento) show
0 454.6 moveto
8 f0
(DES \(U[B][C], "SBAA.1a"\); // Agua) show
0 437 moveto
8 f0
(DES \(V[B][C][A], "SBRA.5ab"\); // Arena) show
0 419.4 moveto
8 f0
(DES \(V[B][C][A]*2, "SBRG.1%c", 'a'+C\); // Grava) show
0 401.8 moveto
8 f0
(DES \(1, "MAMA19a"\); // Hormigonera) show
0 384.2 moveto
8 f0
(DES \(2, "MOOC13a"\); // Pe\363n ordinario) show
0 366.6 moveto
8 f0
(RES \("%s C/%s Tmax=%s mm", ROTA, ROTB, ROTC\);) show
0 349 moveto
8 f0
(int G[5]= { 50, 100, 125, 150, 175 };) show
0 331.4 moveto
8 f0
(TEX \( "Hormig\363n %s, resistencia caracter\355stica %d Kg/cm2, ") show
0 313.8 moveto
8 f0
("consistencia %s, cemento tipo II-Z/35-A, arena sil\355cea ") show
0 296.2 moveto
8 f0
("\(0/6\) y grava sil\355cea rodada, tama\361o m\341ximo %s mm, ") show
0 278.6 moveto
8 f0
("confeccionado en obra con hormigonera de 300 l de capacidad. ") show
0 261 moveto
8 f0
("Seg\372n RC-93 y EH-91.", ROTA, G[A], ROTB, ROTC \);) show
0 243.4 moveto
8 f0
( ) show
0 225.8 moveto
8 f0
(return TRUE;) show
0 208.2 moveto
8 f0
(}) show
0 190.6 moveto
8 f0
( ) show
0 173 moveto
8 f0
(return TRUE;) show
0 155.4 moveto
8 f0
(}) show
0 137.8 moveto
8 f0
( ) show
0 120.2 moveto
8 f0
(short fSBRG_1 \(Cfiebdc &par, short operacion\) {) show
0 102.6 moveto
8 f0
(INI \(operacion\);) show
0 85 moveto
8 f0
(COD \("SBRG.1$"\);) show
pagelevel restore
showpage
%%Page: 87 87
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
( ) show
0 736.2 moveto
8 f0
(switch \(operacion\) {) show
0 718.6 moveto
8 f0
( ) show
0 701 moveto
8 f0
(case LEE:) show
0 683.4 moveto
8 f0
(PAR \("Tmax", "18", "38", "78", ""\);) show
0 665.8 moveto
8 f0
(// Sin\363nimos) show
0 648.2 moveto
8 f0
(SIN \("a", "_18"\);) show
0 630.6 moveto
8 f0
(SIN \("b", "_38"\);) show
0 613 moveto
8 f0
(SIN \("c", "_78"\);) show
0 595.4 moveto
8 f0
(return TRUE;) show
0 577.8 moveto
8 f0
( ) show
0 560.2 moveto
8 f0
(case CALCULA:) show
0 542.6 moveto
8 f0
(// \301MBITO \(Primer par\341metro global. Par\341metro 'O') show
0 525 moveto
8 f0
(// Espa\361a Madrid Barcelona Valencia Bilbao Sevilla) show
0 507.4 moveto
8 f0
(double I [] = { 123.5, 135.1, 130.0, 129.8, 127.8, 125.9 };) show
0 489.8 moveto
8 f0
( ) show
0 472.2 moveto
8 f0
(PRE \(I[O]+0.25*A\);) show
0 454.6 moveto
8 f0
(RES \("Grava de Tm\341x. %s", ROTA\);) show
0 437 moveto
8 f0
( ) show
0 419.4 moveto
8 f0
(return TRUE;) show
0 401.8 moveto
8 f0
(}) show
0 384.2 moveto
8 f0
( ) show
0 366.6 moveto
8 f0
(return TRUE;) show
0 349 moveto
8 f0
(}) show
0 331.4 moveto
8 f0
( ) show
0 313.8 moveto
8 f0
(short fEADR_3 \(Cfiebdc &par, short operacion\) {) show
0 296.2 moveto
8 f0
(INI \(operacion\);) show
0 278.6 moveto
8 f0
(COD \("EADR.3$"\);) show
0 261 moveto
8 f0
(switch \(operacion\) {) show
0 243.4 moveto
8 f0
( ) show
0 225.8 moveto
8 f0
(case LEE:) show
0 208.2 moveto
8 f0
(PAR \("MATERIAL","yeso","cemento","cal","cal y cemento",""\);) show
0 190.6 moveto
8 f0
(PAR \("PARAMENTOS","verticales","horizontales",""\);) show
0 173 moveto
8 f0
(break;) show
0 155.4 moveto
8 f0
(case CALCULA:) show
0 137.8 moveto
8 f0
(char *cF;) show
0 120.2 moveto
8 f0
(// $A yeso cemento cal cal y cemento $B) show
0 102.6 moveto
8 f0
(double) show
0 85 moveto
8 f0
(pdT[2][4]= {{ 0.350, 0.500, 0.400, 0.450}, // vertical) show
pagelevel restore
showpage
%%Page: 88 88
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
({ 0.550, 0.800, 0.600, 0.650}}; // horizontal) show
0 736.2 moveto
8 f0
( ) show
0 718.6 moveto
8 f0
(DES \(pdT[B][A], "MOOA.1d"\); // pe\363n ordinario) show
0 701 moveto
8 f0
(DES \(0.02, "%%"\); // maux) show
0 683.4 moveto
8 f0
( ) show
0 665.8 moveto
8 f0
(if \(A==0\) cF = "guarnecido";) show
0 648.2 moveto
8 f0
(else cF = "enfoscado";) show
0 630.6 moveto
8 f0
(char *pcG[4]= {"yeso", "cto", "cal", "cal y cto"};) show
0 613 moveto
8 f0
(char *pcH[2]= {"vert", "hrz"};) show
0 595.4 moveto
8 f0
( ) show
0 577.8 moveto
8 f0
(RES \("Picado %s param %s",pcG[A],pcH[B]\);) show
0 560.2 moveto
8 f0
(TEX \("Picado de %s de %s en paramentos %s, retirada de escombros y carga, ") show
0 542.6 moveto
8 f0
("sin transporte a vertedero.", cF, ROTA, ROTB\);) show
0 525 moveto
8 f0
(}) show
0 507.4 moveto
8 f0
(return TRUE;) show
0 489.8 moveto
8 f0
(}) show
0 472.2 moveto
8 f0
(short fFIN \(Cfiebdc &par, short operacion\) {) show
0 454.6 moveto
8 f0
(return FALSE;) show
0 437 moveto
8 f0
(}) show
0 419.4 moveto
8 f0
( ) show
0 401.8 moveto
8 f0
(//////////////////////////////////////////////////////////////////////////////) show
0 384.2 moveto
8 f0
(// Lista de Conceptos) show
0 366.6 moveto
8 f0
(//) show
0 349 moveto
8 f0
( ) show
0 331.4 moveto
8 f0
(PRECIO precios[] = {fABPH_1, fSBRG_1, fEADR_3, fFIN};) show
0 313.8 moveto
8 f0
( ) show
0 294.4 moveto
10 f0
(1.2.5. Archivo ?base.def?) show
0 274.2 moveto
8 f0
( ) show
0 256.6 moveto
8 f0
(LIBRARY BASE) show
0 239 moveto
8 f0
(DESCRIPTION 'Formato Fiebdc-3/98. Ejemplo de Definiciones param\351tricas') show
0 221.4 moveto
8 f0
(CODE PRELOAD MOVEABLE DISCARDABLE) show
0 203.8 moveto
8 f0
(DATA PRELOAD SINGLE) show
0 186.2 moveto
8 f0
( ) show
0 168.6 moveto
8 f0
(HEAPSIZE 1024) show
0 151 moveto
8 f0
( ) show
0 133.4 moveto
8 f0
(EXPORTS) show
0 115.8 moveto
8 f0
(BdcCodificacion) show
0 98.2 moveto
8 f0
(BdcGloParNumero) show
0 80.6 moveto
8 f0
(BdcGloOpcNumero) show
pagelevel restore
showpage
%%Page: 89 89
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752 moveto
8 f0
(BdcGloParRotulo) show
0 734.4 moveto
8 f0
(BdcGloOpcRotulo) show
0 716.8 moveto
8 f0
(BdcGloCalcula) show
0 699.2 moveto
8 f0
(BdcGloError) show
0 681.6 moveto
8 f0
(BdcLee) show
0 664 moveto
8 f0
(BdcDecodifica) show
0 646.4 moveto
8 f0
(BdcParNumero) show
0 628.8 moveto
8 f0
(BdcOpcNumero) show
0 611.2 moveto
8 f0
(BdcParRotulo) show
0 593.6 moveto
8 f0
(BdcOpcRotulo) show
0 576 moveto
8 f0
(BdcComentario) show
0 558.4 moveto
8 f0
(BdcValida) show
0 540.8 moveto
8 f0
(BdcCalcula) show
0 523.2 moveto
8 f0
(BdcCierra) show
0 505.6 moveto
8 f0
(BdcDesNumero) show
0 488 moveto
8 f0
(BdcDesCodigo) show
0 470.4 moveto
8 f0
(BdcRendimiento) show
0 452.8 moveto
8 f0
(BdcPrecio) show
0 435.2 moveto
8 f0
(BdcCodigo) show
0 417.6 moveto
8 f0
(BdcResumen) show
0 400 moveto
8 f0
(BdcTexto) show
0 382.4 moveto
8 f0
(BdcPliego) show
0 364.8 moveto
8 f0
(BdcClaves) show
0 347.2 moveto
8 f0
(BdcError) show
0 329.6 moveto
8 f0
( ) show
0 308.4 moveto
12 f0
(2. APLICACION EJEMPLO: PROGRAMA.EXE) show
0 283.6 moveto
10 f0
( ) show
0 261.6 moveto
10 f0
( ) show
0 239.6 moveto
10 f0
(Esta sencilla aplicaci\363n, lee los conceptos que se incluyen en el propio fuente de la base BASE.DLL \(en una aplicaci\363n) show
0 228.6 moveto
10 f0
(real, los conceptos se definen en los registros ~P de base.bc3\), y escribe en el archivo 'SALIDA.TXT' los r\363tulos de) show
0 217.6 moveto
10 f0
(todos sus par\341metros as\355 como todos los datos de todas sus combinaciones param\351tricas.) show
0 195.6 moveto
10 f0
( ) show
0 173.6 moveto
10 f0
( ) show
0 149.8 moveto
12 f0
(2.1. Archivos necesarios para la CONSTRUCCION del programa ejemplo.) show
0 125 moveto
10 f0
( ) show
0 103 moveto
10 f0
(Este ejemplo est\341 preparado para compilarse con Microsoft Visual C++ VERSION 2.2 o posterior como aplicaci\363n) show
0 92 moveto
10 f0
(Windows 95 de 32 bits en modo consola. Sin apenas modificaciones, ser\355a posible compilarlo como aplicaci\363n de 16) show
0 81 moveto
10 f0
(bits o utilizar el compilador Borland C++.) show
pagelevel restore
showpage
%%Page: 90 90
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 748 moveto
10 f0
( ) show
0 726 moveto
10 f0
(Para construir la aplicaci\363n, son necesarios los siguientes archivos:) show
0 703.6 moveto
10 f1
( ) show
112 681.2 moveto
10 f0
(fiebdc.h Archivo que define el formato.) show
112 659.2 moveto
10 f0
(programa.h Declaraci\363n de variables y funciones.) show
112 637.2 moveto
10 f0
(program0.c Funciones auxiliares de apertura y cierre de la base de datos y tratamiento de) show
112 626.2 moveto
10 f0
(los mensajes de error.) show
112 604.2 moveto
10 f0
(programa.c Programa ejemplo.) show
0 582.2 moveto
10 f0
(2.1.1. Archivo ?programa.h?) show
0 562 moveto
8 f0
( ) show
0 544.4 moveto
8 f0
(#include "Fiebdc.h") show
0 526.8 moveto
8 f0
( ) show
0 509.2 moveto
8 f0
(#define CORRECTO 0) show
0 491.6 moveto
8 f0
(#define ERRONEO -1) show
0 474 moveto
8 f0
( ) show
0 456.4 moveto
8 f0
(BDCGLOPARNUMERO pGloParNumero;) show
0 438.8 moveto
8 f0
(BDCGLOOPCNUMERO pGloOpcNumero;) show
0 421.2 moveto
8 f0
(BDCGLOPARROTULO pGloParRotulo;) show
0 403.6 moveto
8 f0
(BDCGLOOPCROTULO pGloOpcRotulo;) show
0 386 moveto
8 f0
(BDCGLOCALCULA pGloCalcula;) show
0 368.4 moveto
8 f0
(BDCGLOERROR pGloError;) show
0 350.8 moveto
8 f0
( ) show
0 333.2 moveto
8 f0
(BDCLEE pLee;) show
0 315.6 moveto
8 f0
(BDCDECODIFICA pDecodifica;) show
0 298 moveto
8 f0
(BDCPARNUMERO pParNumero;) show
0 280.4 moveto
8 f0
(BDCOPCNUMERO pOpcNumero;) show
0 262.8 moveto
8 f0
(BDCPARROTULO pParRotulo;) show
0 245.2 moveto
8 f0
(BDCOPCROTULO pOpcRotulo;) show
0 227.6 moveto
8 f0
(BDCVALIDA pValida;) show
0 210 moveto
8 f0
(BDCCALCULA pCalcula;) show
0 192.4 moveto
8 f0
(BDCCIERRA pCierra;) show
0 174.8 moveto
8 f0
(BDCDESNUMERO pDesNumero;) show
0 157.2 moveto
8 f0
(BDCDESCODIGO pDesCodigo;) show
0 139.6 moveto
8 f0
(BDCRENDIMIENTO pRendimiento;) show
0 122 moveto
8 f0
(BDCPRECIO pPrecio;) show
0 104.4 moveto
8 f0
(BDCCODIGO pCodigo;) show
0 86.8 moveto
8 f0
(BDCRESUMEN pResumen;) show
pagelevel restore
showpage
%%Page: 91 91
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(BDCTEXTO pTexto;) show
0 736.2 moveto
8 f0
(BDCPLIEGO pPliego;) show
0 718.6 moveto
8 f0
(BDCCOMENTARIO pComentario;) show
0 701 moveto
8 f0
(BDCCLAVES pClaves;) show
0 683.4 moveto
8 f0
(BDCERROR pError;) show
0 665.8 moveto
8 f0
( ) show
0 648.2 moveto
8 f0
(BOOL AbreDll \(char *nDll, HINSTANCE *hDll, char **Err\);) show
0 630.6 moveto
8 f0
(BOOL CierraDll \(HMODULE hDll, char **Err\);) show
0 613 moveto
8 f0
(BOOL ChequeaError \(HANDLE Precio, FILE *f, BOOL EsGlobal\);) show
0 595.4 moveto
8 f0
( ) show
0 576 moveto
10 f0
( ) show
0 554 moveto
10 f0
(2.1.2. Archivo ?program0.c?) show
0 533.8 moveto
8 f0
( ) show
0 516.2 moveto
8 f0
(#define STRICT) show
0 498.6 moveto
8 f0
(#include <windows.h>) show
0 481 moveto
8 f0
(#include <stdio.h>) show
0 463.4 moveto
8 f0
(#include "programa.h") show
0 445.8 moveto
8 f0
( ) show
0 428.2 moveto
8 f0
(BOOL) show
0 410.6 moveto
8 f0
(AbreDll \() show
0 393 moveto
8 f0
(char *nDll,) show
0 375.4 moveto
8 f0
(HINSTANCE *hDll,) show
0 357.8 moveto
8 f0
(char **Err \)) show
0 340.2 moveto
8 f0
({) show
0 322.6 moveto
8 f0
(*hDll = LoadLibrary \(nDll\);) show
0 305 moveto
8 f0
(if \( ! \(*hDll\) \) {) show
0 287.4 moveto
8 f0
(*Err = "IMPOSIBLE ABRIR LA LIBRERIA DE LA BASE";) show
0 269.8 moveto
8 f0
(return FALSE;) show
0 252.2 moveto
8 f0
(}) show
0 234.6 moveto
8 f0
(if\( \(pGloParNumero = \(BDCGLOPARNUMERO\) GetProcAddress \(*hDll, "BdcGloParNumero"\)\) &&) show
0 217 moveto
8 f0
(\(pGloOpcNumero = \(BDCGLOOPCNUMERO\) GetProcAddress \(*hDll, "BdcGloOpcNumero"\)\) &&) show
0 199.4 moveto
8 f0
(\(pGloParRotulo = \(BDCGLOPARROTULO\) GetProcAddress \(*hDll, "BdcGloParRotulo"\)\) &&) show
0 181.8 moveto
8 f0
(\(pGloOpcRotulo = \(BDCGLOOPCROTULO\) GetProcAddress \(*hDll, "BdcGloOpcRotulo"\)\) &&) show
0 164.2 moveto
8 f0
(\(pGloCalcula = \(BDCGLOCALCULA\) GetProcAddress \(*hDll, "BdcGloCalcula"\)\) &&) show
0 146.6 moveto
8 f0
(\(pGloError = \(BDCGLOERROR\) GetProcAddress \(*hDll, "BdcGloError"\)\) &&) show
0 129 moveto
8 f0
(\(pLee = \(BDCLEE\) GetProcAddress \(*hDll, "BdcLee"\)\) &&) show
0 111.4 moveto
8 f0
(\(pDecodifica = \(BDCDECODIFICA\) GetProcAddress \(*hDll, "BdcDecodifica"\)\) &&) show
0 93.8 moveto
8 f0
(\(pParNumero = \(BDCPARNUMERO\) GetProcAddress \(*hDll, "BdcParNumero"\)\) &&) show
0 76.2 moveto
8 f0
(\(pOpcNumero = \(BDCOPCNUMERO\) GetProcAddress \(*hDll, "BdcOpcNumero"\)\) &&) show
pagelevel restore
showpage
%%Page: 92 92
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 747.6 moveto
8 f0
(\(pParRotulo = \(BDCPARROTULO\) GetProcAddress \(*hDll, "BdcParRotulo"\)\) &&) show
0 730 moveto
8 f0
(\(pOpcRotulo = \(BDCOPCROTULO\) GetProcAddress \(*hDll, "BdcOpcRotulo"\)\) &&) show
0 712.4 moveto
8 f0
(\(pValida = \(BDCVALIDA\) GetProcAddress \(*hDll, "BdcValida"\)\) &&) show
0 694.8 moveto
8 f0
(\(pCalcula = \(BDCCALCULA\) GetProcAddress \(*hDll, "BdcCalcula"\)\) &&) show
0 677.2 moveto
8 f0
(\(pCierra = \(BDCCIERRA\) GetProcAddress \(*hDll, "BdcCierra"\)\) &&) show
0 659.6 moveto
8 f0
(\(pDesNumero = \(BDCDESNUMERO\) GetProcAddress \(*hDll, "BdcDesNumero"\)\) &&) show
0 642 moveto
8 f0
(\(pDesCodigo = \(BDCDESCODIGO\) GetProcAddress \(*hDll, "BdcDesCodigo"\)\) &&) show
0 624.4 moveto
8 f0
(\(pRendimiento = \(BDCRENDIMIENTO\) GetProcAddress \(*hDll, "BdcRendimiento"\)\) &&) show
0 606.8 moveto
8 f0
(\(pPrecio = \(BDCPRECIO\) GetProcAddress \(*hDll, "BdcPrecio"\)\) &&) show
0 589.2 moveto
8 f0
(\(pCodigo = \(BDCCODIGO\) GetProcAddress \(*hDll, "BdcCodigo"\)\) &&) show
0 571.6 moveto
8 f0
(\(pResumen = \(BDCRESUMEN\) GetProcAddress \(*hDll, "BdcResumen"\)\) &&) show
0 554 moveto
8 f0
(\(pTexto = \(BDCTEXTO\) GetProcAddress \(*hDll, "BdcTexto"\)\) &&) show
0 536.4 moveto
8 f0
(\(pPliego = \(BDCPLIEGO\) GetProcAddress \(*hDll, "BdcPliego"\)\) &&) show
0 518.8 moveto
8 f0
(\(pComentario = \(BDCCOMENTARIO\) GetProcAddress \(*hDll, "BdcComentario"\)\) &&) show
0 501.2 moveto
8 f0
(\(pClaves = \(BDCCLAVES\) GetProcAddress \(*hDll, "BdcClaves"\)\) &&) show
0 483.6 moveto
8 f0
(\(pError = \(BDCERROR\) GetProcAddress \(*hDll, "BdcError"\)\) \) {) show
0 466 moveto
8 f0
( ) show
0 448.4 moveto
8 f0
(*Err = "";) show
0 430.8 moveto
8 f0
(return TRUE;) show
0 413.2 moveto
8 f0
( ) show
0 395.6 moveto
8 f0
(} else {) show
0 378 moveto
8 f0
(*Err = "FUNCION INEXISTENTE EN LA LIBRERIA";) show
0 360.4 moveto
8 f0
(return FALSE;) show
0 342.8 moveto
8 f0
(}) show
0 325.2 moveto
8 f0
(}) show
0 307.6 moveto
8 f0
( ) show
0 290 moveto
8 f0
(BOOL) show
0 272.4 moveto
8 f0
(CierraDll \() show
0 254.8 moveto
8 f0
(HMODULE hDll,) show
0 237.2 moveto
8 f0
(char **Err \)) show
0 219.6 moveto
8 f0
({) show
0 202 moveto
8 f0
(if \(hDll\) {) show
0 184.4 moveto
8 f0
(if \( !FreeLibrary \(hDll\) \) {) show
0 166.8 moveto
8 f0
(*Err = "ERROR AL CERRAR LA LIBRERIA";) show
0 149.2 moveto
8 f0
(return FALSE;) show
0 131.6 moveto
8 f0
(} else {) show
0 114 moveto
8 f0
(*Err = "";) show
0 96.4 moveto
8 f0
(return TRUE;) show
0 78.8 moveto
8 f0
(}) show
pagelevel restore
showpage
%%Page: 93 93
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 750.2 moveto
8 f0
(} else {) show
0 732.6 moveto
8 f0
(*Err = "NO HAY LIBRERIA QUE CERRAR";) show
0 715 moveto
8 f0
(return FALSE;) show
0 697.4 moveto
8 f0
(}) show
0 679.8 moveto
8 f0
(}) show
0 662.2 moveto
8 f0
( ) show
0 644.6 moveto
8 f0
(BOOL) show
0 627 moveto
8 f0
(ChequeaError \() show
0 609.4 moveto
8 f0
(HANDLE Precio,) show
0 591.8 moveto
8 f0
(FILE *f,) show
0 574.2 moveto
8 f0
(BOOL EsGlobal \)) show
0 556.6 moveto
8 f0
({) show
0 539 moveto
8 f0
(char *MensajeError;) show
0 521.4 moveto
8 f0
(BOOL CodigoError;) show
0 503.8 moveto
8 f0
( ) show
0 486.2 moveto
8 f0
(CodigoError= EsGlobal ? pGloError \(&MensajeError\) : pError \(Precio, &MensajeError\);) show
0 468.6 moveto
8 f0
( ) show
0 451 moveto
8 f0
(if \(CodigoError & BDCERR_CORRECTO\)) show
0 433.4 moveto
8 f0
(return TRUE;) show
0 415.8 moveto
8 f0
(if \(CodigoError & BDCERR_BASE_DATOS\)) show
0 398.2 moveto
8 f0
(fprintf \(f,"ERROR: %s\\n",MensajeError\);) show
0 380.6 moveto
8 f0
(if \(CodigoError & BDCERR_PARAMETRO\)) show
0 363 moveto
8 f0
(fprintf \(f,"ERROR: El par\341metro no existe\\n"\);) show
0 345.4 moveto
8 f0
(if \(CodigoError & BDCERR_OPCION\)) show
0 327.8 moveto
8 f0
(fprintf \(f,"ERROR: La opci\363n no existe\\n"\);) show
0 310.2 moveto
8 f0
(if \(CodigoError & BDCERR_MAX_OPCIONES\)) show
0 292.6 moveto
8 f0
(fprintf \(f,"ERROR: Se alcanz\363 el m\341ximo n\372mero de opciones \(62\)\\n"\);) show
0 275 moveto
8 f0
(if \(CodigoError & BDCERR_NO_LEIDO\)) show
0 257.4 moveto
8 f0
(fprintf \(f,"ERROR: El concepto param\351trico no fue le\355do\\n"\);) show
0 239.8 moveto
8 f0
(if \(CodigoError & BDCERR_NO_CALCULADO\)) show
0 222.2 moveto
8 f0
(fprintf \(f,"ERROR: El derivado param\351trico no fue calculado\\n"\);) show
0 204.6 moveto
8 f0
(if \(CodigoError & BDCERR_DESCOMPOSICION\)) show
0 187 moveto
8 f0
(fprintf \(f,"ERROR: No existe un elemento de la descomposici\363n\\n"\);) show
0 169.4 moveto
8 f0
(if \(CodigoError & BDCERR_SIN_CODIGO\)) show
0 151.8 moveto
8 f0
(fprintf \(f,"ERROR: El concepto no tiene CODIGO definido\\n"\);) show
0 134.2 moveto
8 f0
(if \(CodigoError & BDCERR_SIN_MEMORIA\)) show
0 116.6 moveto
8 f0
(fprintf \(f,"ERROR: Memoria insuficiente\\n"\);) show
0 99 moveto
8 f0
(if \(CodigoError & BDCERR_CONCEPTO_NULO\)) show
0 81.4 moveto
8 f0
(fprintf \(f,"ERROR: El concepto es err\363neo\\n"\);) show
pagelevel restore
showpage
%%Page: 94 94
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 752.8 moveto
8 f0
(return FALSE;) show
0 735.2 moveto
8 f0
(}) show
0 715.8 moveto
10 f0
(2.1.3. Archivo ?programa.c?) show
0 695.6 moveto
8 f0
( ) show
0 678 moveto
8 f0
(#define STRICT) show
0 660.4 moveto
8 f0
(#include <windows.h>) show
0 642.8 moveto
8 f0
(#include <stdio.h>) show
0 625.2 moveto
8 f0
(#include <conio.h>) show
0 607.6 moveto
8 f0
(#include "programa.h") show
0 590 moveto
8 f0
( ) show
0 572.4 moveto
8 f0
(int main \(void\) {) show
0 554.8 moveto
8 f0
( ) show
0 537.2 moveto
8 f0
(HANDLE Precio=\(HANDLE\)0, PrecioTmp=\(HANDLE\)0;) show
0 519.6 moveto
8 f0
(HINSTANCE hLib=\(HINSTANCE\)0;) show
0 502 moveto
8 f0
(FILE *fSalida;) show
0 484.4 moveto
8 f0
(char *err, codigo[20];) show
0 466.8 moveto
8 f0
(const char *texto;) show
0 449.2 moveto
8 f0
(char *Precios [] = {"ABPH.1$", "SBRG.1$", "EADR.3$", "NoExiste"};) show
0 431.6 moveto
8 f0
(int nPrecios = 4;) show
0 414 moveto
8 f0
(int i,j,k;) show
0 396.4 moveto
8 f0
(long limite,nParGlobales=0,ListaOpcGlobales[20];) show
0 378.8 moveto
8 f0
(long nPar,nOpc[20],ListaOpc[20],ListaOpc2[20];) show
0 361.2 moveto
8 f0
(double numero;) show
0 343.6 moveto
8 f0
( ) show
0 326 moveto
8 f0
(printf \("\\nEJEMPLO DE PROGRAMA QUE ACCEDE A LA BASE \\"BASE.DLL\\"\\n"\);) show
0 308.4 moveto
8 f0
(printf \("LOS RESULTADOS SE ESCRIBEN EN EL ARCHIVO \\"SALIDA.TXT\\"\\n"\);) show
0 290.8 moveto
8 f0
( ) show
0 273.2 moveto
8 f0
(if \( !\(fSalida = fopen \("SALIDA.TXT", "wt"\)\) \) {) show
0 255.6 moveto
8 f0
(printf \("\\nERROR: Imposible crear el archivo de salida\\n"\);) show
0 238 moveto
8 f0
(printf \("\\n\\nPROGRAMA FINALIZADO\\nPulse una tecla\\n"\);) show
0 220.4 moveto
8 f0
(getch\(\);) show
0 202.8 moveto
8 f0
(return FALSE;) show
0 185.2 moveto
8 f0
(}) show
0 167.6 moveto
8 f0
(fprintf \(fSalida,"\\nEJEMPLO DE PROGRAMA QUE ACCEDE A LA BASE \\"BASE.DLL\\"\\n"\);) show
0 150 moveto
8 f0
( ) show
0 132.4 moveto
8 f0
(if \(!AbreDll\("BASE.DLL", &hLib, &err\)\) {) show
0 114.8 moveto
8 f0
(fprintf \(fSalida,"\\nERROR: %s\\n", err\);) show
0 97.2 moveto
8 f0
(printf \("\\n\\nPROGRAMA FINALIZADO\\nPulse una tecla\\n"\);) show
0 79.6 moveto
8 f0
(getch\(\);) show
pagelevel restore
showpage
%%Page: 95 95
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 751 moveto
8 f0
(return FALSE;) show
0 733.4 moveto
8 f0
(}) show
0 715.8 moveto
8 f0
( ) show
0 698.2 moveto
8 f0
(// Lectura del Param\351trico Global) show
0 680.6 moveto
8 f0
(printf \("\\nBUSCANDO EL PARAMETRICO GLOBAL..."\);) show
0 663 moveto
8 f0
(if \( !\(ChequeaError \(\(HANDLE\)0, fSalida, TRUE\)\) \) {) show
0 645.4 moveto
8 f0
(printf \("\\nLEYENDO EL PARAMETRICO GLOBAL..."\);) show
0 627.8 moveto
8 f0
(nParGlobales = pGloParNumero\(\);) show
0 610.2 moveto
8 f0
(if \(nParGlobales==ERRONEO\)) show
0 592.6 moveto
8 f0
(ChequeaError \(\(HANDLE\)0, fSalida, TRUE\);) show
0 575 moveto
8 f0
(fprintf \(fSalida,"\\nPrecio Global: N\372mero de par\341metros: %ld\\n", nParGlobales\);) show
0 557.4 moveto
8 f0
(for \(j=0; j<nParGlobales; j++\) {) show
0 539.8 moveto
8 f0
(ListaOpcGlobales[j]=0;) show
0 522.2 moveto
8 f0
(if \(!\(texto=pGloParRotulo\(j\)\)\)) show
0 504.6 moveto
8 f0
(ChequeaError \(\(HANDLE\)0, fSalida, TRUE\);) show
0 487 moveto
8 f0
(else) show
0 469.4 moveto
8 f0
(fprintf \(fSalida,"\\nPar\341metro %d: R\363tulo: %s\\n", j+1, texto\);) show
0 451.8 moveto
8 f0
(limite=pGloOpcNumero\(j\);) show
0 434.2 moveto
8 f0
(if \(limite==ERRONEO\)) show
0 416.6 moveto
8 f0
(ChequeaError \(\(HANDLE\)0, fSalida, TRUE\);) show
0 399 moveto
8 f0
(for \(k=0; k<limite; k++\) {) show
0 381.4 moveto
8 f0
(if \(!\(texto=pGloOpcRotulo\(j,k\)\)\)) show
0 363.8 moveto
8 f0
(ChequeaError \(\(HANDLE\)0, fSalida, TRUE\);) show
0 346.2 moveto
8 f0
(else) show
0 328.6 moveto
8 f0
(fprintf \(fSalida,"\\tOpci\363n %d: R\363tulo: %s\\n", k, texto\);) show
0 311 moveto
8 f0
(}) show
0 293.4 moveto
8 f0
(}) show
0 275.8 moveto
8 f0
(pGloCalcula \(ListaOpcGlobales\);) show
0 258.2 moveto
8 f0
(}) show
0 240.6 moveto
8 f0
(// Lectura de los precios) show
0 223 moveto
8 f0
(for \(i=0; i<nPrecios; i++\) {) show
0 205.4 moveto
8 f0
(printf \("\\n\\nBUSCANDO EL PRECIO \\"%s\\"...", Precios[i]\);) show
0 187.8 moveto
8 f0
(if \( \(Precio = pLee \(Precios[i]\)\) == \(HANDLE\) 0 \) {) show
0 170.2 moveto
8 f0
(fprintf \(fSalida,"\\nERROR: El precio \\"%s\\" no existe\\n", Precios[i]\);) show
0 152.6 moveto
8 f0
(continue;) show
0 135 moveto
8 f0
(}) show
0 117.4 moveto
8 f0
( ) show
0 99.8 moveto
8 f0
(// R\363tulos de Par\341metros y Opciones) show
0 82.2 moveto
8 f0
(printf \("\\nLEYENDO EL PRECIO \\"%s\\"...", Precios[i]\);) show
pagelevel restore
showpage
%%Page: 96 96
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.6 moveto
8 f0
(nPar = pParNumero\(Precio\);) show
0 736 moveto
8 f0
(if \(nPar==ERRONEO\)) show
0 718.4 moveto
8 f0
(ChequeaError \(Precio, fSalida, FALSE\);) show
0 700.8 moveto
8 f0
(else) show
0 683.2 moveto
8 f0
(fprintf \(fSalida, "\\nPrecio \\"%s\\": N\372mero de par\341metros: %ld\\n",) show
0 665.6 moveto
8 f0
(Precios[i], nPar\);) show
0 648 moveto
8 f0
(for \(j=0; j<nPar; j++\) {) show
0 630.4 moveto
8 f0
(if \(!\(texto=pParRotulo\(Precio,j\)\)\)) show
0 612.8 moveto
8 f0
(ChequeaError \(Precio, fSalida, FALSE\);) show
0 595.2 moveto
8 f0
(else) show
0 577.6 moveto
8 f0
(fprintf \(fSalida,"\\nPar\341metro %d: R\363tulo: %s\\n", j+1, texto\);) show
0 560 moveto
8 f0
(nOpc[j]=pOpcNumero\(Precio,j\);) show
0 542.4 moveto
8 f0
(if \(nOpc[j]==ERRONEO\)) show
0 524.8 moveto
8 f0
(ChequeaError \(Precio, fSalida, FALSE\);) show
0 507.2 moveto
8 f0
(ListaOpc[j]=0;) show
0 489.6 moveto
8 f0
(for \(k=0; k<nOpc[j]; k++\) {) show
0 472 moveto
8 f0
(if \(!\(texto=pOpcRotulo\(Precio,j,k\)\)\)) show
0 454.4 moveto
8 f0
(ChequeaError \(Precio, fSalida, FALSE\);) show
0 436.8 moveto
8 f0
(else) show
0 419.2 moveto
8 f0
(fprintf \(fSalida,"\\tOpci\363n %d: R\363tulo: %s\\n", k+1, texto\);) show
0 401.6 moveto
8 f0
(}) show
0 384 moveto
8 f0
(}) show
0 366.4 moveto
8 f0
( ) show
0 348.8 moveto
8 f0
(//Listado de todas las combinaciones param\351tricas) show
0 331.2 moveto
8 f0
(printf \("\\nCALCULANDO EL PRECIO \\"%s\\"...", Precios[i]\);) show
0 313.6 moveto
8 f0
(do {) show
0 296 moveto
8 f0
(if \(pValida \(Precio, ListaOpc\)==ERRONEO\) {) show
0 278.4 moveto
8 f0
(fprintf \(fSalida,"\\n"\);) show
0 260.8 moveto
8 f0
(ChequeaError \(Precio, fSalida, FALSE\);) show
0 243.2 moveto
8 f0
(fprintf \(fSalida,"\(CODIGO : %s\)\\n", pCodigo\(Precio\)\);) show
0 225.6 moveto
8 f0
(goto siguiente;) show
0 208 moveto
8 f0
(}) show
0 190.4 moveto
8 f0
(pCalcula \(Precio, ListaOpc\);) show
0 172.8 moveto
8 f0
(if \(!\(texto=pCodigo\(Precio\)\)\) {) show
0 155.2 moveto
8 f0
(ChequeaError \(Precio, fSalida, FALSE\);) show
0 137.6 moveto
8 f0
(sprintf \(codigo,""\);) show
0 120 moveto
8 f0
(} else) show
0 102.4 moveto
8 f0
(strcpy \(codigo, texto\);) show
0 84.8 moveto
8 f0
(if \(\(PrecioTmp=pDecodifica \(codigo, ListaOpc2\)\) == \(HANDLE\)0\)) show
pagelevel restore
showpage
%%Page: 97 97
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(ChequeaError \(Precio, fSalida, FALSE\);) show
0 736.2 moveto
8 f0
(pCierra \(PrecioTmp\);) show
0 718.6 moveto
8 f0
(fprintf \(fSalida,"\\nCODIGO: %s\\n", codigo\);) show
0 701 moveto
8 f0
(fprintf \(fSalida,"OPCIONES: "\);) show
0 683.4 moveto
8 f0
(for \(j=0; j<nPar; j++\)) show
0 665.8 moveto
8 f0
(fprintf \(fSalida,"%d ",ListaOpc2[j]\);) show
0 648.2 moveto
8 f0
(if \(!\(texto=pResumen\(Precio\)\)\)) show
0 630.6 moveto
8 f0
(ChequeaError \(Precio, fSalida, FALSE\);) show
0 613 moveto
8 f0
(else) show
0 595.4 moveto
8 f0
(fprintf \(fSalida,"\\nRESUMEN:%s\\n", texto\);) show
0 577.8 moveto
8 f0
(if \(!\(texto=pTexto\(Precio\)\)\)) show
0 560.2 moveto
8 f0
(ChequeaError \(Precio, fSalida, FALSE\);) show
0 542.6 moveto
8 f0
(else) show
0 525 moveto
8 f0
(fprintf \(fSalida,"TEXTO:%s\\n", texto\);) show
0 507.4 moveto
8 f0
(if \(!\(texto=pPliego\(Precio\)\)\)) show
0 489.8 moveto
8 f0
(ChequeaError \(Precio, fSalida, FALSE\);) show
0 472.2 moveto
8 f0
(else) show
0 454.6 moveto
8 f0
(fprintf \(fSalida,"PLIEGO:%s\\n", texto\);) show
0 437 moveto
8 f0
( ) show
0 419.4 moveto
8 f0
(limite=pDesNumero\(Precio\);) show
0 401.8 moveto
8 f0
(if \(limite==ERRONEO\)) show
0 384.2 moveto
8 f0
(ChequeaError \(Precio, fSalida, FALSE\);) show
0 366.6 moveto
8 f0
(else if \(limite\) {) show
0 349 moveto
8 f0
(fprintf \(fSalida,"DESCOMPOSICION:\\n"\);) show
0 331.4 moveto
8 f0
(for \(j=0; j<limite; j++\) {) show
0 313.8 moveto
8 f0
(if \(!\(texto=pDesCodigo\(Precio,j\)\)\)) show
0 296.2 moveto
8 f0
(ChequeaError \(Precio, fSalida, FALSE\);) show
0 278.6 moveto
8 f0
(else if \(pRendimiento\(Precio,j,&numero\)==ERRONEO\)) show
0 261 moveto
8 f0
(ChequeaError \(Precio, fSalida, FALSE\);) show
0 243.4 moveto
8 f0
(else) show
0 225.8 moveto
8 f0
(fprintf \(fSalida,"\\t%2d %-10s \\t%10.3lf\\n", j+1, texto, numero\);) show
0 208.2 moveto
8 f0
(}) show
0 190.6 moveto
8 f0
(} else {) show
0 173 moveto
8 f0
(if \(pPrecio\(Precio, &numero\)==ERRONEO\)) show
0 155.4 moveto
8 f0
(ChequeaError \(Precio, fSalida, FALSE\);) show
0 137.8 moveto
8 f0
(else) show
0 120.2 moveto
8 f0
(fprintf \(fSalida,"PRECIO:%.2lf\\n", numero\);) show
0 102.6 moveto
8 f0
(}) show
0 85 moveto
8 f0
( ) show
pagelevel restore
showpage
%%Page: 98 98
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(siguiente: ) show
0 736.2 moveto
8 f0
(for \(j=nPar-1; j>=0; j--\) {) show
0 718.6 moveto
8 f0
(if \(ListaOpc[j]<nOpc[j]-1\) {) show
0 701 moveto
8 f0
(ListaOpc[j]++;) show
0 683.4 moveto
8 f0
(break;) show
0 665.8 moveto
8 f0
(} else {) show
0 648.2 moveto
8 f0
(ListaOpc[j]=0;) show
0 630.6 moveto
8 f0
(}) show
0 613 moveto
8 f0
(}) show
0 595.4 moveto
8 f0
(if \(j<0\) break;) show
0 577.8 moveto
8 f0
(} while \(TRUE\);) show
0 560.2 moveto
8 f0
( ) show
0 542.6 moveto
8 f0
(pCierra \(Precio\);) show
0 525 moveto
8 f0
(}) show
0 507.4 moveto
8 f0
( ) show
0 489.8 moveto
8 f0
(//Ejemplo de decodificar) show
0 472.2 moveto
8 f0
(printf \("\\n\\nDECODIFICANDO EL PRECIO \\"SBRG.1_38\\"..."\);) show
0 454.6 moveto
8 f0
(if \(\(Precio=pDecodifica\("SBRG.1_38",ListaOpc2\)\)==\(HANDLE\)0\)) show
0 437 moveto
8 f0
(ChequeaError \(Precio, fSalida, FALSE\);) show
0 419.4 moveto
8 f0
(else {) show
0 401.8 moveto
8 f0
(if \(!\(texto=pCodigo\(Precio\)\)\) {) show
0 384.2 moveto
8 f0
(ChequeaError \(Precio, fSalida, FALSE\);) show
0 366.6 moveto
8 f0
(sprintf \(codigo,""\);) show
0 349 moveto
8 f0
(} else) show
0 331.4 moveto
8 f0
(strcpy \(codigo, texto\);) show
0 313.8 moveto
8 f0
(nPar = pParNumero\(Precio\);) show
0 296.2 moveto
8 f0
(if \(nPar==ERRONEO\)) show
0 278.6 moveto
8 f0
(ChequeaError \(Precio, fSalida, FALSE\);) show
0 261 moveto
8 f0
(fprintf \(fSalida,"\\n\\nDecodificando SBRG.1_38:"\);) show
0 243.4 moveto
8 f0
(fprintf \(fSalida,"\\nCODIGO DEL CONCEPTO PARAMETRICO: %s\\n", codigo\);) show
0 225.8 moveto
8 f0
(fprintf \(fSalida,"OPCIONES: "\);) show
0 208.2 moveto
8 f0
(for \(j=0; j<nPar; j++\)) show
0 190.6 moveto
8 f0
(fprintf \(fSalida,"%d ",ListaOpc2[j]\);) show
0 173 moveto
8 f0
( ) show
0 155.4 moveto
8 f0
(}) show
0 137.8 moveto
8 f0
(pCierra \(Precio\);) show
0 120.2 moveto
8 f0
( ) show
0 102.6 moveto
8 f0
(fcloseall\(\);) show
0 85 moveto
8 f0
( ) show
pagelevel restore
showpage
%%Page: 99 99
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 481 0 rlineto 0 689 rlineto -481 0 rlineto  closepath clip newpath
0 753.8 moveto
8 f0
(if \(!CierraDll \(\(HMODULE\)hLib, &err\) \) {) show
0 736.2 moveto
8 f0
(fprintf \(fSalida,"\\nERROR: %s\\n", err\);) show
0 718.6 moveto
8 f0
(printf \("\\n\\nPROGRAMA FINALIZADO\\nPulse una tecla\\n"\);) show
0 701 moveto
8 f0
(getch\(\);) show
0 683.4 moveto
8 f0
(return FALSE;) show
0 665.8 moveto
8 f0
(}) show
0 648.2 moveto
8 f0
(printf \("\\n\\nPROGRAMA FINALIZADO\\nPulse una tecla\\n"\);) show
0 630.6 moveto
8 f0
(getch\(\);) show
0 613 moveto
8 f0
(return TRUE;) show
0 595.4 moveto
8 f0
(}) show
0 574.2 moveto
12 f0
( ) show
pagelevel restore
showpage
%%EOF
