//RegJustPre.cxx

#include "RegJustPre.h"
#include "bibXCBasica/src/texto/latex.h"

RegJustPre::RegJustPre(void)
  : codigo(""),rdto(0.0),unidad(""),titulo(""),es_porcentaje(false),unitario(0.0),sobre(0.0) {}

RegJustPre::RegJustPre(const std::string & cod,const ppl_precio4 &rd,const std::string &ud,const std::string &tit,const bool &esporc,const ppl_precio &unit,const ppl_precio3 &b)
  : codigo(cod),rdto(rd),unidad(ud),titulo(tit),es_porcentaje(esporc),unitario(unit),sobre(b) {}

void RegJustPre::SetBase(const ppl_precio3 &b)
  { sobre= b; }
ppl_precio3 RegJustPre::Total(void) const
  {
    ppl_precio3 retval(base());
    retval*= rdto;
    return retval;
  }
void RegJustPre::ImprLtxJustPre(std::ostream &os) const
  {
    os << ascii2latex(codigo) << " & "
       << rdto.EnHumano() << " & " //Escribe el rendimiento
       << ascii2latex(unidad) << " & "
       << ascii2latex(titulo) << " & ";
    if(es_porcentaje)
      os << unitario.EnHumano() << ltx_porciento; //Porcentaje
    else
      os << unitario.EnHumano(); //Precio unitario
    os << " & " << Total().EnHumano() << ltx_fin_reg << std::endl;
  }

void RegJustPre::ImprLtxCP2(std::ostream &os) const
  {
    os << " & & " << ascii2latex(titulo) << " & ";
    if(es_porcentaje) os << Total().EnHumano(); //Total.
      os << ltx_fin_reg << std::endl;
  }

